{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/es/SelectableContext.js","webpack:///./node_modules/react-bootstrap/es/TabContext.js","webpack:///./node_modules/fabric/dist/fabric.js","webpack:///./node_modules/uncontrollable/index.js","webpack:///./node_modules/uncontrollable/utils.js","webpack:///./node_modules/react-bootstrap/es/TabContainer.js","webpack:///./node_modules/react-bootstrap/es/TabContent.js","webpack:///./node_modules/dom-helpers/transition/properties.js","webpack:///./node_modules/dom-helpers/util/camelizeStyle.js","webpack:///./node_modules/react-bootstrap/es/Fade.js","webpack:///./node_modules/react-bootstrap/es/utils/triggerBrowserReflow.js","webpack:///./node_modules/react-bootstrap/es/TabPane.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/react-bootstrap/es/utils/createChainedFunction.js","webpack:///./node_modules/react-bootstrap/es/SafeAnchor.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/prop-types-extra/lib/isRequiredForA11y.js","webpack:///./node_modules/@restart/hooks/useEventCallback.js","webpack:///./node_modules/@restart/hooks/useCommittedRef.js","webpack:///./node_modules/prop-types-extra/lib/all.js","webpack:///./node_modules/prop-types-extra/lib/utils/createChainableTypeChecker.js","webpack:///./node_modules/uncontrollable/hook.js","webpack:///./node_modules/dom-helpers/query/querySelectorAll.js","webpack:///./node_modules/@restart/context/mapContextToProps.js","webpack:///./node_modules/dom-helpers/transition/end.js","webpack:///./node_modules/dom-helpers/style/index.js","webpack:///./node_modules/dom-helpers/util/camelize.js","webpack:///./node_modules/dom-helpers/util/hyphenateStyle.js","webpack:///./node_modules/dom-helpers/util/hyphenate.js","webpack:///./node_modules/dom-helpers/style/getComputedStyle.js","webpack:///./node_modules/dom-helpers/style/removeStyle.js","webpack:///./node_modules/dom-helpers/transition/isTransform.js","webpack:///./node_modules/react-transition-group/Transition.js","webpack:///./node_modules/react-transition-group/utils/PropTypes.js","webpack:///./node_modules/react-bootstrap/es/ButtonToolbar.js","webpack:///./node_modules/react-bootstrap/es/Button.js","webpack:///./node_modules/react-bootstrap/es/Col.js","webpack:///./node_modules/react-bootstrap/es/Tab.js","webpack:///./node_modules/react-bootstrap/es/NavbarContext.js","webpack:///./node_modules/react-bootstrap/es/CardContext.js","webpack:///./node_modules/react-bootstrap/es/NavContext.js","webpack:///./node_modules/react-bootstrap/es/AbstractNav.js","webpack:///./node_modules/react-bootstrap/es/NavItem.js","webpack:///./node_modules/react-bootstrap/es/AbstractNavItem.js","webpack:///./node_modules/react-bootstrap/es/NavLink.js","webpack:///./node_modules/react-bootstrap/es/Nav.js","webpack:///./node_modules/react-bootstrap/es/utils/ElementChildren.js","webpack:///./node_modules/react-bootstrap/es/Tabs.js"],"names":["__webpack_require__","d","__webpack_exports__","makeEventKey","react__WEBPACK_IMPORTED_MODULE_0__","SelectableContext","n","a","createContext","eventKey","href","String","TabContext","Buffer","global","sqrt","atan2","pow","abs","PiBy180","PiBy2","proto","min","max","degreesToRadians","originXOffset","originYOffset","clone","toFixed","multipleSpacesRegex","setObjectScaleOverridden","fabric","version","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","canvas","targetCanvas","ctx","getContext","translate","height","scale","sourceY","drawImage","width","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","Uint8Array","this","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","exports","document","window","HTMLDocument","implementation","createHTMLDocument","jsdom","decodeURIComponent","features","FetchExternalResources","jsdomImplForWrapper","implForWrapper","nodeCanvas","Canvas","defaultView","DOMParser","isTouchSupported","navigator","maxTouchPoints","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","initFilterBackend","isWebglSupported","console","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","indexOf","util","array","fill","observe","arguments","length","prop","on","push","stopObserving","call","fire","options","listenersForEvent","i","len","filter","value","Observable","off","trigger","Collection","_objects","add","apply","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","object","index","nonSplicing","objects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","context","getObjects","type","concat","o","item","isEmpty","size","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","set","_initGradient","filler","property","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","obj","_set","key","get","toggle","Math","PI","cos","angle","sin","sign","removeFromArray","idx","getRandomInt","floor","random","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","transformPoint","p","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","yPoints","minY","left","top","invertTransform","r","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","slice","resolveNamespace","getSvgAttributes","attributes","parts","split","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","src","substring","loadImageInDom","div","createElement","style","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","forEach","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","centerPoint","Group","sourcePath","populateWithProperties","destination","properties","Object","prototype","toString","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","copyCanvasElement","newCanvas","toDataURL","canvasEl","format","quality","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","target","flipX","flipY","saveObjectTransform","fn","match","isTransparent","tolerance","_isTransparent","imageData","getImageData","l","data","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","aspectRatioAttrs","pop","alignX","alignY","clearFabricFontCache","fontFamily","toLowerCase","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","_join","Array","join","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","s","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","result","mDelta","mT","th3","segmentToBezier","th2","costh2","sinth2","costh3","sinth3","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","c","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","drawArc","fx","fy","coords","segs","segsNorm","bezierCurveTo","getBoundsOfArc","tx","ty","bound","find","byProperty","condition","k","invoke","method","args","value1","value2","extend","deep","Element","hasOwnProperty","getWholeChar","str","code","charCodeAt","isNaN","next","prev","replace","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","_this","superClassMethod","createClass","initialize","shift","subclasses","unknown","areHostMethods","methodNames","test","getElement","setElement","uid","getUniqueId","element","__uniqueID","createWrappedHandler","e","event","addListener","removeListener","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","listeners","handlers","addEventListener","removeEventListener","listener","wrappedHandler","createListener","attachEvent","detachEvent","existingHandler","handlersForEvent","createDispatcher","pointerX","clientX","pointerY","clientY","_getPointer","pageProp","clientProp","pointer","eventTouchProp","getPointer","srcElement","scroll","getScrollLeftTop","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","zoom","setStyle","styles","elementStyle","cssText","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","toArray","arrayLike","childNodes","err","makeElement","tagName","el","className","htmlFor","setAttribute","docElement","body","scrollLeft","scrollTop","host","nodeType","arr","getComputedStyle","attr","undefined","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","getById","id","getElementById","addClass","wrapElement","wrapper","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","parseInt","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","_canvas","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","emptyFn","request","onComplete","xhr","XMLHttpRequest","parameters","param","addParamToUrl","open","setRequestHeader","send","warn","noop","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","requestAnimFrame","animate","timestamp","time","start","Date","duration","finish","onChange","abort","easing","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","end","pos","color","posValue","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","letter-spacing","paint-order","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","clip-path","clip-rule","vector-effect","colorAttributes","stroke","normalizeAttr","normalizeValue","parentAttributes","parsed","isArray","map","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","RegExp","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","matcher","classNames","getAttribute","elementById","node","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","clipPaths","skewMatrix","matrix","commaWsp","reTransformList","reTransform","attributeValue","matrices","m","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","viewboxTransform","firstChild","recursivelyParseGradientsXlink","gradient","referencedGradient","substr","hasAttribute","children","referenceClone","cloneNode","removeAttribute","parseSVGDocument","parsingOptions","attrs","xlink","el2","currentTrans","oldLength","el3","nodeValue","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","parseAttributes","parentFontSize","ownAttributes","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","parse","chunk","pair","trim","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","text","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","ActiveXObject","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","parser","parseFromString","regexUrl","numElements","createObjects","createObject","findTag","fromElement","createCallback","checkIfDone","resolveGradient","Image","_originalElement","_removeTransformMatrix","resolveClipPath","extractPropertyDefinition","storage","lastIndex","gradientDef","createClipPathCallback","container","_newObj","fillRule","clipRule","objTransformInv","gTransform","clipPath","calcTransformMatrix","setPositionByOrigin","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","sort","pathOffset","reverse","minRadius","percentageShift","colorStop","toLive","createLinearGradient","createRadialGradient","instance","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","NUM_FRACTION_DIGITS","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","Error","renderAndResetBound","renderAndReset","bind","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","globalCompositeOperation","zoomX","zoomY","_cacheCanvas","cacheTranslationX","cacheTranslationY","render","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","row","rowIndex","charIndex","fontList","_setSVGObject","finalWidth","finalHeight","sendToBack","objs","activeSelection","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","needsFullRender","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","original","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","normalizedPointer","targetRelativeX","targetRelativeY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","evented","selectable","centerTransform","action","altKey","_getOriginFromCorner","corner","_getActionFromCorner","alreadySelected","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","forbidScalingX","forbidScalingY","changeX","changeY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","globalPointer","isEditing","subTarget","objToCheck","pointerToUse","subTargetCheck","ignoreZoom","_absolutePointer","_pointer","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","opt","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","clearContextTop","_setCursorFromEvent","cursorOffset","mr","mb","ml","addEventOptions","passive","checkClick","which","button","cursorMap","_bindEvents","addOrRemove","functor","eventjsFunctor","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","eventsBound","_simpleEventHandler","self","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","__onOrientationChange","__onShake","__onLongPress","preventDefault","_fireEnterLeaveEvents","stopPropagation","_cacheTransformEventData","_handleEvent","_resetTransformEventData","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","shouldRender","isClick","_target","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","_maybeGroupObjects","isMoving","__corner","eventType","subTargets","absolutePointer","_scaling","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","_previousPointer","shouldGroup","_shouldGroup","_handleGrouping","saveState","touches","_transformObject","_fireOverOutEvents","fireSynteticInOutEvents","targetName","canvasEvtOut","evtOut","canvasEvtIn","evtIn","config","inOpt","outOpt","inFires","oldTarget","targetChanged","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","multiplier","toCanvasElement","cropping","scaledWidth","scaledHeight","originalWidth","originalHeight","newZoom","vp","originalInteractive","originalContext","newVp","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","strokeDashOffset","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","strokeUniform","dirty","paintFirst","stateProperties","cacheProperties","inverted","absolutePositioned","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","setTransform","calcOwnMatrix","_removeDefaultValues","getObjectScaling","scaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","drawCacheOnCanvas","_removeCacheCanvas","drawObject","propertySet","isCacheDirty","needsItsOwnCache","ownCaching","willDrawShadow","drawClipPathOnCache","originalFill","originalStroke","_setClippingProperties","_setStrokeStyles","_setFillStyles","_drawClipPath","skipCanvas","_removeShadow","decl","lineDashOffset","dashArray","alternative","getLineDash","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","utils","origParams","originalShadow","withoutTransform","withoutShadow","boundingRect","getBoundingRect","shadowOffset","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","enlivedProps","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","w","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","skipAbsolute","_setCornerCoords","transformMatrixKey","prefix","cache","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","dimX","dimY","noSkew","_finalizeDiemensions","bbox","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","deltaY","overline","underline","linethrough","getSvgCommons","getSvgTransform","full","additionalTransform","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","_toSVG","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","clipPathMarkup","noStyle","withShadow","styleInfo","shadowInfo","vectorEffect","absoluteClipPath","addPaintOrder","saveProps","props","tmpObj","dashedPropertySet","keys","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","svgString","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","calcDim","_calcDimensions","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","_getOffsetTransform","digits","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","_includeDefaultValues","objsToObject","originalDefaults","_obj","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","enlivedClipPath","toGroup","newGroup","childrenOverride","srcFromAttribute","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","removeTexture","_initConfig","applyFilters","resizeFilter","applyResizeFilters","backend","filterBackend","evictCachesForKey","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","strokeSvg","imageMarkup","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","elementToDraw","sW","sH","sX","sY","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","resources","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","startTime","drawImageTime","testContext","now","copyGLTo2D","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","uniqueId","gpuInfo","renderer","vendor","ext","getExtension","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","temp","main","mainParameter","_class","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","distance","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","some","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","char","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPostion","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLenght","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","currentActive","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","internalMarkup","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","Textbox","minWidth","dynamicMinWidth","__cachedLines","_wordJoiners","splitByGrapheme","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","getMinWidth","tw","__esModule","default","uncontrollable","Component","controlledValues","methods","displayName","name","canAcceptRef","Utils","controlledProps","PROPS_TO_OMIT","defaultKey","invariant","UncontrolledComponent","_React$Component","subClass","superClass","_len","create","propName","handlerName","_this$props","_notifying","_len2","_key2","_values","unmounted","forceUpdate","attachRef","ref","inner","__proto__","_proto","shouldComponentUpdate","componentWillMount","_this2","componentWillReceiveProps","nextProps","_this3","isProp","componentWillUnmount","_this4","_this$props2","innerRef","excluded","sourceKeys","_objectWithoutPropertiesLoose","newProps","_react","_extends","propTypes","uncontrolledPropTypes","_this$inner","WrappedComponent","forwardRef","ControlledComponent","deferControlTo","newComponent","additions","nextMethods","_interopRequireDefault","newObj","desc","defineProperty","getOwnPropertyDescriptor","_interopRequireWildcard","assign","module","component","isReactComponent","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","uncontrollable__WEBPACK_IMPORTED_MODULE_3__","uncontrollable__WEBPACK_IMPORTED_MODULE_3___default","_TabContext__WEBPACK_IMPORTED_MODULE_4__","_SelectableContext__WEBPACK_IMPORTED_MODULE_5__","TabContainer","getControlledId","getKey","getControllerId","state","tabContext","activeKey","transition","mountOnEnter","unmountOnExit","getDerivedStateFromProps","_ref","prevState","generateChildId","Provider","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_3__","classnames__WEBPACK_IMPORTED_MODULE_3___default","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_5__","TabContent","bsPrefix","as","defaultProps","animationEnd","animationDelay","animationTiming","animationDuration","animationName","transitionEnd","transitionDuration","transitionDelay","transitionTiming","transitionProperty","_inDOM","_getTransitionPropert","vendorMap","O","Moz","Webkit","ms","vendors","getTransitionProperties","_default","timing","_camelize","msPattern","_fadeStyles","fadeStyles","react_transition_group_Transition","Fade_Fade","Fade","handleEnter","offsetHeight","triggerBrowserReflow","onEnter","inheritsLoose","objectWithoutPropertiesLoose","react_default","Transition_default","esm_extends","addEndListener","end_default","innerProps","cloneElement","classnames_default","in","timeout","appear","es_Fade","TabPane","_useTabContext","react","rest","shouldTransition","aria-labelledby","useTabContext","onEntering","onEntered","onExit","onExiting","onExited","Transition","_useTabContext$as","ThemeProvider","pane","role","aria-hidden","_assertThisInitialized","ReferenceError","utils_createChainedFunction","funcs","f","acc","isTrivialHref","SafeAnchor_SafeAnchor","SafeAnchor","handleClick","handleKeyDown","disabled","tabIndex","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","RangeError","arg","encodingOrOffset","allocUnsafe","TypeError","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","isEncoding","actual","write","fromString","isBuffer","checked","val","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","configurable","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","validator","componentName","location","propFullName","componentNameSafe","propFullNameSafe","_useCommittedRef","useCallback","useRef","useEffect","validators","_createChainableTypeChecker2","_createChainableTypeChecker","validate","checkType","isRequired","chainedCheckType","fieldName","_extends2","defaultValue","propsValue","_toPropertyKey","prevProps","_useState","useState","stateValue","setState","wasProp","propsHandler","input","hint","prim","toPrimitive","_toPrimitive","maybeID","maybeClass","nameOnly","simpleSelectorRE","getElementsByClassName","querySelectorAll","maybeOpts","mapToProps","$mapContextToProps","consumers","_forwardRef","getDisplayName","ensureConsumer","Consumer","maybeArrayOfConsumers","_ref$forwardRefAs","forwardRefAs","SingleConsumer","contextTransform","propsWithRef","_extends3","reduceRight","Context","contexts","_properties","_style","onEnd","backup","fakeEvent","currentTarget","done","parseDuration","_parseDuration","mult","css","transforms","_camelizeStyle","_getComputedStyle2","getPropertyValue","_hyphenateStyle","_isTransform","_removeStyle","rHyphen","_","_hyphenate","rUpper","opener","rnumnonpx","rposition","runStyle","runtimeStyle","rsLeft","pixelLeft","removeProperty","supportedTransforms","EXITING","ENTERED","ENTERING","EXITED","UNMOUNTED","PropTypes","_reactDom","_reactLifecyclesCompat","initialStatus","parentGroup","transitionGroup","isMounting","enter","appearStatus","nextCallback","getChildContext","componentDidMount","updateStatus","componentDidUpdate","nextStatus","cancelNextCallback","getTimeouts","exit","mounting","findDOMNode","performEnter","performExit","appearing","timeouts","enterTimeout","safeSetState","onTransitionEnd","cancel","nextState","setNextCallback","doesNotHaveTimeoutOrListener","childProps","child","Children","only","contextTypes","childContextTypes","polyfill","classNamesShape","timeoutsShape","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__","ButtonToolbar","_SafeAnchor__WEBPACK_IMPORTED_MODULE_5__","Button","variant","block","classes","DEVICE_SIZES","Col","spans","brkPoint","span","order","_propValue$span","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","_TabContainer__WEBPACK_IMPORTED_MODULE_2__","_TabContent__WEBPACK_IMPORTED_MODULE_3__","_TabPane__WEBPACK_IMPORTED_MODULE_4__","Tab","Container","Content","Pane","NavbarContext","CardContext","es_NavContext","AbstractNav_AbstractNav","AbstractNav","handleSelect","parentOnSelect","nextActiveChild","getNextActiveChild","dataset","rbEventKey","_needsRefocus","listNode","navContext","activeChild","items","querySelectorAll_default","nextIndex","es_AbstractNav","mapContextToProps_default","_ref2","NavItem","es_NavItem","AbstractNavItem","navKey","isActive","handleOnclick","useEventCallback_default","es_AbstractNavItem","NavLink_defaultProps","NavLink","es_NavLink","Nav","uncontrolledProps","_classNames","navbarBsPrefix","cardHeaderBsPrefix","_useUncontrolled","hook_default","justify","navbar","navbarContext","cardContext","Item","Link","_Nav","es_Nav","func","isValidElement","Tabs_TabContainer","getDefaultActiveKey","defaultActiveKey","Tabs_Tabs","Tabs","renderTab","_child$props","title","tabClassName","_this$props$activeKey","uncontrollable_default"],"mappings":"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","file":"8-ca36c48a83286b1a6fb2.js","sourcesContent":["import React from 'react';\nvar SelectableContext = React.createContext();\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import React from 'react';\nvar TabContext = React.createContext(null);\nexport default TabContext;","/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '2.7.0' };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n  define([], function() { return fabric; });\n}\n/* _AMD_END_ */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  if (document instanceof HTMLDocument)\n    fabric.document = document;\n  else\n    fabric.document = document.implementation.createHTMLDocument(\"\");\n  fabric.window = window;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require('jsdom')\n    .jsdom(\n      decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n      { features: {\n        FetchExternalResources: ['img']\n      }\n      });\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = fabric.document.defaultView;\n  DOMParser = require('xmldom').DOMParser;\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document ||\n  (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0);\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  'fill', 'fill-opacity', 'fill-rule',\n  'opacity',\n  'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset',\n  'stroke-linejoin', 'stroke-miterlimit',\n  'stroke-opacity', 'stroke-width',\n  'id', 'paint-order', 'vector-effect',\n  'instantiated_by_use', 'clip-path'\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.canvasModule = 'canvas';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\n/**\n * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.arcToSegmentsCache = { };\n\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.boundsOfCurveCache = { };\n\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\nfabric.cachesBoundsOfCurve = true;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this._objects;\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this._objects,\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this._objects.indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function(angle) {\n      if (angle === 0) { return 1; }\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n      var angleSlice = angle / PiBy2;\n      switch (angleSlice) {\n        case 1: case 3: return 0;\n        case 2: return -1;\n      }\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function(angle) {\n      if (angle === 0) { return 0; }\n      var angleSlice = angle / PiBy2, sign = 1;\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n      switch (angleSlice) {\n        case 1: return sign;\n        case 2: return 0;\n        case 3: return -sign;\n      }\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements && elements.length === 1) {\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @param {CanvasElement} canvas to copy size and content of\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function(canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * since 2.6.0 moved from canvas instance to utility.\n     * @param {CanvasElement} canvasEl to copy size and content of\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n     * @param {Number} quality <= 1 and > 0\n     * @static\n     * @memberOf fabric.util\n     * @return {String} data url\n     */\n    toDataURL: function(canvasEl, format, quality) {\n      return canvasEl.toDataURL('image/' + format, quality);\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function (target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (fabric.arcToSegmentsCache[argsString]) {\n      return fabric.arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    fabric.arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    return [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas property in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas') {\n            destination[property] = extend({ }, source[property]);\n          }\n          else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n        return event.clientX;\n      },\n\n      pointerY = function(event) {\n        return event.clientY;\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n    var pointer, eventTouchProp = event[touchProp];\n\n    if (eventTouchProp && eventTouchProp[0]) {\n      pointer = eventTouchProp[0][clientProp];\n    }\n\n    if (typeof pointer === 'undefined') {\n      pointer = event[clientProp];\n    }\n\n    return pointer;\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  };\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n    var impl = fabric.jsdomImplForWrapper(element);\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null;\n      // unsure if necessary\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'letter-spacing':     'charSpacing',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-dashoffset':  'strokeDashOffset',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity',\n        'clip-path':          'clipPath',\n        'clip-rule':          'clipRule',\n        'vector-effect':      'strokeUniform'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n  fabric.clipPaths = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'vector-effect') {\n      value = value === 'non-scaling-stroke';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else if (attr === 'href' || attr === 'xlink:href') {\n      return value;\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = fabric.iMatrix,\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, len;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\n          attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n        // calculate additional translation to move the viewbox\n      }\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\n        // calculate additional translation to move the viewbox\n      }\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX + widthDiff) + ' ' +\n                  (minY * scaleY + heightDiff) + ') ';\n    parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n    var clipPaths = { };\n    descendants.filter(function(el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function(el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function(el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths;\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).substr(1),\n        referencedGradient = elementById(doc, xLink);\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n    gradientsAttrs.forEach(function(attr) {\n      if (!gradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, gradientDefs = { };\n      j = elList.length;\n      while (j--) {\n        el = elList[j];\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize, parentFontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      if (ownAttributes['font-size']) {\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n        ownAttributes['font-size'] = fontSize = parseUnit(ownAttributes['font-size'], parentFontSize);\n      }\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n};\n\n(function(proto) {\n  proto.parse = function() {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function() {\n    var _this = this;\n    this.elements.forEach(function(element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function(el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function(el, index) {\n    var klass = this.findTag(el);\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      }\n      catch (err) {\n        fabric.log(err);\n      }\n    }\n    else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function(index, el) {\n    var _this = this;\n    return function(obj) {\n      var _options;\n      _this.resolveGradient(obj, 'fill');\n      _this.resolveGradient(obj, 'stroke');\n      if (obj instanceof fabric.Image && obj._originalElement) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n      obj._removeTransformMatrix(_options);\n      _this.resolveClipPath(obj);\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function(obj, property, storage) {\n    var value = obj[property];\n    if (!(/^url\\(/).test(value)) {\n      return;\n    }\n    var id = this.regexUrl.exec(value)[1];\n    this.regexUrl.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function(obj, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n    if (gradientDef) {\n      obj.set(property, fabric.Gradient.fromElement(gradientDef, obj));\n    }\n  };\n\n  proto.createClipPathCallback = function(obj, container) {\n    return function(_newObj) {\n      _newObj._removeTransformMatrix();\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function(obj) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element, klass, objTransformInv, container, gTransform, options;\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(\n          element,\n          this.createClipPathCallback(obj, container),\n          this.options\n        );\n      }\n      if (container.length === 1) {\n        clipPath = container[0];\n      }\n      else {\n        clipPath = new fabric.Group(container);\n      }\n      gTransform = fabric.util.multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix()\n      );\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({ x: options.translateX, y: options.translateY }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n  };\n\n  proto.checkIfDone = function() {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function(el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = clone(this.coords, true), i, len,\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\n          offsetX = object.width / 2 - this.offsetX, offsetY = object.height / 2 - this.offsetY;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n\n      transform[4] -= offsetX;\n      transform[5] -= offsetY;\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      commonAttributes += ' gradientTransform=\"matrix(' + transform.join(' ') + ')\" ';\n\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix, i;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20, color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * if set to false, takes precedence over the object value.\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument.\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     * @deprecated since 2.3.0\n     * Use before:transform event\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    // TODO: fix stretched examples\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    cancelRequestedRender: function() {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform, path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render', { ctx: ctx, });\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      if (path) {\n        path.canvas = this;\n        // needed to setup a couple of variables\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({ forClipping: true });\n        this.drawClipPathOnCanvas(ctx);\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render', { ctx: ctx, });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function(ctx) {\n      var v = this.viewportTransform, path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'], v;\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          v = this.viewportTransform;\n          ctx.save();\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var clipPath = this.clipPath, data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude),\n      };\n      if (clipPath) {\n        data.clipPath = this._toObjectMethod(clipPath, methodName, propertiesToInclude);\n      }\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this._objects.filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n      this._setSVGObjects(markup, reviver);\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        this.createSVGClipPathMarkup(options),\n        '</defs>\\n'\n      );\n    },\n\n    createSVGClipPathMarkup: function(options) {\n      var clipPath = this.clipPath;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return  '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(options.reviver) +\n          '</clipPath>\\n';\n      }\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this._objects;\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property], vpt = this.viewportTransform, finalWidth = this.width / vpt[0],\n          finalHeight = this.height / vpt[3];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\n          ' x=\"', filler.offsetX - finalWidth / 2, '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : finalWidth ),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : finalHeight),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n          'fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.forEachObject(function(object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n      this.backgroundImage = null;\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray || []);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function (ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n          this._render();\n        }\n        else {\n          var points = this._points, length = points.length, ctx = this.canvas.contextTop;\n          // draw the curve update\n          this._saveAndTransform(ctx);\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this.oldEnd = undefined;\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n      this._points.push(point);\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n      this._setBrushStyles();\n      var color = new fabric.Color(this.color);\n      this.needsFullRender = (color.getAlpha() < 1);\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\n      path.top = position.y;\n      path.left = position.x;\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.renderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function() {\n    var ctx  = this.canvas.contextTop, i, len,\n        points = this.points, point;\n    this._saveAndTransform(ctx);\n    for (i = 0, len = points.length; i < len; i++) {\n      point = points[i];\n      ctx.fillStyle = point.fill;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n      ctx.closePath();\n      ctx.fill();\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function(sprayChunk) {\n    var ctx = this.canvas.contextTop, i, len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function() {\n    var ctx = this.canvas.contextTop, i, ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified\n   * @fires object:rotated\n   * @fires object:scaled\n   * @fires object:moved\n   * @fires object:skewed\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:skewing\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:transform\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before\n   * @fires mouse:move:before\n   * @fires mouse:up:before\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    renderTopLayer: function(ctx) {\n      ctx.save();\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      }\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n        this.contextTopDirty = true;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.originX !== 'center') {\n          if (t.originX === 'right') {\n            t.mouseXSign = -1;\n          }\n          else {\n            t.mouseXSign = 1;\n          }\n        }\n        if (t.originY !== 'center') {\n          if (t.originY === 'bottom') {\n            t.mouseYSign = -1;\n          }\n          else {\n            t.mouseYSign = 1;\n          }\n        }\n\n        t.originX = 'center';\n        t.originY = 'center';\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      // in case the target is the activeObject, we cannot execute this optimization\n      // because we need to draw controls too.\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\n        var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\n            targetRelativeX = Math.max(target.cacheTranslationX + (normalizedPointer.x * target.zoomX), 0),\n            targetRelativeY = Math.max(target.cacheTranslationY + (normalizedPointer.y * target.zoomY), 0);\n\n        var isTransparent = fabric.util.isTransparent(\n          target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\n\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false,\n      });\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     * @param {Boolean} alreadySelected true if target is already selected\n     * @param {String} corner a string representing the corner ml, mr, tl ...\n     * @param {Event} e Event object\n     * @param {fabric.Object} [target] inserted back to help overriding. Unused\n     */\n    _getActionFromCorner: function(alreadySelected, corner, e /* target */) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(alreadySelected, corner, e, target),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        // used by transation\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        // unsure they are usefull anymore.\n        // left: target.left,\n        // top: target.top,\n        theta: degreesToRadians(target.angle),\n        // end of unsure\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey],\n        original: fabric.util.saveObjectTransform(target),\n      };\n\n      this._currentTransform.original.originX = origin.x;\n      this._currentTransform.original.originY = origin.y;\n\n      this._resetCurrentTransform();\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.lockScalingX,\n          lockScalingY = target.lockScalingY,\n          lockScalingFlip = target.lockScalingFlip;\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          scaleX = localMouse.x * target.scaleX / _dim.x,\n          scaleY = localMouse.y * target.scaleY / _dim.y,\n          changeX = target.scaleX !== scaleX,\n          changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1, newScaleX, newScaleY;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = newScaleX !== target.scaleX || newScaleY !== target.scaleY;\n      target.set('scaleX', newScaleX);\n      target.set('scaleY', newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform,\n          target = t.target, constraintPosition,\n          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n      if (target.lockRotation) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\n          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (target.snapAngle > 0) {\n        var snapAngle  = target.snapAngle,\n            snapThreshold  = target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (target.angle === angle) {\n        hasRotated = false;\n      }\n      else {\n        // rotation only happen here\n        target.angle = angle;\n        // Make sure the constraints apply\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function(pointer, obj, globalPointer) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ?\n          this._normalizePointer(objToCheck.group, pointer) : pointer;\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [], opt = { e: e };\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed;\n        // added for backward compatibility\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      }\n      else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n        opt.selected = added;\n        // added for backward compatibility\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      }\n      else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: currentActives[0], e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this._activeObject.realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n\n    setViewportTransform: function (vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\n      addEventOptions = { passive: false };\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n      this.addOrRemove(addListener, 'add');\n    },\n\n    addOrRemove: function(functor, eventjsFunctor) {\n      functor(fabric.window, 'resize', this._onResize);\n      functor(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      functor(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      functor(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      functor(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      functor(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      functor(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n      functor(this.upperCanvasEl, 'dblclick', this._onDoubleClick);\n      functor(this.upperCanvasEl, 'touchstart', this._onMouseDown, addEventOptions);\n      functor(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n      functor(this.upperCanvasEl, 'dragover', this._onDragOver);\n      functor(this.upperCanvasEl, 'dragenter', this._onDragEnter);\n      functor(this.upperCanvasEl, 'dragleave', this._onDragLeave);\n      functor(this.upperCanvasEl, 'drop', this._onDrop);\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'shake', this._onShake);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      this.addOrRemove(removeListener, 'remove');\n      // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function(e) {\n      e.preventDefault();\n      var target = this._simpleEventHandler('dragover', e);\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'dblclick');\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      addListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function(target) {\n      var activeObject = this._activeObject;\n\n      if (\n        !!activeObject !== !!target ||\n        (activeObject && target && (activeObject !== target))\n      ) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      }\n      else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, transform = this._currentTransform,\n          groupSelector = this._groupSelector, shouldRender = false,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      this._cacheTransformEventData(e);\n      target = this._target;\n      this._handleEvent(e, 'up:before');\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n        this._resetTransformEventData();\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        shouldRender = transform.actionPerformed;\n      }\n\n      if (!isClick) {\n        this._maybeGroupObjects(e);\n        shouldRender || (shouldRender = this._shouldRender(target));\n      }\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n      this._groupSelector = null;\n      this._currentTransform = null;\n      // reset the target information about which corner is selected\n      target && (target.__corner = 0);\n      if (shouldRender) {\n        this.requestRenderAll();\n      }\n      else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function(eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n          };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n      if (!targets) {\n        return target;\n      }\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false,\n            pointer: this._pointer,\n            absolutePointer: this._absolutePointer,\n            transform: this._currentTransform\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target,\n          eventName,\n          options = {\n            e: e,\n            target: target,\n            transform: transform,\n          };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        if (transform.actionPerformed) {\n          eventName = this._addEventOptions(options, transform);\n          this._fire(eventName, options);\n        }\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * Mutate option object in order to add by property and give back the event name.\n     * @private\n     * @param {Object} options to mutate\n     * @param {Object} transform to inspect action from\n     */\n    _addEventOptions: function(options, transform) {\n      // we can probably add more details at low cost\n      // scale change, rotation changes, translation changes\n      var eventName, by;\n      switch (transform.action) {\n        case 'scaleX':\n          eventName = 'scaled';\n          by = 'x';\n          break;\n        case 'scaleY':\n          eventName = 'scaled';\n          by = 'y';\n          break;\n        case 'skewX':\n          eventName = 'skewed';\n          by = 'x';\n          break;\n        case 'skewY':\n          eventName = 'skewed';\n          by = 'y';\n          break;\n        case 'scale':\n          eventName = 'scaled';\n          by = 'equally';\n          break;\n        case 'rotate':\n          eventName = 'rotated';\n          break;\n        case 'drag':\n          eventName = 'moved';\n          break;\n      }\n      options.by = by;\n      return eventName;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'down:before');\n      var target = this._target;\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer;\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n        }\n      }\n      this._handleEvent(e, 'down');\n      // we must renderAll so that we update the visuals\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function() {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function(e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t,\n      });\n      // determine if it's a drag or rotate case\n      if (t.corner) {\n        this.onBeforeScaleRotate(t.target);\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n      this._handleEvent(e, 'move:before');\n      this._cacheTransformEventData(e);\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this._pointer;\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      this.fireSynteticInOutEvents(target, e, {\n        targetName: '_hoveredTarget',\n        canvasEvtOut: 'mouse:out',\n        evtOut: 'mouseout',\n        canvasEvtIn: 'mouse:over',\n        evtIn: 'mouseover',\n      });\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function(target, e) {\n      this.fireSynteticInOutEvents(target, e, {\n        targetName: '_draggedoverTarget',\n        evtOut: 'dragleave',\n        evtIn: 'dragenter',\n      });\n    },\n\n    /**\n     * Manage the syntetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSynteticInOutEvents: function(target, e, config) {\n      var inOpt, outOpt, oldTarget = this[config.targetName], outFires, inFires,\n          targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\n      if (targetChanged) {\n        inOpt = { e: e, target: target, previousTarget: oldTarget };\n        outOpt = { e: e, target: oldTarget, nextTarget: target };\n        this[config.targetName] = target;\n      }\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'wheel');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          options = {\n            target: transform.target,\n            e: e,\n            transform: transform,\n            pointer: pointer\n          };\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', options);\n          this.setCursor(options.target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, options) {\n      this.fire('object:' + eventName, options);\n      options.target.fire(eventName, options);\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      }\n      else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      }\n      else {\n        return this.defaultCursor;\n      }\n    },\n\n    actionIsDisabled: function(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      }\n      else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      }\n      else if (corner === 'mtr') {\n        return target.lockRotation;\n      }\n      else {\n        return this._isUniscalePossible(e, target) ?\n          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.angle % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({ e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      // avoid multi select when shift click on a corner\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(e),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function(e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible || currentObject.onSelect({ e: e })) {\n          continue;\n        }\n\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2))\n        ) {\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n    }\n  });\n\n})();\n\n\n(function () {\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\n          canvasEl = this.toCanvasElement(multiplier, options);\n      return fabric.util.toDataURL(canvasEl, format, quality);\n    },\n\n    /**\n     * Create a new HTMLCanvas element painted with the current canvas content.\n     * No need to resize the actual one or repaint it.\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\n     * This is an intermediary step used to get to a dataUrl but also it is usefull to\n     * create quick image copies of a canvas without passing for the dataUrl string\n     * @param {Number} [multiplier] a zoom factor.\n     * @param {Object} [cropping] Cropping informations\n     * @param {Number} [cropping.left] Cropping left offset.\n     * @param {Number} [cropping.top] Cropping top offset.\n     * @param {Number} [cropping.width] Cropping width.\n     * @param {Number} [cropping.height] Cropping height.\n     */\n    toCanvasElement: function(multiplier, cropping) {\n      multiplier = multiplier || 1;\n      cropping = cropping || { };\n      var scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          originalWidth = this.width,\n          originalHeight = this.height,\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\n          originalInteractive = this.interactive,\n          originalContext = this.contextContainer,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          canvasEl = fabric.util.createCanvasElement();\n      canvasEl.width = scaledWidth;\n      canvasEl.height = scaledHeight;\n      this.interactive = false;\n      this.viewportTransform = newVp;\n      this.width = scaledWidth;\n      this.height = scaledHeight;\n      this.calcViewportBoundaries();\n      this.contextContainer = canvasEl.getContext('2d');\n      // will be renderAllExport();\n      this.renderAll();\n      this.viewportTransform = vp;\n      this.width = originalWidth;\n      this.height = originalHeight;\n      this.calcViewportBoundaries();\n      this.contextContainer = originalContext;\n      this.interactive = originalInteractive;\n      return canvasEl;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        enlivenedObjects.forEach(function(obj, index) {\n          // we splice the array just in case some custom classes restored from JSON\n          // will add more object to canvas at canvas init.\n          _this.insertAt(obj, index);\n        });\n        _this.renderOnAddRemove = renderOnAddRemove;\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        _this.renderAll();\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.util.createCanvasElement();\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument).\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When `false`, the stoke width will scale with the object.\n     * When `true`, the stroke will always match the exact pixel size entered for stroke width.\n     * default to false\n     * @since 2.6.0\n     * @type Boolean\n     * @default false\n     * @type Boolean\n     * @default false\n     */\n    strokeUniform:              false,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst clipPath strokeUniform'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' +\n      ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'\n    ).split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n      // if canvas gets created, is empty, so dirty.\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var objectScale = this.getTotalObjectScaling(),\n          dim = this._getNonTransformedDimensions(),\n          zoomX = objectScale.scaleX,\n          zoomY = objectScale.scaleY,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly crating problem\n        // in situation in wich the cache canvas gets an upper limit\n        width: width + ALIASING_LIMIT,\n        height: height + ALIASING_LIMIT,\n        zoomX: zoomX,\n        zoomY: zoomY,\n        x: dim.x,\n        y: dim.y\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      var targetCanvas = this.canvas;\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x * zoomX / 2;\n        drawingHeight = dims.y * zoomY / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var m;\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      }\n      else {\n        m = this.calcOwnMatrix();\n      }\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeDashOffset:         this.strokeDashOffset,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS),\n          };\n\n      if (this.clipPath) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function() {\n      var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 ||\n        (this.width === 0 && this.height === 0 && this.strokeWidth === 0) ||\n        !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    renderCache: function(options) {\n      options = options || {};\n      if (!this._cacheCanvas) {\n        this._createCacheCanvas();\n      }\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns false\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' && typeof this.shadow === 'object') {\n        return true;\n      }\n      if (this.clipPath) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching &&\n      (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCache: function(ctx) {\n      var path = this.clipPath;\n      ctx.save();\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n      if (path.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      }\n      else {\n        ctx.globalCompositeOperation = 'destination-in';\n      }\n      //ctx.scale(1 / 2, 1 / 2);\n      if (path.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx, forClipping) {\n      var originalFill = this.fill, originalStroke = this.stroke;\n      if (forClipping) {\n        this.fill = 'black';\n        this.stroke = '';\n        this._setClippingProperties(ctx);\n      }\n      else {\n        this._renderBackground(ctx);\n        this._setStrokeStyles(ctx, this);\n        this._setFillStyles(ctx, this);\n      }\n      this._render(ctx);\n      this._drawClipPath(ctx);\n      this.fill = originalFill;\n      this.stroke = originalStroke;\n    },\n\n    _drawClipPath: function(ctx) {\n      var path = this.clipPath;\n      if (!path) { return; }\n      // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n      path.canvas = this.canvas;\n      path.shouldCache();\n      path._transformDone = true;\n      path.renderCache({ forClipping: true });\n      this.drawClipPathOnCache(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty ||\n          (this.clipPath && this.clipPath.absolutePositioned) ||\n          (this.statefullCache && this.hasStateChanged('cacheProperties'))\n        ) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive\n          ? decl.stroke.toLive(ctx, this)\n          : decl.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive\n          ? decl.fill.toLive(ctx, this)\n          : decl.fill;\n      }\n    },\n\n    _setClippingProperties: function(ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n      if (this.strokeUniform) {\n        ctx.setLineDash(ctx.getLineDash().map(function(value) { return value * ctx.lineWidth; }));\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var shadow = this.shadow, canvas = this.canvas,\n          multX = (canvas && canvas.viewportTransform[0]) || 1,\n          multY = (canvas && canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (canvas && canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = shadow.color;\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      if (this.strokeUniform) {\n        ctx.scale(1 / this.scaleX, 1 / this.scaleY);\n      }\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * could make use of both toDataUrl or toCanvasElement.\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var canvasEl = this.toCanvasElement(options);\n      if (callback) {\n        callback(new fabric.Image(canvasEl));\n      }\n      return this;\n    },\n\n    /**\n     * Converts an object into a HTMLCanvas element\n     * @param {Object} options Options object\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toCanvasElement: function(options) {\n      options || (options = { });\n\n      var utils = fabric.util, origParams = utils.saveObjectTransform(this),\n          originalShadow = this.shadow, abs = Math.abs,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\n\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n          boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow, scaling,\n          shadowOffset = { x: 0, y: 0 }, shadowBlur;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n        scaling = this.getObjectScaling();\n        shadowOffset.x = 2 * Math.round((abs(shadow.offsetX) + shadowBlur) * abs(scaling.scaleX));\n        shadowOffset.y = 2 * Math.round((abs(shadow.offsetY) + shadowBlur) * abs(scaling.scaleY));\n      }\n      el.width = boundingRect.width + shadowOffset.x;\n      el.height = boundingRect.height + shadowOffset.y;\n      el.width += el.width % 2 ? 2 - el.width % 2 : 0;\n      el.height += el.height % 2 ? 2 - el.height % 2 : 0;\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: false,\n        renderOnAddRemove: false,\n        skipOffscreen: false,\n      });\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n      this.shadow = originalShadow;\n      this.canvas = originalCanvas;\n      this.set(origParams).setCoords();\n      // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n\n      return canvasEl;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transformMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @param {Function} [callback] Callback to invoke when image set as a pattern\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * object.setPatternFill({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat'\n     * },canvas.renderAll.bind(canvas));\n     */\n    setPatternFill: function(options, callback) {\n      return this.set('fill', new fabric.Pattern(options, callback));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n        object.clipPath = enlivedProps[0];\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices,\n      transformPoint = fabric.util.transformPoint;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are usefull to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n          ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the objects containe the point\n     */\n    _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          vpt = this.getViewportTransform(),\n          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2, h = dim.y / 2,\n          tl = transformPoint({ x: -w, y: -h }, finalMatrix),\n          tr = transformPoint({ x: w, y: -h }, finalMatrix),\n          bl = transformPoint({ x: -w, y: h }, finalMatrix),\n          br = transformPoint({ x: w, y: h }, finalMatrix);\n      if (!absolute) {\n        var padding = this.padding, angle = degreesToRadians(this.angle),\n            cos = fabric.util.cos(angle), sin = fabric.util.sin(angle),\n            cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\n            cosPMinusSinP = cosP - sinP;\n        if (padding) {\n          tl.x -= cosPMinusSinP;\n          tl.y -= cosPSinP;\n          tr.x += cosPSinP;\n          tr.y -= cosPMinusSinP;\n          bl.x -= cosPSinP;\n          bl.y += cosPMinusSinP;\n          br.x += cosPMinusSinP;\n          br.y += cosPSinP;\n        }\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n      }\n\n      // if (!absolute) {\n      //   var canvas = this.canvas;\n      //   setTimeout(function() {\n      //     canvas.contextTop.clearRect(0, 0, 700, 700);\n      //     canvas.contextTop.fillStyle = 'green';\n      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n      //   }, 50);\n      // }\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height.\n     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = fabric.util.cos(theta), sin = fabric.util.sin(theta);\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function() {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this.calcOwnMatrix();\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this._calcTranslateMatrix(),\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(), dimX, dimY,\n          noSkew = skewX === 0 && skewY === 0;\n\n      if (this.strokeUniform) {\n        dimX = this.width;\n        dimY = this.height;\n      }\n      else {\n        dimX = dimensions.x;\n        dimY = dimensions.y;\n      }\n      if (noSkew) {\n        return this._finalizeDiemensions(dimX * this.scaleX, dimY * this.scaleY);\n      }\n      else {\n        dimX /= 2;\n        dimY /= 2;\n      }\n      var points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return this._finalizeDiemensions(bbox.width, bbox.height);\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @param Number width width of the bbox\n     * @param Number height height of the bbox\n     * @private\n     * @return {Object} .x finalized width dimension\n     * @return {Object} .y finalized height dimension\n     */\n    _finalizeDiemensions: function(width, height) {\n      return this.strokeUniform ?\n        { x: width + this.strokeWidth, y: height + this.strokeWidth }\n        :\n        { x: width, y: height };\n    },\n    /*\n     * Calculate object dimensions for controls. include padding and canvas zoom\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-dashoffset: ', strokeDashOffset, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ?\n        'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\n          '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        deltaY,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function(style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') +\n          (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function() {\n      return [\n        this.id ? 'id=\"' + this.id + '\" ' : '',\n        this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : '',\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function(full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = transform.map(function(value) {\n            return toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n          }).join(' ');\n      return 'transform=\"matrix(' + svgTransform + ')' +\n        (additionalTransform || '') + this.getSvgTransformMatrix() + '\" ';\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ')' : '';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(), { reviver: reviver });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [\n            this.getSvgTransform(true, additionalTransform),\n            this.getSvgCommons(),\n          ].join(''),\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle, withShadow = options.withShadow,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\n          absoluteClipPath = this.clipPath && this.clipPath.absolutePositioned,\n          commonPieces, markup = [], clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS'),\n          additionalTransform = options.additionalTransform;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(reviver) +\n          '</clipPath>\\n';\n      }\n      if (absoluteClipPath) {\n        markup.push(\n          '<g ', shadowInfo, this.getSvgCommons(), ' >\\n'\n        );\n      }\n      markup.push(\n        '<g ',\n        this.getSvgTransform(false),\n        !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n        ' >\\n'\n      );\n      commonPieces = [\n        styleInfo,\n        vectorEffect,\n        noStyle ? '' : this.addPaintOrder(), ' ',\n        additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : '',\n      ].join('');\n      objectMarkup[index] = commonPieces;\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!currentValue ||\n          typeof currentValue !== 'object' ||\n          (!firstPass && keys.length !== Object.keys(currentValue).length)\n      ) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n        if (key === 'canvas') {\n          continue;\n        }\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\n            styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n            styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top, styleOverride);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top, styleOverride);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height, styleOverride);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top, styleOverride);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height, styleOverride);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2, styleOverride);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2, styleOverride);\n      }\n\n      // middle-top-rotate\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var p = this.calcLinePoints();\n      return [\n        '<line ', 'COMMON_PARTS',\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString, x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        svgString = [\n          '<circle ', 'COMMON_PARTS',\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" />\\n'\n        ];\n      }\n      else {\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\n            startY = fabric.util.sin(this.startAngle) * this.radius,\n            endX = fabric.util.cos(this.endAngle) * this.radius,\n            endY = fabric.util.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n        svgString = [\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" ', 'COMMON_PARTS', ' />\\n'\n        ];\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        this.startAngle,\n        this.endAngle, false);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ].join(',');\n      return [\n        '<polygon ', 'COMMON_PARTS',\n        'points=\"', points,\n        '\" />'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      return [\n        '<ellipse ', 'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback) {\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var x = -this.width / 2, y = -this.height / 2;\n      return [\n        '<rect ', 'COMMON_PARTS',\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.rx, '\" ry=\"', this.ry,\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      var calcDim = this._calcDimensions();\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      return [\n        '<' + this.type + ' ', 'COMMON_PARTS',\n        'points=\"', points.join(''),\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polygon(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      toFixed = fabric.util.toFixed,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n        top: this.top,\n        left: this.left,\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var path = this.path.map(function(path) {\n        return path.join(' ');\n      }).join(' ');\n      return [\n        '<path ', 'COMMON_PARTS',\n        'd=\"', path,\n        '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      ];\n    },\n\n    _getOffsetTransform: function() {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' +\n          toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return '\\t' + this._createBaseClipPathSVGMarkup(\n        this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform }\n      );\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform  });\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        }\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n      var objsToObject = this._objects.map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      this.ownCaching = ownCache;\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return fabric.Object.prototype.willDrawShadow.call(this);\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n      this._drawClipPath(ctx);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0, left = minXY.x || 0,\n          width = (maxXY.x - minXY.x) || 0,\n          height = (maxXY.y - minXY.y) || 0;\n      this.width = width;\n      this.height = height;\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      return this._createBaseSVGMarkup(\n        svgString,\n        { reviver: reviver, noStyle: true, withShadow: true });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, { reviver: reviver });\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedClipPath) {\n        var options = fabric.util.object.clone(object, true);\n        options.clipPath = enlivedClipPath[0];\n        delete options.objects;\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects.concat();\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function(object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\n     * This allows for relative urls as image src.\n     * @since 2.7.0\n     * @type Boolean\n     * @default\n     */\n    srcFromAttribute: false,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * @since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal fiters\n      // and is triggered by user interactions rather than dev code\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function(key) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function() {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\n     * @return {Boolean}\n     */\n    hasCrop: function() {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString = [], imageMarkup = [], strokeSvg,\n          x = -this.width / 2, y = -this.height / 2, clipPath = '';\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push(\n          '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n          '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\n          '</clipPath>\\n'\n        );\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', this._element.width || this._element.naturalWidth,\n        '\" height=\"', this._element.height || this._element.height,\n        '\"', clipPath,\n        '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = [\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        ];\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      }\n      else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n\n        if (this.srcFromAttribute) {\n          return element.getAttribute('src');\n        }\n        else {\n          return element.src;\n        }\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        this.setElement(img, options);\n        this._setWidthHeight();\n        callback && callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (this.group) {\n        this.set('dirty', true);\n      }\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\n      this.set('dirty', true);\n\n      // needs to clear out or WEBGL will not resize correctly\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n        // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching && this.needsItsOwnCache();\n      return this.ownCaching;\n    },\n\n    _renderFill: function(ctx) {\n      var elementToDraw = this._element,\n          w = this.width, h = this.height,\n          sW = Math.min(elementToDraw.naturalWidth || elementToDraw.width, w * this._filterScalingX),\n          sH = Math.min(elementToDraw.naturalHeight || elementToDraw.height, h * this._filterScalingY),\n          x = -w / 2, y = -h / 2,\n          sX = Math.max(0, this.cropX * this._filterScalingX),\n          sY = Math.max(0, this.cropY * this._filterScalingY);\n\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, w, h);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      var scale = this.getTotalObjectScaling();\n      return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n            object.clipPath = enlivedProps[0];\n            var image = new fabric.Image(img, object);\n            callback(image);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined';\n      var canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n            alpha: true,\n            premultipliedAlpha: false,\n            depth: false,\n            stencil: false,\n            antialias: false\n          },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl, gpuInfo = { renderer: '', vendor: '' };\n      if (!gl) {\n        return gpuInfo;\n      }\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image = fabric.Image || { };\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      else {\n        return _class[main] === this[main];\n      }\n    }\n    else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function() {\n      return false;\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function() {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' +\n          'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n        '}\\n' +\n        'if (uColor.g < 0.5) {\\n' +\n          'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n        '}\\n' +\n        'if (uColor.b < 0.5) {\\n' +\n          'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n        '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n        'gl_FragColor.rgb += uColor.rgb;\\n',\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function(mode) {\n      return 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor = color;\\n' +\n          'if (color.a > 0.0) {\\n' +\n            this.fragmentSource[mode] +\n          '}\\n' +\n        '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode, shaderSource;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aPosition;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      else {\n        context.clearRect(0, 0, width, height);\n      }\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function() {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n\n    isNeutralState: function() {\n      return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\n    }\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function(options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size:      0.60, // fontSize factor\n      baseline: -0.35  // baseline-shift factor (upwards)\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size:      0.60, // fontSize factor\n      baseline:  0.11  // baseline-shift factor (downwards)\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - charater numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, stlyes only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'deltaY',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + boxStart,\n            topOffset + lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n\n      this._setFillStyles(ctx, styleDeclaration);\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line number\n     * @param {Number} char the character number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function(line, char) {\n      return this.getValueOfPropertyAt(line, char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width, charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n          // emptylines\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset - offsets.offsetX,\n          top + lineHeights + maxHeight - offsets.offsetY,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n        ctx.restore();\n        return;\n      }\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function(start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function(start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function(start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.deltaY !== thisStyle.deltaY;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\n        prevStyle.overline !== thisStyle.overline ||\n        prevStyle.underline !== thisStyle.underline ||\n        prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width, line = this._textLines[lineIndex], lineInfo;\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the charater number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine, size, _size,\n          lineLeftOffset, dy, _dy,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(), top,\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill,\n          charSpacing = this._getWidthOfCharSpacing();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) &&\n              boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              top + this.offsets[type] * size + dy,\n              boxWidth,\n              this.fontSize / 15\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          leftOffset + lineLeftOffset + boxStart,\n          top + this.offsets[type] * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this, family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined ||\n      family.indexOf('\\'') > -1 ||\n      family.indexOf('\"') > -1 || fontIsGeneric\n        ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        fontFamily\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'underline',\n        'overline',\n        'linethrough',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing',\n      ].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\n          allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            }\n            else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          }\n          else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n      var len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n        ctx.save();\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        skipRestore || ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(), ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        this.clearContextTop(true);\n      }\n      else {\n        ctx = this.canvas.contextContainer;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top + dy,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            var charSpacing = this._getWidthOfCharSpacing();\n            boxEnd = this.__charBounds[endLine][endChar - 1].left\n              + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset + lineHeight,\n            boxEnd - boxStart,\n            1);\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset,\n            boxEnd - boxStart,\n            lineHeight);\n        }\n\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    parseDecoration(object);\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPostion),\n          cursorLocation = this.get2DCursorLocation(desiredPostion),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width,\n          upperCanvasHeight = upperCanvas.height,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          delete this.styles[lineIndex][index];\n        }\n      }\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      }\n      else {\n        delete this.styles[lineIndex + qty];\n      }\n      // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 1) {\n        qty--;\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objecs\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLenght = 0;\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLenght++;\n          addedLines[linesLenght] = 0;\n        }\n        else {\n          addedLines[linesLenght]++;\n        }\n      }\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLenght && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);\n      for (var i = 1; i < linesLenght; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        }\n        else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function(options) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n    if (this === this.canvas._activeObject) {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard hander for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function(options) {\n    this.__isMousedown = false;\n    if (!this.editable || this.group ||\n      (options.transform && options.transform.actionPerformed) ||\n      (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      }\n      else {\n        this.renderCursorOrSelection();\n      }\n    }\n    else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + 1;\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      }\n      else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      }\n      else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      }\n      else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft),\n          internalMarkup = this._wrapSVGTextAndBg(textAndBg);\n      return this._createBaseSVGMarkup(\n        internalMarkup, { reviver: reviver, noStyle: true, withShadow: true });\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\n        textAndBg.textSpans.join(''),\n        '</text>\\n'\n      ];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY, dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n      return [\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Use this regular expression to split strings in breakable lines\n     * @private\n     */\n    _wordJoiners: /[ \\t\\r]/,\n\n    /**\n     * Use this boolean property in order to split strings that have no white space concept.\n     * this is a cheap way to help with chinese/japaense\n     * @type Boolean\n     * @since 2.6.0\n     */\n    splitByGrapheme: false,\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (!this.graphemeSplit && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false;\n      var map = this._styleMap[lineIndex];\n      var mapNextLine = this._styleMap[lineIndex + 1];\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n      obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n    * probably broken need a fix\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * probably broken need a fix\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * probably broken need a fix\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth = 0,\n          splitByGrapheme = this.splitByGrapheme,\n          graphemeLines = [],\n          line = [],\n          // spaces in different languges?\n          words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\n          word = '',\n          offset = 0,\n          infix = splitByGrapheme ? '' : ' ',\n          wordWidth = 0,\n          infixWidth = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = splitByGrapheme ? 0 : this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0;\n\n      desiredWidth -= reservedSpace;\n      for (var i = 0; i < words.length; i++) {\n        // i would avoid resplitting the graphemes\n        word = fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted && !splitByGrapheme) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n    lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target, scaled,\n        scaleX = localMouse.x * t.scaleX / _dim.x,\n        scaleY = localMouse.y * t.scaleY / _dim.y;\n    if (by === 'x' && t instanceof fabric.Textbox) {\n      var tw = t._getTransformedDimensions().x;\n      var w = t.width * (localMouse.x / tw);\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      if (w >= t.getMinWidth()) {\n        scaled = w !== t.width;\n        t.set('width', w);\n        return scaled;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n  });\n})();\n\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = uncontrollable;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar Utils = _interopRequireWildcard(require(\"./utils\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction uncontrollable(Component, controlledValues, methods) {\n  if (methods === void 0) {\n    methods = [];\n  }\n\n  var displayName = Component.displayName || Component.name || 'Component';\n  var canAcceptRef = Utils.canAcceptRef(Component);\n  var controlledProps = Object.keys(controlledValues);\n  var PROPS_TO_OMIT = controlledProps.map(Utils.defaultKey);\n  !(canAcceptRef || !methods.length) ? process.env.NODE_ENV !== \"production\" ? (0, _invariant.default)(false, '[uncontrollable] stateless function components cannot pass through methods ' + 'because they have no associated instances. Check component: ' + displayName + ', ' + 'attempting to pass through methods: ' + methods.join(', ')) : invariant(false) : void 0;\n\n  var UncontrolledComponent =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inheritsLoose(UncontrolledComponent, _React$Component);\n\n    function UncontrolledComponent() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n      _this.handlers = Object.create(null);\n      controlledProps.forEach(function (propName) {\n        var handlerName = controlledValues[propName];\n\n        var handleChange = function handleChange(value) {\n          if (_this.props[handlerName]) {\n            var _this$props;\n\n            _this._notifying = true;\n\n            for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n\n            (_this$props = _this.props)[handlerName].apply(_this$props, [value].concat(args));\n\n            _this._notifying = false;\n          }\n\n          _this._values[propName] = value;\n          if (!_this.unmounted) _this.forceUpdate();\n        };\n\n        _this.handlers[handlerName] = handleChange;\n      });\n      if (methods.length) _this.attachRef = function (ref) {\n        _this.inner = ref;\n      };\n      return _this;\n    }\n\n    var _proto = UncontrolledComponent.prototype;\n\n    _proto.shouldComponentUpdate = function shouldComponentUpdate() {\n      //let the forceUpdate trigger the update\n      return !this._notifying;\n    };\n\n    _proto.componentWillMount = function componentWillMount() {\n      var _this2 = this;\n\n      var props = this.props;\n      this._values = Object.create(null);\n      controlledProps.forEach(function (key) {\n        _this2._values[key] = props[Utils.defaultKey(key)];\n      });\n    };\n\n    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var _this3 = this;\n\n      var props = this.props;\n      controlledProps.forEach(function (key) {\n        /**\n         * If a prop switches from controlled to Uncontrolled\n         * reset its value to the defaultValue\n         */\n        if (!Utils.isProp(nextProps, key) && Utils.isProp(props, key)) {\n          _this3._values[key] = nextProps[Utils.defaultKey(key)];\n        }\n      });\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.unmounted = true;\n    };\n\n    _proto.render = function render() {\n      var _this4 = this;\n\n      var _this$props2 = this.props,\n          innerRef = _this$props2.innerRef,\n          props = _objectWithoutPropertiesLoose(_this$props2, [\"innerRef\"]);\n\n      PROPS_TO_OMIT.forEach(function (prop) {\n        delete props[prop];\n      });\n      var newProps = {};\n      controlledProps.forEach(function (propName) {\n        var propValue = _this4.props[propName];\n        newProps[propName] = propValue !== undefined ? propValue : _this4._values[propName];\n      });\n      return _react.default.createElement(Component, _extends({}, props, newProps, this.handlers, {\n        ref: innerRef || this.attachRef\n      }));\n    };\n\n    return UncontrolledComponent;\n  }(_react.default.Component);\n\n  UncontrolledComponent.displayName = \"Uncontrolled(\" + displayName + \")\";\n  UncontrolledComponent.propTypes = _extends({\n    innerRef: function innerRef() {}\n  }, Utils.uncontrolledPropTypes(controlledValues, displayName));\n  methods.forEach(function (method) {\n    UncontrolledComponent.prototype[method] = function $proxiedMethod() {\n      var _this$inner;\n\n      return (_this$inner = this.inner)[method].apply(_this$inner, arguments);\n    };\n  });\n  var WrappedComponent = UncontrolledComponent;\n\n  if (_react.default.forwardRef) {\n    WrappedComponent = _react.default.forwardRef(function (props, ref) {\n      return _react.default.createElement(UncontrolledComponent, _extends({}, props, {\n        innerRef: ref\n      }));\n    });\n    WrappedComponent.propTypes = UncontrolledComponent.propTypes;\n  }\n\n  WrappedComponent.ControlledComponent = Component;\n  /**\n   * useful when wrapping a Component and you want to control\n   * everything\n   */\n\n  WrappedComponent.deferControlTo = function (newComponent, additions, nextMethods) {\n    if (additions === void 0) {\n      additions = {};\n    }\n\n    return uncontrollable(newComponent, _extends({}, controlledValues, additions), nextMethods);\n  };\n\n  return WrappedComponent;\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.uncontrolledPropTypes = uncontrolledPropTypes;\nexports.isProp = isProp;\nexports.defaultKey = defaultKey;\nexports.canAcceptRef = canAcceptRef;\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar noop = function noop() {};\n\nfunction readOnlyPropType(handler, name) {\n  return function (props, propName) {\n    if (props[propName] !== undefined) {\n      if (!props[handler]) {\n        return new Error(\"You have provided a `\" + propName + \"` prop to `\" + name + \"` \" + (\"without an `\" + handler + \"` handler prop. This will render a read-only field. \") + (\"If the field should be mutable use `\" + defaultKey(propName) + \"`. \") + (\"Otherwise, set `\" + handler + \"`.\"));\n      }\n    }\n  };\n}\n\nfunction uncontrolledPropTypes(controlledValues, displayName) {\n  var propTypes = {};\n  Object.keys(controlledValues).forEach(function (prop) {\n    // add default propTypes for folks that use runtime checks\n    propTypes[defaultKey(prop)] = noop;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var handler = controlledValues[prop];\n      !(typeof handler === 'string' && handler.trim().length) ? process.env.NODE_ENV !== \"production\" ? (0, _invariant.default)(false, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop) : invariant(false) : void 0;\n      propTypes[prop] = readOnlyPropType(handler, displayName);\n    }\n  });\n  return propTypes;\n}\n\nfunction isProp(props, prop) {\n  return props[prop] !== undefined;\n}\n\nfunction defaultKey(key) {\n  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);\n}\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n\nfunction canAcceptRef(component) {\n  return !!component && (typeof component !== 'function' || component.prototype && component.prototype.isReactComponent);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport uncontrollable from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\n\nvar TabContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TabContainer, _React$Component);\n\n  function TabContainer() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.getControlledId = function (key) {\n      return _this.getKey(key, 'tabpane');\n    };\n\n    _this.getControllerId = function (key) {\n      return _this.getKey(key, 'tab');\n    };\n\n    _this.state = {\n      tabContext: {\n        onSelect: _this.props.onSelect,\n        activeKey: _this.props.activeKey,\n        transition: _this.props.transition,\n        mountOnEnter: _this.props.mountOnEnter,\n        unmountOnExit: _this.props.unmountOnExit,\n        getControlledId: _this.getControlledId,\n        getControllerId: _this.getControllerId\n      }\n    };\n    return _this;\n  }\n\n  TabContainer.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var activeKey = _ref.activeKey,\n        mountOnEnter = _ref.mountOnEnter,\n        unmountOnExit = _ref.unmountOnExit,\n        transition = _ref.transition;\n    return {\n      tabContext: _extends({}, prevState.tabContext, {\n        activeKey: activeKey,\n        mountOnEnter: mountOnEnter,\n        unmountOnExit: unmountOnExit,\n        transition: transition\n      })\n    };\n  };\n\n  var _proto = TabContainer.prototype;\n\n  _proto.getKey = function getKey(key, type) {\n    var _this$props = this.props,\n        generateChildId = _this$props.generateChildId,\n        id = _this$props.id;\n    if (generateChildId) return generateChildId(key, type);\n    return id ? id + \"-\" + type + \"-\" + key : null;\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        onSelect = _this$props2.onSelect;\n    return React.createElement(TabContext.Provider, {\n      value: this.state.tabContext\n    }, React.createElement(SelectableContext.Provider, {\n      value: onSelect\n    }, children));\n  };\n\n  return TabContainer;\n}(React.Component);\n\nexport default uncontrollable(TabContainer, {\n  activeKey: 'onSelect'\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { createBootstrapComponent } from './ThemeProvider';\n\nvar TabContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TabContent, _React$Component);\n\n  function TabContent() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TabContent.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        Component = _this$props.as,\n        className = _this$props.className,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"bsPrefix\", \"as\", \"className\"]);\n\n    return React.createElement(Component, _extends({}, props, {\n      className: classNames(className, bsPrefix)\n    }));\n  };\n\n  return TabContent;\n}(React.Component);\n\nTabContent.defaultProps = {\n  as: 'div'\n};\nexport default createBootstrapComponent(TabContent, 'tab-content');","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = exports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = void 0;\n\nvar _inDOM = _interopRequireDefault(require(\"../util/inDOM\"));\n\nvar transform = 'transform';\nexports.transform = transform;\nvar prefix, transitionEnd, animationEnd;\nexports.animationEnd = animationEnd;\nexports.transitionEnd = transitionEnd;\nvar transitionProperty, transitionDuration, transitionTiming, transitionDelay;\nexports.transitionDelay = transitionDelay;\nexports.transitionTiming = transitionTiming;\nexports.transitionDuration = transitionDuration;\nexports.transitionProperty = transitionProperty;\nvar animationName, animationDuration, animationTiming, animationDelay;\nexports.animationDelay = animationDelay;\nexports.animationTiming = animationTiming;\nexports.animationDuration = animationDuration;\nexports.animationName = animationName;\n\nif (_inDOM.default) {\n  var _getTransitionPropert = getTransitionProperties();\n\n  prefix = _getTransitionPropert.prefix;\n  exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;\n  exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;\n  exports.transform = transform = prefix + \"-\" + transform;\n  exports.transitionProperty = transitionProperty = prefix + \"-transition-property\";\n  exports.transitionDuration = transitionDuration = prefix + \"-transition-duration\";\n  exports.transitionDelay = transitionDelay = prefix + \"-transition-delay\";\n  exports.transitionTiming = transitionTiming = prefix + \"-transition-timing-function\";\n  exports.animationName = animationName = prefix + \"-animation-name\";\n  exports.animationDuration = animationDuration = prefix + \"-animation-duration\";\n  exports.animationTiming = animationTiming = prefix + \"-animation-delay\";\n  exports.animationDelay = animationDelay = prefix + \"-animation-timing-function\";\n}\n\nvar _default = {\n  transform: transform,\n  end: transitionEnd,\n  property: transitionProperty,\n  timing: transitionTiming,\n  delay: transitionDelay,\n  duration: transitionDuration\n};\nexports.default = _default;\n\nfunction getTransitionProperties() {\n  var style = document.createElement('div').style;\n  var vendorMap = {\n    O: function O(e) {\n      return \"o\" + e.toLowerCase();\n    },\n    Moz: function Moz(e) {\n      return e.toLowerCase();\n    },\n    Webkit: function Webkit(e) {\n      return \"webkit\" + e;\n    },\n    ms: function ms(e) {\n      return \"MS\" + e;\n    }\n  };\n  var vendors = Object.keys(vendorMap);\n  var transitionEnd, animationEnd;\n  var prefix = '';\n\n  for (var i = 0; i < vendors.length; i++) {\n    var vendor = vendors[i];\n\n    if (vendor + \"TransitionProperty\" in style) {\n      prefix = \"-\" + vendor.toLowerCase();\n      transitionEnd = vendorMap[vendor]('TransitionEnd');\n      animationEnd = vendorMap[vendor]('AnimationEnd');\n      break;\n    }\n  }\n\n  if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';\n  if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';\n  style = null;\n  return {\n    animationEnd: animationEnd,\n    transitionEnd: transitionEnd,\n    prefix: prefix\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = camelizeStyleName;\n\nvar _camelize = _interopRequireDefault(require(\"./camelize\"));\n\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/camelizeStyleName.js\n */\nvar msPattern = /^-ms-/;\n\nfunction camelizeStyleName(string) {\n  return (0, _camelize.default)(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = exports[\"default\"];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nvar _fadeStyles;\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport Transition, { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport onEnd from 'dom-helpers/transition/end';\nimport triggerBrowserReflow from './utils/triggerBrowserReflow';\nvar defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nvar fadeStyles = (_fadeStyles = {}, _fadeStyles[ENTERING] = 'show', _fadeStyles[ENTERED] = 'show', _fadeStyles);\n\nvar Fade =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Fade, _React$Component);\n\n  function Fade() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleEnter = function (node) {\n      triggerBrowserReflow(node);\n      if (_this.props.onEnter) _this.props.onEnter(node);\n    };\n\n    return _this;\n  }\n\n  var _proto = Fade.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"children\"]);\n\n    return React.createElement(Transition, _extends({\n      addEndListener: onEnd\n    }, props, {\n      onEnter: this.handleEnter\n    }), function (status, innerProps) {\n      return React.cloneElement(children, _extends({}, innerProps, {\n        className: classNames('fade', className, children.props.className, fadeStyles[status])\n      }));\n    });\n  };\n\n  return Fade;\n}(React.Component);\n\nFade.defaultProps = defaultProps;\nexport default Fade;","// reading a dimension prop will cause the browser to recalculate,\n// which will let our animations work\nexport default function triggerBrowserReflow(node) {\n  node.offsetHeight; // eslint-disable-line no-unused-expressions\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\n\nfunction useTabContext(props) {\n  var context = useContext(TabContext);\n  if (!context) return props;\n\n  var activeKey = context.activeKey,\n      getControlledId = context.getControlledId,\n      getControllerId = context.getControllerId,\n      rest = _objectWithoutPropertiesLoose(context, [\"activeKey\", \"getControlledId\", \"getControllerId\"]);\n\n  var shouldTransition = props.transition !== false && rest.transition !== false;\n  var key = makeEventKey(props.eventKey);\n  return _extends({}, props, {\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  });\n}\n\nvar TabPane = React.forwardRef(function (props, ref) {\n  var _useTabContext = useTabContext(props),\n      bsPrefix = _useTabContext.bsPrefix,\n      className = _useTabContext.className,\n      active = _useTabContext.active,\n      onEnter = _useTabContext.onEnter,\n      onEntering = _useTabContext.onEntering,\n      onEntered = _useTabContext.onEntered,\n      onExit = _useTabContext.onExit,\n      onExiting = _useTabContext.onExiting,\n      onExited = _useTabContext.onExited,\n      mountOnEnter = _useTabContext.mountOnEnter,\n      unmountOnExit = _useTabContext.unmountOnExit,\n      Transition = _useTabContext.transition,\n      _useTabContext$as = _useTabContext.as,\n      Component = _useTabContext$as === void 0 ? 'div' : _useTabContext$as,\n      _ = _useTabContext.eventKey,\n      rest = _objectWithoutPropertiesLoose(_useTabContext, [\"bsPrefix\", \"className\", \"active\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"mountOnEnter\", \"unmountOnExit\", \"transition\", \"as\", \"eventKey\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && unmountOnExit) return null;\n  var pane = React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active: active\n    })\n  }));\n  if (Transition) pane = React.createElement(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: mountOnEnter\n  }, pane); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return React.createElement(TabContext.Provider, {\n    value: null\n  }, React.createElement(SelectableContext.Provider, {\n    value: null\n  }, pane));\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.filter(function (f) {\n    return f != null;\n  }).reduce(function (acc, f) {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport createChainedFunction from './utils/createChainedFunction';\nvar defaultProps = {\n  as: 'a'\n};\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nvar SafeAnchor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(SafeAnchor, _React$Component);\n\n  function SafeAnchor(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.handleKeyDown = _this.handleKeyDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = SafeAnchor.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var _this$props = this.props,\n        disabled = _this$props.disabled,\n        href = _this$props.href,\n        onClick = _this$props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      this.handleClick(event);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        Component = _this$props2.as,\n        disabled = _this$props2.disabled,\n        onKeyDown = _this$props2.onKeyDown,\n        innerRef = _this$props2.innerRef,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"as\", \"disabled\", \"onKeyDown\", \"innerRef\"]);\n\n    if (isTrivialHref(props.href)) {\n      props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n      // otherwise, the cursor incorrectly styled (except with role='button')\n\n      props.href = props.href || '#';\n    }\n\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n\n    if (innerRef) props.ref = innerRef;\n    return React.createElement(Component, _extends({}, props, {\n      onClick: this.handleClick,\n      onKeyDown: createChainedFunction(this.handleKeyDown, onKeyDown)\n    }));\n  };\n\n  return SafeAnchor;\n}(React.Component);\n\nSafeAnchor.defaultProps = defaultProps;\nexport default SafeAnchor;","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isRequiredForA11y;\nfunction isRequiredForA11y(validator) {\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      return new Error('The ' + location + ' `' + propFullNameSafe + '` is required to make ' + ('`' + componentNameSafe + '` accessible for users of assistive ') + 'technologies such as screen readers.');\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    return validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n  };\n}\nmodule.exports = exports['default'];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = useEventCallback;\n\nvar _react = require(\"react\");\n\nvar _useCommittedRef = _interopRequireDefault(require(\"./useCommittedRef\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction useEventCallback(fn) {\n  var ref = (0, _useCommittedRef.default)(fn);\n  return (0, _react.useCallback)(function () {\n    return ref.current.apply(void 0, arguments);\n  }, [ref]);\n}","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nfunction useCommittedRef(value) {\n  var ref = (0, _react.useRef)(value);\n  (0, _react.useEffect)(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nvar _default = useCommittedRef;\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = all;\n\nvar _createChainableTypeChecker = require('./utils/createChainableTypeChecker');\n\nvar _createChainableTypeChecker2 = _interopRequireDefault(_createChainableTypeChecker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction all() {\n  for (var _len = arguments.length, validators = Array(_len), _key = 0; _key < _len; _key++) {\n    validators[_key] = arguments[_key];\n  }\n\n  function allPropTypes() {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var error = null;\n\n    validators.forEach(function (validator) {\n      if (error != null) {\n        return;\n      }\n\n      var result = validator.apply(undefined, args);\n      if (result != null) {\n        error = result;\n      }\n    });\n\n    return error;\n  }\n\n  return (0, _createChainableTypeChecker2.default)(allPropTypes);\n}\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createChainableTypeChecker;\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// Mostly taken from ReactPropTypes.\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      if (isRequired) {\n        return new Error('Required ' + location + ' `' + propFullNameSafe + '` was not specified ' + ('in `' + componentNameSafe + '`.'));\n      }\n\n      return null;\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 6 ? _len - 6 : 0), _key = 6; _key < _len; _key++) {\n      args[_key - 6] = arguments[_key];\n    }\n\n    return validate.apply(undefined, [props, propName, componentNameSafe, location, propFullNameSafe].concat(args));\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\nmodule.exports = exports['default'];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = useUncontrolled;\n\nvar _react = require(\"react\");\n\nvar Utils = _interopRequireWildcard(require(\"./utils\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction useUncontrolled(props, config) {\n  return Object.keys(config).reduce(function (result, fieldName) {\n    var _extends2;\n\n    var defaultValue = result[Utils.defaultKey(fieldName)],\n        propsValue = result[fieldName],\n        rest = _objectWithoutPropertiesLoose(result, [Utils.defaultKey(fieldName), fieldName].map(_toPropertyKey));\n\n    var handlerName = config[fieldName];\n    var prevProps = (0, _react.useRef)({});\n\n    var _useState = (0, _react.useState)(defaultValue),\n        stateValue = _useState[0],\n        setState = _useState[1];\n\n    var isProp = Utils.isProp(props, fieldName);\n    var wasProp = Utils.isProp(prevProps.current, fieldName);\n    prevProps.current = props;\n    /**\n     * If a prop switches from controlled to Uncontrolled\n     * reset its value to the defaultValue\n     */\n\n    if (!isProp && wasProp) {\n      setState(defaultValue);\n    }\n\n    var propsHandler = props[handlerName];\n    var handler = (0, _react.useCallback)(function (value) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (propsHandler) propsHandler.apply(void 0, [value].concat(args));\n      setState(value);\n    }, [setState, propsHandler]);\n    return _extends({}, rest, (_extends2 = {}, _extends2[fieldName] = isProp ? propsValue : stateValue, _extends2[handlerName] = handler, _extends2));\n  }, props);\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = qsa;\n// Zepto.js\n// (c) 2010-2015 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\nvar simpleSelectorRE = /^[\\w-]*$/;\nvar toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n\nfunction qsa(element, selector) {\n  var maybeID = selector[0] === '#',\n      maybeClass = selector[0] === '.',\n      nameOnly = maybeID || maybeClass ? selector.slice(1) : selector,\n      isSimple = simpleSelectorRE.test(nameOnly),\n      found;\n\n  if (isSimple) {\n    if (maybeID) {\n      element = element.getElementById ? element : document;\n      return (found = element.getElementById(nameOnly)) ? [found] : [];\n    }\n\n    if (element.getElementsByClassName && maybeClass) return toArray(element.getElementsByClassName(nameOnly));\n    return toArray(element.getElementsByTagName(selector));\n  }\n\n  return toArray(element.querySelectorAll(selector));\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = mapContextToProps;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _forwardRef = _interopRequireDefault(require(\"./forwardRef\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar getDisplayName = function getDisplayName(Component) {\n  var name = typeof Component === 'string' ? Component : Component.name || Component.displayName;\n  return name ? \"ContextTransform(\" + name + \")\" : 'ContextTransform';\n};\n\nvar ensureConsumer = function ensureConsumer(c) {\n  return c.Consumer || c;\n};\n\nfunction $mapContextToProps(_ref, Component) {\n  var maybeArrayOfConsumers = _ref.consumers,\n      mapToProps = _ref.mapToProps,\n      displayName = _ref.displayName,\n      _ref$forwardRefAs = _ref.forwardRefAs,\n      forwardRefAs = _ref$forwardRefAs === void 0 ? 'ref' : _ref$forwardRefAs;\n  var consumers = maybeArrayOfConsumers;\n\n  if (!Array.isArray(maybeArrayOfConsumers)) {\n    consumers = [maybeArrayOfConsumers];\n  }\n\n  var SingleConsumer = ensureConsumer(consumers[0]);\n\n  function singleRender(props, ref) {\n    var _extends2;\n\n    var propsWithRef = _extends((_extends2 = {}, _extends2[forwardRefAs] = ref, _extends2), props);\n\n    return _react.default.createElement(SingleConsumer, null, function (value) {\n      return _react.default.createElement(Component, _extends({}, propsWithRef, mapToProps(value, props)));\n    });\n  }\n\n  function multiRender(props, ref) {\n    var _extends3;\n\n    var propsWithRef = _extends((_extends3 = {}, _extends3[forwardRefAs] = ref, _extends3), props);\n\n    return consumers.reduceRight(function (inner, Context) {\n      return function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var Consumer = ensureConsumer(Context);\n        return _react.default.createElement(Consumer, null, function (value) {\n          return inner.apply(void 0, args.concat([value]));\n        });\n      };\n    }, function () {\n      for (var _len2 = arguments.length, contexts = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        contexts[_key2] = arguments[_key2];\n      }\n\n      return _react.default.createElement(Component, _extends({}, propsWithRef, mapToProps.apply(void 0, contexts.concat([props]))));\n    })();\n  }\n\n  var contextTransform = consumers.length === 1 ? singleRender : multiRender;\n  return (0, _forwardRef.default)(contextTransform, {\n    displayName: displayName || getDisplayName(Component)\n  });\n}\n\nfunction mapContextToProps(maybeOpts, mapToProps, Component) {\n  if (arguments.length === 2) return $mapContextToProps(maybeOpts, mapToProps);\n  return $mapContextToProps({\n    consumers: maybeOpts,\n    mapToProps: mapToProps\n  }, Component);\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _properties = _interopRequireDefault(require(\"./properties\"));\n\nvar _style = _interopRequireDefault(require(\"../style\"));\n\nfunction onEnd(node, handler, duration) {\n  var fakeEvent = {\n    target: node,\n    currentTarget: node\n  },\n      backup;\n  if (!_properties.default.end) duration = 0;else if (duration == null) duration = parseDuration(node) || 0;\n\n  if (_properties.default.end) {\n    node.addEventListener(_properties.default.end, done, false);\n    backup = setTimeout(function () {\n      return done(fakeEvent);\n    }, (duration || 100) * 1.5);\n  } else setTimeout(done.bind(null, fakeEvent), 0);\n\n  function done(event) {\n    if (event.target !== event.currentTarget) return;\n    clearTimeout(backup);\n    event.target.removeEventListener(_properties.default.end, done);\n    handler.call(this);\n  }\n}\n\nonEnd._parseDuration = parseDuration;\nvar _default = onEnd;\nexports.default = _default;\n\nfunction parseDuration(node) {\n  var str = (0, _style.default)(node, _properties.default.duration),\n      mult = str.indexOf('ms') === -1 ? 1000 : 1;\n  return parseFloat(str) * mult;\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = style;\n\nvar _camelizeStyle = _interopRequireDefault(require(\"../util/camelizeStyle\"));\n\nvar _hyphenateStyle = _interopRequireDefault(require(\"../util/hyphenateStyle\"));\n\nvar _getComputedStyle2 = _interopRequireDefault(require(\"./getComputedStyle\"));\n\nvar _removeStyle = _interopRequireDefault(require(\"./removeStyle\"));\n\nvar _properties = require(\"../transition/properties\");\n\nvar _isTransform = _interopRequireDefault(require(\"../transition/isTransform\"));\n\nfunction style(node, property, value) {\n  var css = '';\n  var transforms = '';\n  var props = property;\n\n  if (typeof property === 'string') {\n    if (value === undefined) {\n      return node.style[(0, _camelizeStyle.default)(property)] || (0, _getComputedStyle2.default)(node).getPropertyValue((0, _hyphenateStyle.default)(property));\n    } else {\n      (props = {})[property] = value;\n    }\n  }\n\n  Object.keys(props).forEach(function (key) {\n    var value = props[key];\n\n    if (!value && value !== 0) {\n      (0, _removeStyle.default)(node, (0, _hyphenateStyle.default)(key));\n    } else if ((0, _isTransform.default)(key)) {\n      transforms += key + \"(\" + value + \") \";\n    } else {\n      css += (0, _hyphenateStyle.default)(key) + \": \" + value + \";\";\n    }\n  });\n\n  if (transforms) {\n    css += _properties.transform + \": \" + transforms + \";\";\n  }\n\n  node.style.cssText += ';' + css;\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = camelize;\nvar rHyphen = /-(.)/g;\n\nfunction camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = hyphenateStyleName;\n\nvar _hyphenate = _interopRequireDefault(require(\"./hyphenate\"));\n\n/**\n * Copyright 2013-2014, Facebook, Inc.\n * All rights reserved.\n * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js\n */\nvar msPattern = /^ms-/;\n\nfunction hyphenateStyleName(string) {\n  return (0, _hyphenate.default)(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = hyphenate;\nvar rUpper = /([A-Z])/g;\n\nfunction hyphenate(string) {\n  return string.replace(rUpper, '-$1').toLowerCase();\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = _getComputedStyle;\n\nvar _camelizeStyle = _interopRequireDefault(require(\"../util/camelizeStyle\"));\n\nvar rposition = /^(top|right|bottom|left)$/;\nvar rnumnonpx = /^([+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|))(?!px)[a-z%]+$/i;\n\nfunction _getComputedStyle(node) {\n  if (!node) throw new TypeError('No Element passed to `getComputedStyle()`');\n  var doc = node.ownerDocument;\n  return 'defaultView' in doc ? doc.defaultView.opener ? node.ownerDocument.defaultView.getComputedStyle(node, null) : window.getComputedStyle(node, null) : {\n    //ie 8 \"magic\" from: https://github.com/jquery/jquery/blob/1.11-stable/src/css/curCSS.js#L72\n    getPropertyValue: function getPropertyValue(prop) {\n      var style = node.style;\n      prop = (0, _camelizeStyle.default)(prop);\n      if (prop == 'float') prop = 'styleFloat';\n      var current = node.currentStyle[prop] || null;\n      if (current == null && style && style[prop]) current = style[prop];\n\n      if (rnumnonpx.test(current) && !rposition.test(prop)) {\n        // Remember the original values\n        var left = style.left;\n        var runStyle = node.runtimeStyle;\n        var rsLeft = runStyle && runStyle.left; // Put in the new values to get a computed value out\n\n        if (rsLeft) runStyle.left = node.currentStyle.left;\n        style.left = prop === 'fontSize' ? '1em' : current;\n        current = style.pixelLeft + 'px'; // Revert the changed values\n\n        style.left = left;\n        if (rsLeft) runStyle.left = rsLeft;\n      }\n\n      return current;\n    }\n  };\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = removeStyle;\n\nfunction removeStyle(node, key) {\n  return 'removeProperty' in node.style ? node.style.removeProperty(key) : node.style.removeAttribute(key);\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = isTransform;\nvar supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;\n\nfunction isTransform(property) {\n  return !!(property && supportedTransforms.test(property));\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar UNMOUNTED = 'unmounted';\nexports.UNMOUNTED = UNMOUNTED;\nvar EXITED = 'exited';\nexports.EXITED = EXITED;\nvar ENTERING = 'entering';\nexports.ENTERING = ENTERING;\nvar ENTERED = 'entered';\nexports.ENTERED = ENTERED;\nvar EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 0 },\n *   entered:  { opacity: 1 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nexports.EXITING = EXITING;\n\nvar Transition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  var _proto = Transition.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: null // allows for nested Transitions\n\n    };\n  };\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      var node = _reactDom.default.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      _this2.onTransitionEnd(node, enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      this.props.addEndListener(node, this.nextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      return children(status, childProps);\n    }\n\n    var child = _react.default.Children.only(children);\n\n    return _react.default.cloneElement(child, childProps);\n  };\n\n  return Transition;\n}(_react.default.Component);\n\nTransition.contextTypes = {\n  transitionGroup: PropTypes.object\n};\nTransition.childContextTypes = {\n  transitionGroup: function transitionGroup() {}\n};\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = _PropTypes.timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n\n} : {};\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(Transition);\n\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.classNamesShape = exports.timeoutsShape = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar timeoutsShape = process.env.NODE_ENV !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n  enter: _propTypes.default.number,\n  exit: _propTypes.default.number,\n  appear: _propTypes.default.number\n}).isRequired]) : null;\nexports.timeoutsShape = timeoutsShape;\nvar classNamesShape = process.env.NODE_ENV !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  active: _propTypes.default.string\n}), _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  enterDone: _propTypes.default.string,\n  enterActive: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  exitDone: _propTypes.default.string,\n  exitActive: _propTypes.default.string\n})]) : null;\nexports.classNamesShape = classNamesShape;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  role: 'toolbar'\n};\nvar ButtonToolbar = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-toolbar');\n  return React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(className, prefix)\n  }));\n});\nButtonToolbar.displayName = 'ButtonToolbar';\nButtonToolbar.defaultProps = defaultProps;\nexport default ButtonToolbar;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false,\n  type: 'button'\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      innerRef: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  var Component = as || 'button';\n  if (ref) props.ref = ref;\n  return React.createElement(Component, _extends({}, props, {\n    type: type,\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  as: 'div'\n};\nvar Col = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nCol.defaultProps = defaultProps;\nexport default Col;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\n/* eslint-disable react/require-render-return, react/no-unused-prop-types */\n\nvar Tab =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Tab, _React$Component);\n\n  function Tab() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly');\n  };\n\n  return Tab;\n}(React.Component);\n\nTab.Container = TabContainer;\nTab.Content = TabContent;\nTab.Pane = TabPane;\nexport default Tab;","import React from 'react';\nexport default React.createContext(null);","import React from 'react';\nexport default React.createContext(null);","import React from 'react';\nvar NavContext = React.createContext(null);\nexport default NavContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport qsa from 'dom-helpers/query/querySelectorAll';\nimport mapContextToProps from '@restart/context/mapContextToProps';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport NavContext from './NavContext';\nimport TabContext from './TabContext';\n\nvar noop = function noop() {};\n\nvar AbstractNav =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(AbstractNav, _React$Component);\n\n  function AbstractNav() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleSelect = function (key, event) {\n      var _this$props = _this.props,\n          onSelect = _this$props.onSelect,\n          parentOnSelect = _this$props.parentOnSelect;\n      if (key == null) return;\n      if (onSelect) onSelect(key, event);\n      if (parentOnSelect) parentOnSelect(key, event);\n    };\n\n    _this.handleKeyDown = function (event) {\n      var onKeyDown = _this.props.onKeyDown;\n      if (onKeyDown) onKeyDown(event);\n      var nextActiveChild;\n\n      switch (event.key) {\n        case 'ArrowLeft':\n        case 'ArrowUp':\n          nextActiveChild = _this.getNextActiveChild(-1);\n          break;\n\n        case 'ArrowRight':\n        case 'ArrowDown':\n          nextActiveChild = _this.getNextActiveChild(1);\n          break;\n\n        default:\n          return;\n      }\n\n      if (!nextActiveChild) return;\n      event.preventDefault();\n\n      _this.handleSelect(nextActiveChild.dataset.rbEventKey, event);\n\n      _this._needsRefocus = true;\n    };\n\n    _this.attachRef = function (ref) {\n      _this.listNode = ref;\n    };\n\n    _this.state = {\n      navContext: null\n    };\n    return _this;\n  }\n\n  AbstractNav.getDerivedStateFromProps = function getDerivedStateFromProps(_ref) {\n    var activeKey = _ref.activeKey,\n        getControlledId = _ref.getControlledId,\n        getControllerId = _ref.getControllerId,\n        role = _ref.role;\n    return {\n      navContext: {\n        role: role,\n        // used by NavLink to determine it's role\n        activeKey: makeEventKey(activeKey),\n        getControlledId: getControlledId || noop,\n        getControllerId: getControllerId || noop\n      }\n    };\n  };\n\n  var _proto = AbstractNav.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (!this._needsRefocus || !this.listNode) return;\n    var activeChild = this.listNode.querySelector('[data-rb-event-key].active');\n    if (activeChild) activeChild.focus();\n  };\n\n  _proto.getNextActiveChild = function getNextActiveChild(offset) {\n    if (!this.listNode) return null;\n    var items = qsa(this.listNode, '[data-rb-event-key]:not(.disabled)');\n    var activeChild = this.listNode.querySelector('.active');\n    var index = items.indexOf(activeChild);\n    if (index === -1) return null;\n    var nextIndex = index + offset;\n    if (nextIndex >= items.length) nextIndex = 0;\n    if (nextIndex < 0) nextIndex = items.length - 1;\n    return items[nextIndex];\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        Component = _this$props2.as,\n        _ = _this$props2.onSelect,\n        _0 = _this$props2.parentOnSelect,\n        _1 = _this$props2.getControlledId,\n        _2 = _this$props2.getControllerId,\n        _3 = _this$props2.activeKey,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"as\", \"onSelect\", \"parentOnSelect\", \"getControlledId\", \"getControllerId\", \"activeKey\"]);\n\n    if (props.role === 'tablist') {\n      props.onKeyDown = this.handleKeyDown;\n    }\n\n    return React.createElement(SelectableContext.Provider, {\n      value: this.handleSelect\n    }, React.createElement(NavContext.Provider, {\n      value: this.state.navContext\n    }, React.createElement(Component, _extends({}, props, {\n      onKeyDown: this.handleKeyDown,\n      ref: this.attachRef\n    }))));\n  };\n\n  return AbstractNav;\n}(React.Component);\n\nAbstractNav.defaultProps = {\n  as: 'ul'\n};\nexport default mapContextToProps([SelectableContext, TabContext], function (parentOnSelect, tabContext, _ref2) {\n  var role = _ref2.role;\n  if (!tabContext) return {\n    parentOnSelect: parentOnSelect\n  };\n  var activeKey = tabContext.activeKey,\n      getControllerId = tabContext.getControllerId,\n      getControlledId = tabContext.getControlledId;\n  return {\n    activeKey: activeKey,\n    parentOnSelect: parentOnSelect,\n    role: role || 'tablist',\n    // pass these two through to avoid having to listen to\n    // both Tab and Nav contexts in NavLink\n    getControllerId: getControllerId,\n    getControlledId: getControlledId\n  };\n}, AbstractNav);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  as: 'div'\n};\nvar NavItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-item');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }), children);\n});\nNavItem.displayName = 'NavItem';\nNavItem.defaultProps = defaultProps;\nexport default NavItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport NavContext from './NavContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nvar defaultProps = {\n  disabled: false\n};\nvar AbstractNavItem = React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      className = _ref.className,\n      tabIndex = _ref.tabIndex,\n      eventKey = _ref.eventKey,\n      onSelect = _ref.onSelect,\n      onClick = _ref.onClick,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"active\", \"className\", \"tabIndex\", \"eventKey\", \"onSelect\", \"onClick\", \"as\"]);\n\n  var navKey = makeEventKey(eventKey, props.href);\n  var parentOnSelect = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n  var isActive = active;\n\n  if (navContext) {\n    if (!props.role && navContext.role === 'tablist') props.role = 'tab';\n    props['data-rb-event-key'] = navKey;\n    props.id = navContext.getControllerId(navKey);\n    props['aria-controls'] = navContext.getControlledId(navKey);\n    isActive = active == null && navKey != null ? navContext.activeKey === navKey : active;\n  }\n\n  if (props.role === 'tab') {\n    props.tabIndex = isActive ? tabIndex : -1;\n    props['aria-selected'] = isActive;\n  }\n\n  var handleOnclick = useEventCallback(function (e) {\n    if (onClick) onClick(e);\n    if (navKey == null) return;\n    if (onSelect) onSelect(navKey, e);\n    if (parentOnSelect) parentOnSelect(navKey, e);\n  });\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    onClick: handleOnclick,\n    className: classNames(className, isActive && 'active')\n  }));\n});\nAbstractNavItem.defaultProps = defaultProps;\nexport default AbstractNavItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nimport AbstractNavItem from './AbstractNavItem';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  disabled: false,\n  as: SafeAnchor\n};\nvar NavLink = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      href = _ref.href,\n      eventKey = _ref.eventKey,\n      onSelect = _ref.onSelect,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"disabled\", \"className\", \"href\", \"eventKey\", \"onSelect\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav-link');\n  return React.createElement(AbstractNavItem, _extends({}, props, {\n    href: href,\n    ref: ref,\n    eventKey: eventKey,\n    as: as,\n    disabled: disabled,\n    onSelect: onSelect,\n    className: classNames(className, bsPrefix, disabled && 'disabled')\n  }));\n});\nNavLink.displayName = 'NavLink';\nNavLink.defaultProps = defaultProps;\nexport default NavLink;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport all from 'prop-types-extra/lib/all';\nimport React, { useContext } from 'react';\nimport useUncontrolled from 'uncontrollable/hook';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavbarContext from './NavbarContext';\nimport CardContext from './CardContext';\nimport AbstractNav from './AbstractNav';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nvar defaultProps = {\n  justify: false,\n  fill: false,\n  as: 'div'\n};\nvar Nav = React.forwardRef(function (uncontrolledProps, ref) {\n  var _classNames;\n\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    activeKey: 'onSelect'\n  }),\n      as = _useUncontrolled.as,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      fill = _useUncontrolled.fill,\n      justify = _useUncontrolled.justify,\n      navbar = _useUncontrolled.navbar,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      activeKey = _useUncontrolled.activeKey,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"bsPrefix\", \"variant\", \"fill\", \"justify\", \"navbar\", \"className\", \"children\", \"activeKey\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'nav');\n  var navbarBsPrefix, cardHeaderBsPrefix;\n  var navbarContext = useContext(NavbarContext);\n  var cardContext = useContext(CardContext);\n\n  if (navbarContext) {\n    navbarBsPrefix = navbarContext.bsPrefix;\n    navbar = navbar == null ? true : navbar;\n  } else if (cardContext) {\n    cardHeaderBsPrefix = cardContext.cardHeaderBsPrefix;\n  }\n\n  return React.createElement(AbstractNav, _extends({\n    as: as,\n    ref: ref,\n    activeKey: activeKey,\n    className: classNames(className, (_classNames = {}, _classNames[bsPrefix] = !navbar, _classNames[navbarBsPrefix + \"-nav\"] = navbar, _classNames[cardHeaderBsPrefix + \"-\" + variant] = !!cardHeaderBsPrefix, _classNames[bsPrefix + \"-\" + variant] = !!variant, _classNames[bsPrefix + \"-fill\"] = fill, _classNames[bsPrefix + \"-justified\"] = justify, _classNames))\n  }, props), children);\n});\nNav.displayName = 'Nav';\nNav.defaultProps = defaultProps;\nNav.Item = NavItem;\nNav.Link = NavLink;\nNav._Nav = Nav; // for Testing until enzyme is working with context\n\nexport default Nav;","import React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  var index = 0;\n  return React.Children.map(children, function (child) {\n    return React.isValidElement(child) ? func(child, index++) : child;\n  });\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  var index = 0;\n  React.Children.forEach(children, function (child) {\n    if (React.isValidElement(child)) func(child, index++);\n  });\n}\n\nexport { map, forEach };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport requiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport uncontrollable from 'uncontrollable';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport UncontrolledTabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './utils/ElementChildren';\nvar TabContainer = UncontrolledTabContainer.ControlledComponent;\nvar defaultProps = {\n  variant: 'tabs',\n  mountOnEnter: false,\n  unmountOnExit: false\n};\n\nfunction getDefaultActiveKey(children) {\n  var defaultActiveKey;\n  forEach(children, function (child) {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Tabs, _React$Component);\n\n  function Tabs() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Tabs.prototype;\n\n  _proto.renderTab = function renderTab(child) {\n    var _child$props = child.props,\n        title = _child$props.title,\n        eventKey = _child$props.eventKey,\n        disabled = _child$props.disabled,\n        tabClassName = _child$props.tabClassName;\n\n    if (title == null) {\n      return null;\n    }\n\n    return React.createElement(NavItem, {\n      as: NavLink,\n      eventKey: eventKey,\n      disabled: disabled,\n      className: tabClassName\n    }, title);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        id = _this$props.id,\n        onSelect = _this$props.onSelect,\n        transition = _this$props.transition,\n        mountOnEnter = _this$props.mountOnEnter,\n        unmountOnExit = _this$props.unmountOnExit,\n        children = _this$props.children,\n        _this$props$activeKey = _this$props.activeKey,\n        activeKey = _this$props$activeKey === void 0 ? getDefaultActiveKey(children) : _this$props$activeKey,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"id\", \"onSelect\", \"transition\", \"mountOnEnter\", \"unmountOnExit\", \"children\", \"activeKey\"]);\n\n    return React.createElement(TabContainer, {\n      id: id,\n      activeKey: activeKey,\n      onSelect: onSelect,\n      transition: transition,\n      mountOnEnter: mountOnEnter,\n      unmountOnExit: unmountOnExit\n    }, React.createElement(Nav, _extends({}, props, {\n      role: \"tablist\",\n      as: \"nav\"\n    }), map(children, this.renderTab)), React.createElement(TabContent, null, map(children, function (child) {\n      var childProps = _extends({}, child.props);\n\n      delete childProps.title;\n      delete childProps.disabled;\n      delete childProps.tabClassName;\n      return React.createElement(TabPane, childProps);\n    })));\n  };\n\n  return Tabs;\n}(React.Component);\n\nTabs.defaultProps = defaultProps;\nexport default uncontrollable(Tabs, {\n  activeKey: 'onSelect'\n});"],"sourceRoot":""}