{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/fabric/dist/fabric.js","webpack:///./node_modules/core-js/modules/_typed.js","webpack:///./node_modules/core-js/modules/_to-index.js","webpack:///./node_modules/core-js/modules/_object-gopn.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/react-bootstrap/node_modules/warning/warning.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/core-js/modules/es6.typed.uint8-array.js","webpack:///./node_modules/core-js/modules/_typed-array.js","webpack:///./node_modules/core-js/modules/_typed-buffer.js","webpack:///./node_modules/core-js/modules/_array-copy-within.js","webpack:///./node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/dom-helpers/util/camelize.js","webpack:///./node_modules/react-bootstrap/es/Col.js","webpack:///./node_modules/react-bootstrap/es/ButtonToolbar.js","webpack:///./node_modules/react-bootstrap/es/utils/createWithBsPrefix.js","webpack:///./node_modules/react-bootstrap/es/FormContext.js","webpack:///./node_modules/react-bootstrap/es/FormGroup.js","webpack:///./node_modules/react-bootstrap/es/Feedback.js","webpack:///./node_modules/react-bootstrap/es/FormControl.js","webpack:///./node_modules/react-bootstrap/es/FormCheckInput.js","webpack:///./node_modules/react-bootstrap/es/FormCheckLabel.js","webpack:///./node_modules/react-bootstrap/es/FormCheck.js","webpack:///./node_modules/react-bootstrap/es/FormLabel.js","webpack:///./node_modules/react-bootstrap/es/FormText.js","webpack:///./node_modules/react-bootstrap/es/Form.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/react-bootstrap/es/utils/createChainedFunction.js","webpack:///./node_modules/react-bootstrap/es/SafeAnchor.js","webpack:///./node_modules/react-bootstrap/es/Button.js"],"names":["dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","Buffer","global","sqrt","atan2","pow","abs","PiBy180","PiBy2","proto","min","max","degreesToRadians","originXOffset","originYOffset","clone","toFixed","multipleSpacesRegex","setObjectScaleOverridden","fabric","version","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","canvas","targetCanvas","ctx","getContext","translate","height","scale","sourceY","drawImage","width","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","Uint8Array","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","exports","document","window","HTMLDocument","implementation","createHTMLDocument","jsdom","decodeURIComponent","features","FetchExternalResources","jsdomImplForWrapper","implForWrapper","nodeCanvas","Canvas","defaultView","DOMParser","isTouchSupported","navigator","maxTouchPoints","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","initFilterBackend","isWebglSupported","console","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","indexOf","util","array","fill","observe","arguments","length","prop","on","push","stopObserving","call","fire","options","listenersForEvent","i","len","filter","value","Observable","off","trigger","Collection","_objects","add","apply","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","object","index","nonSplicing","objects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","context","getObjects","type","concat","o","item","isEmpty","size","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","set","_initGradient","filler","property","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","_setObject","obj","_set","key","toggle","Math","PI","cos","angle","sin","sign","removeFromArray","idx","getRandomInt","floor","random","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","transformPoint","p","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","yPoints","minY","left","top","invertTransform","a","r","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","slice","resolveNamespace","getSvgAttributes","attributes","parts","split","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","src","substring","loadImageInDom","div","createElement","style","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","forEach","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","centerPoint","Group","sourcePath","populateWithProperties","destination","properties","Object","toString","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","copyCanvasElement","newCanvas","toDataURL","canvasEl","format","quality","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","target","flipX","flipY","saveObjectTransform","fn","String","isTransparent","tolerance","_isTransparent","imageData","getImageData","l","data","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","aspectRatioAttrs","pop","alignX","alignY","clearFabricFontCache","fontFamily","toLowerCase","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","_join","Array","join","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","s","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","result","mDelta","mT","th3","segmentToBezier","th2","costh2","sinth2","costh3","sinth3","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","c","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","drawArc","fx","fy","coords","segs","segsNorm","bezierCurveTo","getBoundsOfArc","tx","ty","bound","find","byProperty","condition","k","invoke","method","args","value1","value2","extend","deep","Element","hasOwnProperty","getWholeChar","str","code","charCodeAt","isNaN","next","prev","replace","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","_this","superClassMethod","createClass","initialize","shift","subclasses","unknown","areHostMethods","methodNames","test","getElement","setElement","uid","getUniqueId","element","__uniqueID","createWrappedHandler","event","addListener","removeListener","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","listeners","handlers","addEventListener","removeEventListener","listener","wrappedHandler","createListener","attachEvent","detachEvent","existingHandler","handlersForEvent","createDispatcher","pointerX","clientX","pointerY","clientY","_getPointer","pageProp","clientProp","pointer","eventTouchProp","getPointer","srcElement","scroll","getScrollLeftTop","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","zoom","setStyle","styles","elementStyle","cssText","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","toArray","arrayLike","childNodes","err","makeElement","tagName","el","className","htmlFor","setAttribute","docElement","body","scrollLeft","scrollTop","host","nodeType","arr","getComputedStyle","attr","undefined","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","getById","id","getElementById","addClass","wrapElement","wrapper","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","parseInt","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","_canvas","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","emptyFn","request","onComplete","xhr","XMLHttpRequest","parameters","param","addParamToUrl","open","setRequestHeader","send","warn","noop","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","requestAnimFrame","animate","timestamp","time","start","Date","duration","finish","onChange","abort","easing","d","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","end","pos","color","posValue","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","letter-spacing","paint-order","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","clip-path","clip-rule","vector-effect","colorAttributes","stroke","normalizeAttr","normalizeValue","parentAttributes","parsed","isArray","map","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","RegExp","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","matcher","classNames","getAttribute","elementById","node","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","clipPaths","skewMatrix","matrix","commaWsp","reTransformList","reTransform","attributeValue","matrices","m","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","viewboxTransform","firstChild","recursivelyParseGradientsXlink","gradient","referencedGradient","substr","hasAttribute","children","referenceClone","cloneNode","removeAttribute","parseSVGDocument","parsingOptions","attrs","xlink","el2","currentTrans","oldLength","el3","nodeValue","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","parseAttributes","parentFontSize","ownAttributes","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","parse","chunk","pair","trim","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","text","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","ActiveXObject","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","parser","parseFromString","regexUrl","numElements","createObjects","createObject","findTag","fromElement","createCallback","checkIfDone","resolveGradient","Image","_originalElement","_removeTransformMatrix","resolveClipPath","extractPropertyDefinition","storage","lastIndex","gradientDef","createClipPathCallback","container","_newObj","fillRule","clipRule","objTransformInv","gTransform","clipPath","calcTransformMatrix","setPositionByOrigin","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","sort","pathOffset","reverse","minRadius","percentageShift","colorStop","toLive","createLinearGradient","createRadialGradient","instance","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","NUM_FRACTION_DIGITS","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","Error","renderAndResetBound","renderAndReset","bind","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","globalCompositeOperation","zoomX","zoomY","_cacheCanvas","cacheTranslationX","cacheTranslationY","render","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","row","rowIndex","charIndex","fontList","_setSVGObject","finalWidth","finalHeight","sendToBack","objs","activeSelection","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","needsFullRender","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","original","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","normalizedPointer","targetRelativeX","targetRelativeY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","evented","selectable","centerTransform","action","altKey","_getOriginFromCorner","corner","_getActionFromCorner","alreadySelected","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","forbidScalingX","forbidScalingY","changeX","changeY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","globalPointer","isEditing","subTarget","objToCheck","pointerToUse","subTargetCheck","ignoreZoom","_absolutePointer","_pointer","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","opt","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","clearContextTop","_setCursorFromEvent","cursorOffset","mr","mb","ml","addEventOptions","passive","checkClick","which","button","cursorMap","_bindEvents","addOrRemove","functor","eventjsFunctor","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","eventsBound","_simpleEventHandler","self","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","__onOrientationChange","__onShake","__onLongPress","preventDefault","_fireEnterLeaveEvents","stopPropagation","_cacheTransformEventData","_handleEvent","_resetTransformEventData","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","shouldRender","isClick","_target","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","_maybeGroupObjects","isMoving","__corner","eventType","subTargets","absolutePointer","_scaling","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","_previousPointer","shouldGroup","_shouldGroup","_handleGrouping","saveState","touches","_transformObject","_fireOverOutEvents","fireSynteticInOutEvents","targetName","canvasEvtOut","evtOut","canvasEvtIn","evtIn","config","inOpt","outOpt","inFires","oldTarget","targetChanged","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","n","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","multiplier","toCanvasElement","cropping","scaledWidth","scaledHeight","originalWidth","originalHeight","newZoom","vp","originalInteractive","originalContext","newVp","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","strokeDashOffset","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","strokeUniform","dirty","paintFirst","stateProperties","cacheProperties","inverted","absolutePositioned","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","setTransform","calcOwnMatrix","_removeDefaultValues","getObjectScaling","scaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","drawCacheOnCanvas","_removeCacheCanvas","drawObject","propertySet","isCacheDirty","needsItsOwnCache","ownCaching","willDrawShadow","drawClipPathOnCache","originalFill","originalStroke","_setClippingProperties","_setStrokeStyles","_setFillStyles","_drawClipPath","skipCanvas","_removeShadow","decl","lineDashOffset","dashArray","alternative","getLineDash","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","utils","origParams","originalShadow","withoutTransform","withoutShadow","boundingRect","getBoundingRect","shadowOffset","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","enlivedProps","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","w","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","skipAbsolute","_setCornerCoords","transformMatrixKey","prefix","cache","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","dimX","dimY","noSkew","_finalizeDiemensions","bbox","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","deltaY","overline","underline","linethrough","getSvgCommons","getSvgTransform","full","additionalTransform","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","_toSVG","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","clipPathMarkup","noStyle","withShadow","styleInfo","shadowInfo","vectorEffect","absoluteClipPath","addPaintOrder","saveProps","props","tmpObj","dashedPropertySet","keys","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","svgString","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","calcDim","_calcDimensions","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","_getOffsetTransform","digits","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","_includeDefaultValues","objsToObject","originalDefaults","_obj","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","enlivedClipPath","toGroup","newGroup","childrenOverride","srcFromAttribute","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","removeTexture","_initConfig","applyFilters","resizeFilter","applyResizeFilters","backend","filterBackend","evictCachesForKey","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","strokeSvg","imageMarkup","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","elementToDraw","sW","sH","sX","sY","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","resources","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","startTime","drawImageTime","testContext","now","copyGLTo2D","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","uniqueId","gpuInfo","renderer","vendor","ext","getExtension","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","temp","main","mainParameter","_class","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","distance","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","some","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","char","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPostion","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLenght","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","currentActive","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","internalMarkup","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","Textbox","minWidth","dynamicMinWidth","__cachedLines","_wordJoiners","splitByGrapheme","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","getMinWidth","tw","Typed","hide","TYPED","VIEW","ABV","DataView","CONSTR","TypedArrayConstructors","module","toInteger","toLength","it","RangeError","$keys","hiddenKeys","getOwnPropertyNames","O","toAbsoluteIndex","aLen","endPos","warning","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","isEncoding","actual","write","fromString","isBuffer","checked","val","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","defineProperty","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","init","LIBRARY","fails","$export","$typed","$buffer","anInstance","propertyDesc","redefineAll","toIndex","toPrimitive","has","classof","isObject","isArrayIter","create","getPrototypeOf","gOPN","getIterFn","wks","createArrayMethod","createArrayIncludes","speciesConstructor","ArrayIterators","Iterators","$iterDetect","setSpecies","arrayFill","arrayCopyWithin","$DP","$GOPD","gOPD","ArrayProto","$ArrayBuffer","$DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayValues","values","arrayKeys","arrayEntries","entries","arrayLastIndexOf","arrayReduce","arrayReduceRight","reduceRight","arrayJoin","arraySort","arraySlice","arrayToString","arrayToLocaleString","toLocaleString","ITERATOR","TAG","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","TYPED_ARRAY","$map","allocate","LITTLE_ENDIAN","Uint16Array","FORCED_SET","toOffset","BYTES","validate","C","speciesFromList","fromList","addGetter","internal","_d","$from","step","iterator","mapfn","mapping","iterFn","done","$of","TO_LOCALE_BUG","$toLocaleString","copyWithin","every","callbackfn","predicate","findIndex","searchElement","separator","middle","comparefn","$begin","BYTES_PER_ELEMENT","$slice","$set","$iterators","isTAIndex","$getDesc","$setDesc","desc","writable","enumerable","S","F","getOwnPropertyDescriptor","$TypedArrayPrototype$","KEY","CLAMPED","NAME","GETTER","SETTER","TypedArray","Base","TAC","FORCED","TypedArrayPrototype","addElement","getter","setter","$offset","$length","$len","iter","$nativeIterator","CORRECT_ITER_NAME","name","$iterator","G","W","of","P","DESCRIPTORS","setToStringTag","PROTOTYPE","WRONG_INDEX","BaseBuffer","$BUFFER","$LENGTH","$OFFSET","packIEEE754","unpackIEEE754","unpackI32","packI8","packI16","packI32","packF64","packF32","view","isLittleEndian","intIndex","store","_b","pack","conversion","ArrayBufferProto","$setInt8","setInt8","getInt8","setUint8","bufferLength","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","count","inc","pIE","createDesc","toIObject","IE8_DOM_DEFINE","__esModule","default","rHyphen","_","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__","DEVICE_SIZES","Col","forwardRef","_ref","ref","bsPrefix","Component","as","spans","classes","brkPoint","span","order","_propValue$span","displayName","defaultProps","__webpack_exports__","ButtonToolbar","role","createWithBsPrefix_pascalCase","camelize_default","es_FormContext","react_default","createContext","controlId","FormGroup","objectWithoutPropertiesLoose","ThemeProvider","react","Provider","esm_extends","classnames_default","es_FormGroup","propTypes","prop_types_default","isRequired","elementType","Feedback","es_Feedback","FormControl","_classes","isValid","isInvalid","plaintext","readOnly","_classes2","_classes3","es_FormControl","FormCheckInput","isStatic","_useContext","custom","es_FormCheckInput","FormCheckLabel","es_FormCheckLabel","FormCheck","inline","disabled","feedback","title","label","innerFormContext","hasLabel","input","Fragment","Input","Label","es_FormCheck","FormLabel","column","srOnly","es_FormLabel","FormText","_temp","_ref$displayName","_ref$Component","BsComponent","es_FormText","Form","validated","Row","_ref2","_ref2$as","Tag","resolvedPrefix","Control","Check","_assertThisInitialized","ReferenceError","utils_createChainedFunction","_len","funcs","acc","_len2","_key2","isTrivialHref","href","SafeAnchor_SafeAnchor","_React$Component","SafeAnchor","handleClick","handleKeyDown","inheritsLoose","_proto","_this$props","_this$props2","innerRef","tabIndex","es_SafeAnchor","Button","variant","block"],"mappings":"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","file":"8-77899a134b7fdf39713f.js","sourcesContent":["var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '2.7.0' };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n  define([], function() { return fabric; });\n}\n/* _AMD_END_ */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  if (document instanceof HTMLDocument)\n    fabric.document = document;\n  else\n    fabric.document = document.implementation.createHTMLDocument(\"\");\n  fabric.window = window;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require('jsdom')\n    .jsdom(\n      decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n      { features: {\n        FetchExternalResources: ['img']\n      }\n      });\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = fabric.document.defaultView;\n  DOMParser = require('xmldom').DOMParser;\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document ||\n  (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0);\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  'fill', 'fill-opacity', 'fill-rule',\n  'opacity',\n  'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset',\n  'stroke-linejoin', 'stroke-miterlimit',\n  'stroke-opacity', 'stroke-width',\n  'id', 'paint-order', 'vector-effect',\n  'instantiated_by_use', 'clip-path'\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.canvasModule = 'canvas';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\n/**\n * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.arcToSegmentsCache = { };\n\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.boundsOfCurveCache = { };\n\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\nfabric.cachesBoundsOfCurve = true;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this._objects;\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this._objects,\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this._objects.indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function(angle) {\n      if (angle === 0) { return 1; }\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n      var angleSlice = angle / PiBy2;\n      switch (angleSlice) {\n        case 1: case 3: return 0;\n        case 2: return -1;\n      }\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function(angle) {\n      if (angle === 0) { return 0; }\n      var angleSlice = angle / PiBy2, sign = 1;\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n      switch (angleSlice) {\n        case 1: return sign;\n        case 2: return 0;\n        case 3: return -sign;\n      }\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements && elements.length === 1) {\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @param {CanvasElement} canvas to copy size and content of\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function(canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * since 2.6.0 moved from canvas instance to utility.\n     * @param {CanvasElement} canvasEl to copy size and content of\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n     * @param {Number} quality <= 1 and > 0\n     * @static\n     * @memberOf fabric.util\n     * @return {String} data url\n     */\n    toDataURL: function(canvasEl, format, quality) {\n      return canvasEl.toDataURL('image/' + format, quality);\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function (target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (fabric.arcToSegmentsCache[argsString]) {\n      return fabric.arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    fabric.arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    return [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas property in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas') {\n            destination[property] = extend({ }, source[property]);\n          }\n          else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n        return event.clientX;\n      },\n\n      pointerY = function(event) {\n        return event.clientY;\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n    var pointer, eventTouchProp = event[touchProp];\n\n    if (eventTouchProp && eventTouchProp[0]) {\n      pointer = eventTouchProp[0][clientProp];\n    }\n\n    if (typeof pointer === 'undefined') {\n      pointer = event[clientProp];\n    }\n\n    return pointer;\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  };\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n    var impl = fabric.jsdomImplForWrapper(element);\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null;\n      // unsure if necessary\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'letter-spacing':     'charSpacing',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-dashoffset':  'strokeDashOffset',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity',\n        'clip-path':          'clipPath',\n        'clip-rule':          'clipRule',\n        'vector-effect':      'strokeUniform'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n  fabric.clipPaths = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'vector-effect') {\n      value = value === 'non-scaling-stroke';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else if (attr === 'href' || attr === 'xlink:href') {\n      return value;\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = fabric.iMatrix,\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, len;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\n          attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n        // calculate additional translation to move the viewbox\n      }\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\n        // calculate additional translation to move the viewbox\n      }\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX + widthDiff) + ' ' +\n                  (minY * scaleY + heightDiff) + ') ';\n    parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n    var clipPaths = { };\n    descendants.filter(function(el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function(el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function(el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths;\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).substr(1),\n        referencedGradient = elementById(doc, xLink);\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n    gradientsAttrs.forEach(function(attr) {\n      if (!gradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, gradientDefs = { };\n      j = elList.length;\n      while (j--) {\n        el = elList[j];\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize, parentFontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      if (ownAttributes['font-size']) {\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n        ownAttributes['font-size'] = fontSize = parseUnit(ownAttributes['font-size'], parentFontSize);\n      }\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n};\n\n(function(proto) {\n  proto.parse = function() {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function() {\n    var _this = this;\n    this.elements.forEach(function(element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function(el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function(el, index) {\n    var klass = this.findTag(el);\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      }\n      catch (err) {\n        fabric.log(err);\n      }\n    }\n    else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function(index, el) {\n    var _this = this;\n    return function(obj) {\n      var _options;\n      _this.resolveGradient(obj, 'fill');\n      _this.resolveGradient(obj, 'stroke');\n      if (obj instanceof fabric.Image && obj._originalElement) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n      obj._removeTransformMatrix(_options);\n      _this.resolveClipPath(obj);\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function(obj, property, storage) {\n    var value = obj[property];\n    if (!(/^url\\(/).test(value)) {\n      return;\n    }\n    var id = this.regexUrl.exec(value)[1];\n    this.regexUrl.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function(obj, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n    if (gradientDef) {\n      obj.set(property, fabric.Gradient.fromElement(gradientDef, obj));\n    }\n  };\n\n  proto.createClipPathCallback = function(obj, container) {\n    return function(_newObj) {\n      _newObj._removeTransformMatrix();\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function(obj) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element, klass, objTransformInv, container, gTransform, options;\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(\n          element,\n          this.createClipPathCallback(obj, container),\n          this.options\n        );\n      }\n      if (container.length === 1) {\n        clipPath = container[0];\n      }\n      else {\n        clipPath = new fabric.Group(container);\n      }\n      gTransform = fabric.util.multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix()\n      );\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({ x: options.translateX, y: options.translateY }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n  };\n\n  proto.checkIfDone = function() {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function(el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = clone(this.coords, true), i, len,\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\n          offsetX = object.width / 2 - this.offsetX, offsetY = object.height / 2 - this.offsetY;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n\n      transform[4] -= offsetX;\n      transform[5] -= offsetY;\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      commonAttributes += ' gradientTransform=\"matrix(' + transform.join(' ') + ')\" ';\n\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix, i;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20, color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * if set to false, takes precedence over the object value.\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument.\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     * @deprecated since 2.3.0\n     * Use before:transform event\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    // TODO: fix stretched examples\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    cancelRequestedRender: function() {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform, path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render', { ctx: ctx, });\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      if (path) {\n        path.canvas = this;\n        // needed to setup a couple of variables\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({ forClipping: true });\n        this.drawClipPathOnCanvas(ctx);\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render', { ctx: ctx, });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function(ctx) {\n      var v = this.viewportTransform, path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'], v;\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          v = this.viewportTransform;\n          ctx.save();\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var clipPath = this.clipPath, data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude),\n      };\n      if (clipPath) {\n        data.clipPath = this._toObjectMethod(clipPath, methodName, propertiesToInclude);\n      }\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this._objects.filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n      this._setSVGObjects(markup, reviver);\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        this.createSVGClipPathMarkup(options),\n        '</defs>\\n'\n      );\n    },\n\n    createSVGClipPathMarkup: function(options) {\n      var clipPath = this.clipPath;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return  '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(options.reviver) +\n          '</clipPath>\\n';\n      }\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this._objects;\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property], vpt = this.viewportTransform, finalWidth = this.width / vpt[0],\n          finalHeight = this.height / vpt[3];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\n          ' x=\"', filler.offsetX - finalWidth / 2, '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : finalWidth ),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : finalHeight),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n          'fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.forEachObject(function(object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n      this.backgroundImage = null;\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray || []);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function (ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n          this._render();\n        }\n        else {\n          var points = this._points, length = points.length, ctx = this.canvas.contextTop;\n          // draw the curve update\n          this._saveAndTransform(ctx);\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this.oldEnd = undefined;\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n      this._points.push(point);\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n      this._setBrushStyles();\n      var color = new fabric.Color(this.color);\n      this.needsFullRender = (color.getAlpha() < 1);\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\n      path.top = position.y;\n      path.left = position.x;\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.renderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function() {\n    var ctx  = this.canvas.contextTop, i, len,\n        points = this.points, point;\n    this._saveAndTransform(ctx);\n    for (i = 0, len = points.length; i < len; i++) {\n      point = points[i];\n      ctx.fillStyle = point.fill;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n      ctx.closePath();\n      ctx.fill();\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function(sprayChunk) {\n    var ctx = this.canvas.contextTop, i, len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function() {\n    var ctx = this.canvas.contextTop, i, ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified\n   * @fires object:rotated\n   * @fires object:scaled\n   * @fires object:moved\n   * @fires object:skewed\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:skewing\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:transform\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before\n   * @fires mouse:move:before\n   * @fires mouse:up:before\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    renderTopLayer: function(ctx) {\n      ctx.save();\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      }\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n        this.contextTopDirty = true;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.originX !== 'center') {\n          if (t.originX === 'right') {\n            t.mouseXSign = -1;\n          }\n          else {\n            t.mouseXSign = 1;\n          }\n        }\n        if (t.originY !== 'center') {\n          if (t.originY === 'bottom') {\n            t.mouseYSign = -1;\n          }\n          else {\n            t.mouseYSign = 1;\n          }\n        }\n\n        t.originX = 'center';\n        t.originY = 'center';\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      // in case the target is the activeObject, we cannot execute this optimization\n      // because we need to draw controls too.\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\n        var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\n            targetRelativeX = Math.max(target.cacheTranslationX + (normalizedPointer.x * target.zoomX), 0),\n            targetRelativeY = Math.max(target.cacheTranslationY + (normalizedPointer.y * target.zoomY), 0);\n\n        var isTransparent = fabric.util.isTransparent(\n          target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\n\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false,\n      });\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     * @param {Boolean} alreadySelected true if target is already selected\n     * @param {String} corner a string representing the corner ml, mr, tl ...\n     * @param {Event} e Event object\n     * @param {fabric.Object} [target] inserted back to help overriding. Unused\n     */\n    _getActionFromCorner: function(alreadySelected, corner, e /* target */) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(alreadySelected, corner, e, target),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        // used by transation\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        // unsure they are usefull anymore.\n        // left: target.left,\n        // top: target.top,\n        theta: degreesToRadians(target.angle),\n        // end of unsure\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey],\n        original: fabric.util.saveObjectTransform(target),\n      };\n\n      this._currentTransform.original.originX = origin.x;\n      this._currentTransform.original.originY = origin.y;\n\n      this._resetCurrentTransform();\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.lockScalingX,\n          lockScalingY = target.lockScalingY,\n          lockScalingFlip = target.lockScalingFlip;\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          scaleX = localMouse.x * target.scaleX / _dim.x,\n          scaleY = localMouse.y * target.scaleY / _dim.y,\n          changeX = target.scaleX !== scaleX,\n          changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1, newScaleX, newScaleY;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = newScaleX !== target.scaleX || newScaleY !== target.scaleY;\n      target.set('scaleX', newScaleX);\n      target.set('scaleY', newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform,\n          target = t.target, constraintPosition,\n          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n      if (target.lockRotation) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\n          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (target.snapAngle > 0) {\n        var snapAngle  = target.snapAngle,\n            snapThreshold  = target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (target.angle === angle) {\n        hasRotated = false;\n      }\n      else {\n        // rotation only happen here\n        target.angle = angle;\n        // Make sure the constraints apply\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function(pointer, obj, globalPointer) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ?\n          this._normalizePointer(objToCheck.group, pointer) : pointer;\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [], opt = { e: e };\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed;\n        // added for backward compatibility\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      }\n      else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n        opt.selected = added;\n        // added for backward compatibility\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      }\n      else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: currentActives[0], e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this._activeObject.realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n\n    setViewportTransform: function (vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\n      addEventOptions = { passive: false };\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n      this.addOrRemove(addListener, 'add');\n    },\n\n    addOrRemove: function(functor, eventjsFunctor) {\n      functor(fabric.window, 'resize', this._onResize);\n      functor(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      functor(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      functor(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      functor(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      functor(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      functor(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n      functor(this.upperCanvasEl, 'dblclick', this._onDoubleClick);\n      functor(this.upperCanvasEl, 'touchstart', this._onMouseDown, addEventOptions);\n      functor(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n      functor(this.upperCanvasEl, 'dragover', this._onDragOver);\n      functor(this.upperCanvasEl, 'dragenter', this._onDragEnter);\n      functor(this.upperCanvasEl, 'dragleave', this._onDragLeave);\n      functor(this.upperCanvasEl, 'drop', this._onDrop);\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'shake', this._onShake);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      this.addOrRemove(removeListener, 'remove');\n      // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function(e) {\n      e.preventDefault();\n      var target = this._simpleEventHandler('dragover', e);\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'dblclick');\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      addListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function(target) {\n      var activeObject = this._activeObject;\n\n      if (\n        !!activeObject !== !!target ||\n        (activeObject && target && (activeObject !== target))\n      ) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      }\n      else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, transform = this._currentTransform,\n          groupSelector = this._groupSelector, shouldRender = false,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      this._cacheTransformEventData(e);\n      target = this._target;\n      this._handleEvent(e, 'up:before');\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n        this._resetTransformEventData();\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        shouldRender = transform.actionPerformed;\n      }\n\n      if (!isClick) {\n        this._maybeGroupObjects(e);\n        shouldRender || (shouldRender = this._shouldRender(target));\n      }\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n      this._groupSelector = null;\n      this._currentTransform = null;\n      // reset the target information about which corner is selected\n      target && (target.__corner = 0);\n      if (shouldRender) {\n        this.requestRenderAll();\n      }\n      else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function(eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n          };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n      if (!targets) {\n        return target;\n      }\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false,\n            pointer: this._pointer,\n            absolutePointer: this._absolutePointer,\n            transform: this._currentTransform\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target,\n          eventName,\n          options = {\n            e: e,\n            target: target,\n            transform: transform,\n          };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        if (transform.actionPerformed) {\n          eventName = this._addEventOptions(options, transform);\n          this._fire(eventName, options);\n        }\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * Mutate option object in order to add by property and give back the event name.\n     * @private\n     * @param {Object} options to mutate\n     * @param {Object} transform to inspect action from\n     */\n    _addEventOptions: function(options, transform) {\n      // we can probably add more details at low cost\n      // scale change, rotation changes, translation changes\n      var eventName, by;\n      switch (transform.action) {\n        case 'scaleX':\n          eventName = 'scaled';\n          by = 'x';\n          break;\n        case 'scaleY':\n          eventName = 'scaled';\n          by = 'y';\n          break;\n        case 'skewX':\n          eventName = 'skewed';\n          by = 'x';\n          break;\n        case 'skewY':\n          eventName = 'skewed';\n          by = 'y';\n          break;\n        case 'scale':\n          eventName = 'scaled';\n          by = 'equally';\n          break;\n        case 'rotate':\n          eventName = 'rotated';\n          break;\n        case 'drag':\n          eventName = 'moved';\n          break;\n      }\n      options.by = by;\n      return eventName;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'down:before');\n      var target = this._target;\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer;\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n        }\n      }\n      this._handleEvent(e, 'down');\n      // we must renderAll so that we update the visuals\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function() {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function(e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t,\n      });\n      // determine if it's a drag or rotate case\n      if (t.corner) {\n        this.onBeforeScaleRotate(t.target);\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n      this._handleEvent(e, 'move:before');\n      this._cacheTransformEventData(e);\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this._pointer;\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      this.fireSynteticInOutEvents(target, e, {\n        targetName: '_hoveredTarget',\n        canvasEvtOut: 'mouse:out',\n        evtOut: 'mouseout',\n        canvasEvtIn: 'mouse:over',\n        evtIn: 'mouseover',\n      });\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function(target, e) {\n      this.fireSynteticInOutEvents(target, e, {\n        targetName: '_draggedoverTarget',\n        evtOut: 'dragleave',\n        evtIn: 'dragenter',\n      });\n    },\n\n    /**\n     * Manage the syntetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSynteticInOutEvents: function(target, e, config) {\n      var inOpt, outOpt, oldTarget = this[config.targetName], outFires, inFires,\n          targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\n      if (targetChanged) {\n        inOpt = { e: e, target: target, previousTarget: oldTarget };\n        outOpt = { e: e, target: oldTarget, nextTarget: target };\n        this[config.targetName] = target;\n      }\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'wheel');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          options = {\n            target: transform.target,\n            e: e,\n            transform: transform,\n            pointer: pointer\n          };\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', options);\n          this.setCursor(options.target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, options) {\n      this.fire('object:' + eventName, options);\n      options.target.fire(eventName, options);\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      }\n      else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      }\n      else {\n        return this.defaultCursor;\n      }\n    },\n\n    actionIsDisabled: function(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      }\n      else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      }\n      else if (corner === 'mtr') {\n        return target.lockRotation;\n      }\n      else {\n        return this._isUniscalePossible(e, target) ?\n          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.angle % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({ e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      // avoid multi select when shift click on a corner\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(e),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function(e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible || currentObject.onSelect({ e: e })) {\n          continue;\n        }\n\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2))\n        ) {\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n    }\n  });\n\n})();\n\n\n(function () {\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\n          canvasEl = this.toCanvasElement(multiplier, options);\n      return fabric.util.toDataURL(canvasEl, format, quality);\n    },\n\n    /**\n     * Create a new HTMLCanvas element painted with the current canvas content.\n     * No need to resize the actual one or repaint it.\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\n     * This is an intermediary step used to get to a dataUrl but also it is usefull to\n     * create quick image copies of a canvas without passing for the dataUrl string\n     * @param {Number} [multiplier] a zoom factor.\n     * @param {Object} [cropping] Cropping informations\n     * @param {Number} [cropping.left] Cropping left offset.\n     * @param {Number} [cropping.top] Cropping top offset.\n     * @param {Number} [cropping.width] Cropping width.\n     * @param {Number} [cropping.height] Cropping height.\n     */\n    toCanvasElement: function(multiplier, cropping) {\n      multiplier = multiplier || 1;\n      cropping = cropping || { };\n      var scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          originalWidth = this.width,\n          originalHeight = this.height,\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\n          originalInteractive = this.interactive,\n          originalContext = this.contextContainer,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          canvasEl = fabric.util.createCanvasElement();\n      canvasEl.width = scaledWidth;\n      canvasEl.height = scaledHeight;\n      this.interactive = false;\n      this.viewportTransform = newVp;\n      this.width = scaledWidth;\n      this.height = scaledHeight;\n      this.calcViewportBoundaries();\n      this.contextContainer = canvasEl.getContext('2d');\n      // will be renderAllExport();\n      this.renderAll();\n      this.viewportTransform = vp;\n      this.width = originalWidth;\n      this.height = originalHeight;\n      this.calcViewportBoundaries();\n      this.contextContainer = originalContext;\n      this.interactive = originalInteractive;\n      return canvasEl;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        enlivenedObjects.forEach(function(obj, index) {\n          // we splice the array just in case some custom classes restored from JSON\n          // will add more object to canvas at canvas init.\n          _this.insertAt(obj, index);\n        });\n        _this.renderOnAddRemove = renderOnAddRemove;\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        _this.renderAll();\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.util.createCanvasElement();\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument).\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When `false`, the stoke width will scale with the object.\n     * When `true`, the stroke will always match the exact pixel size entered for stroke width.\n     * default to false\n     * @since 2.6.0\n     * @type Boolean\n     * @default false\n     * @type Boolean\n     * @default false\n     */\n    strokeUniform:              false,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst clipPath strokeUniform'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' +\n      ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'\n    ).split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n      // if canvas gets created, is empty, so dirty.\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var objectScale = this.getTotalObjectScaling(),\n          dim = this._getNonTransformedDimensions(),\n          zoomX = objectScale.scaleX,\n          zoomY = objectScale.scaleY,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly crating problem\n        // in situation in wich the cache canvas gets an upper limit\n        width: width + ALIASING_LIMIT,\n        height: height + ALIASING_LIMIT,\n        zoomX: zoomX,\n        zoomY: zoomY,\n        x: dim.x,\n        y: dim.y\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      var targetCanvas = this.canvas;\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x * zoomX / 2;\n        drawingHeight = dims.y * zoomY / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var m;\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      }\n      else {\n        m = this.calcOwnMatrix();\n      }\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeDashOffset:         this.strokeDashOffset,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS),\n          };\n\n      if (this.clipPath) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function() {\n      var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 ||\n        (this.width === 0 && this.height === 0 && this.strokeWidth === 0) ||\n        !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    renderCache: function(options) {\n      options = options || {};\n      if (!this._cacheCanvas) {\n        this._createCacheCanvas();\n      }\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns false\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' && typeof this.shadow === 'object') {\n        return true;\n      }\n      if (this.clipPath) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching &&\n      (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCache: function(ctx) {\n      var path = this.clipPath;\n      ctx.save();\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n      if (path.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      }\n      else {\n        ctx.globalCompositeOperation = 'destination-in';\n      }\n      //ctx.scale(1 / 2, 1 / 2);\n      if (path.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx, forClipping) {\n      var originalFill = this.fill, originalStroke = this.stroke;\n      if (forClipping) {\n        this.fill = 'black';\n        this.stroke = '';\n        this._setClippingProperties(ctx);\n      }\n      else {\n        this._renderBackground(ctx);\n        this._setStrokeStyles(ctx, this);\n        this._setFillStyles(ctx, this);\n      }\n      this._render(ctx);\n      this._drawClipPath(ctx);\n      this.fill = originalFill;\n      this.stroke = originalStroke;\n    },\n\n    _drawClipPath: function(ctx) {\n      var path = this.clipPath;\n      if (!path) { return; }\n      // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n      path.canvas = this.canvas;\n      path.shouldCache();\n      path._transformDone = true;\n      path.renderCache({ forClipping: true });\n      this.drawClipPathOnCache(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty ||\n          (this.clipPath && this.clipPath.absolutePositioned) ||\n          (this.statefullCache && this.hasStateChanged('cacheProperties'))\n        ) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive\n          ? decl.stroke.toLive(ctx, this)\n          : decl.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive\n          ? decl.fill.toLive(ctx, this)\n          : decl.fill;\n      }\n    },\n\n    _setClippingProperties: function(ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n      if (this.strokeUniform) {\n        ctx.setLineDash(ctx.getLineDash().map(function(value) { return value * ctx.lineWidth; }));\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var shadow = this.shadow, canvas = this.canvas,\n          multX = (canvas && canvas.viewportTransform[0]) || 1,\n          multY = (canvas && canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (canvas && canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = shadow.color;\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      if (this.strokeUniform) {\n        ctx.scale(1 / this.scaleX, 1 / this.scaleY);\n      }\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * could make use of both toDataUrl or toCanvasElement.\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var canvasEl = this.toCanvasElement(options);\n      if (callback) {\n        callback(new fabric.Image(canvasEl));\n      }\n      return this;\n    },\n\n    /**\n     * Converts an object into a HTMLCanvas element\n     * @param {Object} options Options object\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toCanvasElement: function(options) {\n      options || (options = { });\n\n      var utils = fabric.util, origParams = utils.saveObjectTransform(this),\n          originalShadow = this.shadow, abs = Math.abs,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\n\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n          boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow, scaling,\n          shadowOffset = { x: 0, y: 0 }, shadowBlur;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n        scaling = this.getObjectScaling();\n        shadowOffset.x = 2 * Math.round((abs(shadow.offsetX) + shadowBlur) * abs(scaling.scaleX));\n        shadowOffset.y = 2 * Math.round((abs(shadow.offsetY) + shadowBlur) * abs(scaling.scaleY));\n      }\n      el.width = boundingRect.width + shadowOffset.x;\n      el.height = boundingRect.height + shadowOffset.y;\n      el.width += el.width % 2 ? 2 - el.width % 2 : 0;\n      el.height += el.height % 2 ? 2 - el.height % 2 : 0;\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: false,\n        renderOnAddRemove: false,\n        skipOffscreen: false,\n      });\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n      this.shadow = originalShadow;\n      this.canvas = originalCanvas;\n      this.set(origParams).setCoords();\n      // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n\n      return canvasEl;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transformMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @param {Function} [callback] Callback to invoke when image set as a pattern\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * object.setPatternFill({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat'\n     * },canvas.renderAll.bind(canvas));\n     */\n    setPatternFill: function(options, callback) {\n      return this.set('fill', new fabric.Pattern(options, callback));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n        object.clipPath = enlivedProps[0];\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices,\n      transformPoint = fabric.util.transformPoint;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are usefull to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n          ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the objects containe the point\n     */\n    _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          vpt = this.getViewportTransform(),\n          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2, h = dim.y / 2,\n          tl = transformPoint({ x: -w, y: -h }, finalMatrix),\n          tr = transformPoint({ x: w, y: -h }, finalMatrix),\n          bl = transformPoint({ x: -w, y: h }, finalMatrix),\n          br = transformPoint({ x: w, y: h }, finalMatrix);\n      if (!absolute) {\n        var padding = this.padding, angle = degreesToRadians(this.angle),\n            cos = fabric.util.cos(angle), sin = fabric.util.sin(angle),\n            cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\n            cosPMinusSinP = cosP - sinP;\n        if (padding) {\n          tl.x -= cosPMinusSinP;\n          tl.y -= cosPSinP;\n          tr.x += cosPSinP;\n          tr.y -= cosPMinusSinP;\n          bl.x -= cosPSinP;\n          bl.y += cosPMinusSinP;\n          br.x += cosPMinusSinP;\n          br.y += cosPSinP;\n        }\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n      }\n\n      // if (!absolute) {\n      //   var canvas = this.canvas;\n      //   setTimeout(function() {\n      //     canvas.contextTop.clearRect(0, 0, 700, 700);\n      //     canvas.contextTop.fillStyle = 'green';\n      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n      //   }, 50);\n      // }\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height.\n     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = fabric.util.cos(theta), sin = fabric.util.sin(theta);\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function() {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this.calcOwnMatrix();\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this._calcTranslateMatrix(),\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(), dimX, dimY,\n          noSkew = skewX === 0 && skewY === 0;\n\n      if (this.strokeUniform) {\n        dimX = this.width;\n        dimY = this.height;\n      }\n      else {\n        dimX = dimensions.x;\n        dimY = dimensions.y;\n      }\n      if (noSkew) {\n        return this._finalizeDiemensions(dimX * this.scaleX, dimY * this.scaleY);\n      }\n      else {\n        dimX /= 2;\n        dimY /= 2;\n      }\n      var points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return this._finalizeDiemensions(bbox.width, bbox.height);\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @param Number width width of the bbox\n     * @param Number height height of the bbox\n     * @private\n     * @return {Object} .x finalized width dimension\n     * @return {Object} .y finalized height dimension\n     */\n    _finalizeDiemensions: function(width, height) {\n      return this.strokeUniform ?\n        { x: width + this.strokeWidth, y: height + this.strokeWidth }\n        :\n        { x: width, y: height };\n    },\n    /*\n     * Calculate object dimensions for controls. include padding and canvas zoom\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-dashoffset: ', strokeDashOffset, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ?\n        'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\n          '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        deltaY,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function(style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') +\n          (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function() {\n      return [\n        this.id ? 'id=\"' + this.id + '\" ' : '',\n        this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : '',\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function(full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = transform.map(function(value) {\n            return toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n          }).join(' ');\n      return 'transform=\"matrix(' + svgTransform + ')' +\n        (additionalTransform || '') + this.getSvgTransformMatrix() + '\" ';\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ')' : '';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(), { reviver: reviver });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [\n            this.getSvgTransform(true, additionalTransform),\n            this.getSvgCommons(),\n          ].join(''),\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle, withShadow = options.withShadow,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\n          absoluteClipPath = this.clipPath && this.clipPath.absolutePositioned,\n          commonPieces, markup = [], clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS'),\n          additionalTransform = options.additionalTransform;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(reviver) +\n          '</clipPath>\\n';\n      }\n      if (absoluteClipPath) {\n        markup.push(\n          '<g ', shadowInfo, this.getSvgCommons(), ' >\\n'\n        );\n      }\n      markup.push(\n        '<g ',\n        this.getSvgTransform(false),\n        !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n        ' >\\n'\n      );\n      commonPieces = [\n        styleInfo,\n        vectorEffect,\n        noStyle ? '' : this.addPaintOrder(), ' ',\n        additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : '',\n      ].join('');\n      objectMarkup[index] = commonPieces;\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!currentValue ||\n          typeof currentValue !== 'object' ||\n          (!firstPass && keys.length !== Object.keys(currentValue).length)\n      ) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n        if (key === 'canvas') {\n          continue;\n        }\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\n            styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n            styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top, styleOverride);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top, styleOverride);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height, styleOverride);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top, styleOverride);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height, styleOverride);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2, styleOverride);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2, styleOverride);\n      }\n\n      // middle-top-rotate\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var p = this.calcLinePoints();\n      return [\n        '<line ', 'COMMON_PARTS',\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString, x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        svgString = [\n          '<circle ', 'COMMON_PARTS',\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" />\\n'\n        ];\n      }\n      else {\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\n            startY = fabric.util.sin(this.startAngle) * this.radius,\n            endX = fabric.util.cos(this.endAngle) * this.radius,\n            endY = fabric.util.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n        svgString = [\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" ', 'COMMON_PARTS', ' />\\n'\n        ];\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        this.startAngle,\n        this.endAngle, false);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ].join(',');\n      return [\n        '<polygon ', 'COMMON_PARTS',\n        'points=\"', points,\n        '\" />'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      return [\n        '<ellipse ', 'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback) {\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var x = -this.width / 2, y = -this.height / 2;\n      return [\n        '<rect ', 'COMMON_PARTS',\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.rx, '\" ry=\"', this.ry,\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      var calcDim = this._calcDimensions();\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      return [\n        '<' + this.type + ' ', 'COMMON_PARTS',\n        'points=\"', points.join(''),\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polygon(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      toFixed = fabric.util.toFixed,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n        top: this.top,\n        left: this.left,\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var path = this.path.map(function(path) {\n        return path.join(' ');\n      }).join(' ');\n      return [\n        '<path ', 'COMMON_PARTS',\n        'd=\"', path,\n        '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      ];\n    },\n\n    _getOffsetTransform: function() {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' +\n          toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return '\\t' + this._createBaseClipPathSVGMarkup(\n        this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform }\n      );\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform  });\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        }\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n      var objsToObject = this._objects.map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      this.ownCaching = ownCache;\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return fabric.Object.prototype.willDrawShadow.call(this);\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n      this._drawClipPath(ctx);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0, left = minXY.x || 0,\n          width = (maxXY.x - minXY.x) || 0,\n          height = (maxXY.y - minXY.y) || 0;\n      this.width = width;\n      this.height = height;\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      return this._createBaseSVGMarkup(\n        svgString,\n        { reviver: reviver, noStyle: true, withShadow: true });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, { reviver: reviver });\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedClipPath) {\n        var options = fabric.util.object.clone(object, true);\n        options.clipPath = enlivedClipPath[0];\n        delete options.objects;\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects.concat();\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function(object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\n     * This allows for relative urls as image src.\n     * @since 2.7.0\n     * @type Boolean\n     * @default\n     */\n    srcFromAttribute: false,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * @since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal fiters\n      // and is triggered by user interactions rather than dev code\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function(key) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function() {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\n     * @return {Boolean}\n     */\n    hasCrop: function() {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString = [], imageMarkup = [], strokeSvg,\n          x = -this.width / 2, y = -this.height / 2, clipPath = '';\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push(\n          '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n          '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\n          '</clipPath>\\n'\n        );\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', this._element.width || this._element.naturalWidth,\n        '\" height=\"', this._element.height || this._element.height,\n        '\"', clipPath,\n        '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = [\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        ];\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      }\n      else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n\n        if (this.srcFromAttribute) {\n          return element.getAttribute('src');\n        }\n        else {\n          return element.src;\n        }\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        this.setElement(img, options);\n        this._setWidthHeight();\n        callback && callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (this.group) {\n        this.set('dirty', true);\n      }\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\n      this.set('dirty', true);\n\n      // needs to clear out or WEBGL will not resize correctly\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n        // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching && this.needsItsOwnCache();\n      return this.ownCaching;\n    },\n\n    _renderFill: function(ctx) {\n      var elementToDraw = this._element,\n          w = this.width, h = this.height,\n          sW = Math.min(elementToDraw.naturalWidth || elementToDraw.width, w * this._filterScalingX),\n          sH = Math.min(elementToDraw.naturalHeight || elementToDraw.height, h * this._filterScalingY),\n          x = -w / 2, y = -h / 2,\n          sX = Math.max(0, this.cropX * this._filterScalingX),\n          sY = Math.max(0, this.cropY * this._filterScalingY);\n\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, w, h);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      var scale = this.getTotalObjectScaling();\n      return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n            object.clipPath = enlivedProps[0];\n            var image = new fabric.Image(img, object);\n            callback(image);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined';\n      var canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n            alpha: true,\n            premultipliedAlpha: false,\n            depth: false,\n            stencil: false,\n            antialias: false\n          },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl, gpuInfo = { renderer: '', vendor: '' };\n      if (!gl) {\n        return gpuInfo;\n      }\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image = fabric.Image || { };\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      else {\n        return _class[main] === this[main];\n      }\n    }\n    else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function() {\n      return false;\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function() {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' +\n          'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n        '}\\n' +\n        'if (uColor.g < 0.5) {\\n' +\n          'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n        '}\\n' +\n        'if (uColor.b < 0.5) {\\n' +\n          'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n        '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n        'gl_FragColor.rgb += uColor.rgb;\\n',\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function(mode) {\n      return 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor = color;\\n' +\n          'if (color.a > 0.0) {\\n' +\n            this.fragmentSource[mode] +\n          '}\\n' +\n        '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode, shaderSource;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aPosition;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      else {\n        context.clearRect(0, 0, width, height);\n      }\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function() {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n\n    isNeutralState: function() {\n      return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\n    }\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function(options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size:      0.60, // fontSize factor\n      baseline: -0.35  // baseline-shift factor (upwards)\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size:      0.60, // fontSize factor\n      baseline:  0.11  // baseline-shift factor (downwards)\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - charater numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, stlyes only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'deltaY',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + boxStart,\n            topOffset + lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n\n      this._setFillStyles(ctx, styleDeclaration);\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line number\n     * @param {Number} char the character number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function(line, char) {\n      return this.getValueOfPropertyAt(line, char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width, charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n          // emptylines\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset - offsets.offsetX,\n          top + lineHeights + maxHeight - offsets.offsetY,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n        ctx.restore();\n        return;\n      }\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function(start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function(start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function(start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.deltaY !== thisStyle.deltaY;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\n        prevStyle.overline !== thisStyle.overline ||\n        prevStyle.underline !== thisStyle.underline ||\n        prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width, line = this._textLines[lineIndex], lineInfo;\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the charater number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine, size, _size,\n          lineLeftOffset, dy, _dy,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(), top,\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill,\n          charSpacing = this._getWidthOfCharSpacing();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) &&\n              boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              top + this.offsets[type] * size + dy,\n              boxWidth,\n              this.fontSize / 15\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          leftOffset + lineLeftOffset + boxStart,\n          top + this.offsets[type] * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this, family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined ||\n      family.indexOf('\\'') > -1 ||\n      family.indexOf('\"') > -1 || fontIsGeneric\n        ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        fontFamily\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'underline',\n        'overline',\n        'linethrough',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing',\n      ].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\n          allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            }\n            else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          }\n          else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n      var len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n        ctx.save();\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        skipRestore || ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(), ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        this.clearContextTop(true);\n      }\n      else {\n        ctx = this.canvas.contextContainer;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top + dy,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            var charSpacing = this._getWidthOfCharSpacing();\n            boxEnd = this.__charBounds[endLine][endChar - 1].left\n              + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset + lineHeight,\n            boxEnd - boxStart,\n            1);\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset,\n            boxEnd - boxStart,\n            lineHeight);\n        }\n\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    parseDecoration(object);\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPostion),\n          cursorLocation = this.get2DCursorLocation(desiredPostion),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width,\n          upperCanvasHeight = upperCanvas.height,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          delete this.styles[lineIndex][index];\n        }\n      }\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      }\n      else {\n        delete this.styles[lineIndex + qty];\n      }\n      // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 1) {\n        qty--;\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objecs\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLenght = 0;\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLenght++;\n          addedLines[linesLenght] = 0;\n        }\n        else {\n          addedLines[linesLenght]++;\n        }\n      }\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLenght && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);\n      for (var i = 1; i < linesLenght; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        }\n        else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function(options) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n    if (this === this.canvas._activeObject) {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard hander for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function(options) {\n    this.__isMousedown = false;\n    if (!this.editable || this.group ||\n      (options.transform && options.transform.actionPerformed) ||\n      (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      }\n      else {\n        this.renderCursorOrSelection();\n      }\n    }\n    else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + 1;\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      }\n      else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      }\n      else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      }\n      else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft),\n          internalMarkup = this._wrapSVGTextAndBg(textAndBg);\n      return this._createBaseSVGMarkup(\n        internalMarkup, { reviver: reviver, noStyle: true, withShadow: true });\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\n        textAndBg.textSpans.join(''),\n        '</text>\\n'\n      ];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY, dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n      return [\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Use this regular expression to split strings in breakable lines\n     * @private\n     */\n    _wordJoiners: /[ \\t\\r]/,\n\n    /**\n     * Use this boolean property in order to split strings that have no white space concept.\n     * this is a cheap way to help with chinese/japaense\n     * @type Boolean\n     * @since 2.6.0\n     */\n    splitByGrapheme: false,\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (!this.graphemeSplit && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false;\n      var map = this._styleMap[lineIndex];\n      var mapNextLine = this._styleMap[lineIndex + 1];\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n      obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n    * probably broken need a fix\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * probably broken need a fix\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * probably broken need a fix\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth = 0,\n          splitByGrapheme = this.splitByGrapheme,\n          graphemeLines = [],\n          line = [],\n          // spaces in different languges?\n          words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\n          word = '',\n          offset = 0,\n          infix = splitByGrapheme ? '' : ' ',\n          wordWidth = 0,\n          infixWidth = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = splitByGrapheme ? 0 : this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0;\n\n      desiredWidth -= reservedSpace;\n      for (var i = 0; i < words.length; i++) {\n        // i would avoid resplitting the graphemes\n        word = fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted && !splitByGrapheme) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n    lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target, scaled,\n        scaleX = localMouse.x * t.scaleX / _dim.x,\n        scaleY = localMouse.y * t.scaleY / _dim.y;\n    if (by === 'x' && t instanceof fabric.Textbox) {\n      var tw = t._getTransformedDimensions().x;\n      var w = t.width * (localMouse.x / tw);\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      if (w >= t.getMinWidth()) {\n        scaled = w !== t.width;\n        t.set('width', w);\n        return scaled;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n  });\n})();\n\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar uid = require('./_uid');\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\n\nvar TypedArrayConstructors = (\n  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'\n).split(',');\n\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\n\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n","// https://tc39.github.io/ecma262/#sec-toindex\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","require('./_typed-array')('Uint8', 1, function (init) {\n  return function Uint8Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","'use strict';\nif (require('./_descriptors')) {\n  var LIBRARY = require('./_library');\n  var global = require('./_global');\n  var fails = require('./_fails');\n  var $export = require('./_export');\n  var $typed = require('./_typed');\n  var $buffer = require('./_typed-buffer');\n  var ctx = require('./_ctx');\n  var anInstance = require('./_an-instance');\n  var propertyDesc = require('./_property-desc');\n  var hide = require('./_hide');\n  var redefineAll = require('./_redefine-all');\n  var toInteger = require('./_to-integer');\n  var toLength = require('./_to-length');\n  var toIndex = require('./_to-index');\n  var toAbsoluteIndex = require('./_to-absolute-index');\n  var toPrimitive = require('./_to-primitive');\n  var has = require('./_has');\n  var classof = require('./_classof');\n  var isObject = require('./_is-object');\n  var toObject = require('./_to-object');\n  var isArrayIter = require('./_is-array-iter');\n  var create = require('./_object-create');\n  var getPrototypeOf = require('./_object-gpo');\n  var gOPN = require('./_object-gopn').f;\n  var getIterFn = require('./core.get-iterator-method');\n  var uid = require('./_uid');\n  var wks = require('./_wks');\n  var createArrayMethod = require('./_array-methods');\n  var createArrayIncludes = require('./_array-includes');\n  var speciesConstructor = require('./_species-constructor');\n  var ArrayIterators = require('./es6.array.iterator');\n  var Iterators = require('./_iterators');\n  var $iterDetect = require('./_iter-detect');\n  var setSpecies = require('./_set-species');\n  var arrayFill = require('./_array-fill');\n  var arrayCopyWithin = require('./_array-copy-within');\n  var $DP = require('./_object-dp');\n  var $GOPD = require('./_object-gopd');\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n\n  var LITTLE_ENDIAN = fails(function () {\n    // eslint-disable-next-line no-undef\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n\n  var toOffset = function (it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n\n  var validate = function (it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n\n  var allocate = function (C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    } return new C(length);\n  };\n\n  var speciesFromList = function (O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n\n  var fromList = function (C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) result[index] = list[index++];\n    return result;\n  };\n\n  var addGetter = function (it, key, internal) {\n    dP(it, key, { get: function () { return this._d[internal]; } });\n  };\n\n  var $from = function from(source /* , mapfn, thisArg */) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      } O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n\n  var $of = function of(/* ...items */) {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) result[index] = arguments[index++];\n    return result;\n  };\n\n  // iOS Safari 6.x fails here\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });\n\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n\n  var proto = {\n    copyWithin: function copyWithin(target, start /* , end */) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn /* , thisArg */) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn /* , thisArg */) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn,\n        arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate /* , thisArg */) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate /* , thisArg */) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn /* , thisArg */) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement /* , fromIndex */) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement /* , fromIndex */) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) { // eslint-disable-line no-unused-vars\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn /* , thisArg */) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      } return that;\n    },\n    some: function some(callbackfn /* , thisArg */) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(\n        O.buffer,\n        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,\n        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)\n      );\n    }\n  };\n\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n\n  var $set = function set(arrayLike /* , offset */) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) this[offset + index] = src[index++];\n  };\n\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n\n  var isTAIndex = function (target, key) {\n    return isObject(target)\n      && target[TYPED_ARRAY]\n      && typeof key != 'symbol'\n      && key in target\n      && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true))\n      ? propertyDesc(2, target[key])\n      : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true))\n      && isObject(desc)\n      && has(desc, 'value')\n      && !has(desc, 'get')\n      && !has(desc, 'set')\n      // TODO: add validation descriptor w/o calling accessors\n      && !desc.configurable\n      && (!has(desc, 'writable') || desc.writable)\n      && (!has(desc, 'enumerable') || desc.enumerable)\n    ) {\n      target[key] = desc.value;\n      return target;\n    } return dP(target, key, desc);\n  };\n\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n\n  if (fails(function () { arrayToString.call({}); })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function () { /* noop */ },\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function () { return this[TYPED_ARRAY]; }\n  });\n\n  // eslint-disable-next-line max-statements\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function (that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function (that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function (that, index) {\n      dP(that, index, {\n        get: function () {\n          return getter(this, index);\n        },\n        set: function (value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) addElement(that, index++);\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1); // eslint-disable-line no-new\n    }) || !$iterDetect(function (iter) {\n      new TypedArray(); // eslint-disable-line no-new\n      new TypedArray(null); // eslint-disable-line no-new\n      new TypedArray(1.5); // eslint-disable-line no-new\n      new TypedArray(iter); // eslint-disable-line no-new\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        // `ws` module bug, temporarily remove validation length for Uint8Array\n        // https://github.com/websockets/ws/pull/645\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined\n            ? new Base(data, toOffset($offset, BYTES), $length)\n            : $offset !== undefined\n              ? new Base(data, toOffset($offset, BYTES))\n              : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator\n      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function () { return NAME; }\n      });\n    }\n\n    O[NAME] = TypedArray;\n\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\n    $export($export.S, NAME, {\n      BYTES_PER_ELEMENT: BYTES\n    });\n\n    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {\n      from: $from,\n      of: $of\n    });\n\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\n    $export($export.P, NAME, proto);\n\n    setSpecies(NAME);\n\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () { /* empty */ };\n","'use strict';\nvar global = require('./_global');\nvar DESCRIPTORS = require('./_descriptors');\nvar LIBRARY = require('./_library');\nvar $typed = require('./_typed');\nvar hide = require('./_hide');\nvar redefineAll = require('./_redefine-all');\nvar fails = require('./_fails');\nvar anInstance = require('./_an-instance');\nvar toInteger = require('./_to-integer');\nvar toLength = require('./_to-length');\nvar toIndex = require('./_to-index');\nvar gOPN = require('./_object-gopn').f;\nvar dP = require('./_object-dp').f;\nvar arrayFill = require('./_array-fill');\nvar setToStringTag = require('./_set-to-string-tag');\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\n// eslint-disable-next-line no-shadow-restricted-names\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\n// IEEE754 conversions based on https://github.com/feross/ieee754\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  // eslint-disable-next-line no-self-compare\n  if (value != value || value === Infinity) {\n    // eslint-disable-next-line no-self-compare\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  } return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\n\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\n\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });\n}\n\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n}\n\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset /* , littleEndian */) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset /* , littleEndian */) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1); // eslint-disable-line no-new\n  }) || fails(function () {\n    new $ArrayBuffer(); // eslint-disable-line no-new\n    new $ArrayBuffer(1.5); // eslint-disable-line no-new\n    new $ArrayBuffer(NaN); // eslint-disable-line no-new\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  // iOS Safari 7.x bug\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n","// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\n\nmodule.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];\n    else delete O[to];\n    to += inc;\n    from += inc;\n  } return O;\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = camelize;\nvar rHyphen = /-(.)/g;\n\nfunction camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}\n\nmodule.exports = exports[\"default\"];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  as: 'div'\n};\nvar Col = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  role: 'toolbar'\n};\nvar ButtonToolbar = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-toolbar');\n  return React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(className, prefix)\n  }));\n});\nButtonToolbar.displayName = 'ButtonToolbar';\nButtonToolbar.defaultProps = defaultProps;\nexport default ButtonToolbar;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport camelize from 'dom-helpers/util/camelize';\nimport { useBootstrapPrefix } from '../ThemeProvider';\n\nvar pascalCase = function pascalCase(str) {\n  return str[0].toUpperCase() + camelize(str).slice(1);\n};\n\nexport default function createWithBsPrefix(prefix, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$displayName = _ref.displayName,\n      displayName = _ref$displayName === void 0 ? pascalCase(prefix) : _ref$displayName,\n      _ref$Component = _ref.Component,\n      Component = _ref$Component === void 0 ? 'div' : _ref$Component,\n      defaultProps = _ref.defaultProps;\n\n  var BsComponent = React.forwardRef( // eslint-disable-next-line react/prop-types\n  function (_ref2, ref) {\n    var className = _ref2.className,\n        bsPrefix = _ref2.bsPrefix,\n        _ref2$as = _ref2.as,\n        Tag = _ref2$as === void 0 ? Component : _ref2$as,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"className\", \"bsPrefix\", \"as\"]);\n\n    var resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return React.createElement(Tag, _extends({\n      ref: ref,\n      className: classNames(className, resolvedPrefix)\n    }, props));\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import React from 'react';\nvar FormContext = React.createContext({\n  controlId: undefined\n});\nexport default FormContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  as: 'div'\n};\nvar FormGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      controlId = _ref.controlId,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"controlId\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-group');\n  var context = useMemo(function () {\n    return {\n      controlId: controlId\n    };\n  }, [controlId]);\n  return React.createElement(FormContext.Provider, {\n    value: context\n  }, React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }), children));\n});\nFormGroup.displayName = 'FormGroup';\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string.isRequired,\n  as: PropTypes.elementType\n};\nvar defaultProps = {\n  type: 'valid',\n  as: 'div'\n};\nvar Feedback = React.forwardRef(function (_ref, ref) {\n  var Component = _ref.as,\n      className = _ref.className,\n      type = _ref.type,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"type\"]);\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, type && type + \"-feedback\")\n  }));\n});\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nFeedback.defaultProps = defaultProps;\nexport default Feedback;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  as: 'input'\n};\nvar FormControl = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      type = _ref.type,\n      size = _ref.size,\n      id = _ref.id,\n      className = _ref.className,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      plaintext = _ref.plaintext,\n      readOnly = _ref.readOnly,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"type\", \"size\", \"id\", \"className\", \"isValid\", \"isInvalid\", \"plaintext\", \"readOnly\", \"as\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  var classes;\n\n  if (plaintext) {\n    var _classes;\n\n    classes = (_classes = {}, _classes[bsPrefix + \"-plaintext\"] = true, _classes);\n  } else if (type === 'file') {\n    var _classes2;\n\n    classes = (_classes2 = {}, _classes2[bsPrefix + \"-file\"] = true, _classes2);\n  } else {\n    var _classes3;\n\n    classes = (_classes3 = {}, _classes3[bsPrefix] = true, _classes3[bsPrefix + \"-\" + size] = size, _classes3);\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return React.createElement(Component, _extends({}, props, {\n    type: type,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && \"is-valid\", isInvalid && \"is-invalid\")\n  }));\n});\nFormControl.displayName = 'FormControl';\nFormControl.defaultProps = defaultProps;\nFormControl.Feedback = Feedback;\nexport default FormControl;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nvar defaultProps = {\n  type: 'checkbox'\n};\nvar FormCheckInput = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      isStatic = _ref.isStatic,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"className\", \"isValid\", \"isInvalid\", \"isStatic\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  return React.createElement(\"input\", _extends({}, props, {\n    ref: ref,\n    id: id || controlId,\n    className: classNames(className, !custom && bsPrefix, custom && 'custom-control-input', isValid && 'is-valid', isInvalid && 'is-invalid', isStatic && 'position-static')\n  }));\n});\nFormCheckInput.displayName = 'FormCheckInput';\nFormCheckInput.defaultProps = defaultProps;\nexport default FormCheckInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nvar defaultProps = {\n  type: 'checkbox'\n};\nvar FormCheckLabel = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"htmlFor\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  return React.createElement(\"label\", _extends({}, props, {\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, !custom && bsPrefix, custom && 'custom-control-label')\n  }));\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nFormCheckLabel.defaultProps = defaultProps;\nexport default FormCheckLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext, useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nvar defaultProps = {\n  type: 'checkbox',\n  inline: false,\n  disabled: false,\n  isValid: false,\n  isInvalid: false,\n  title: ''\n};\nvar FormCheck = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      inline = _ref.inline,\n      disabled = _ref.disabled,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      feedback = _ref.feedback,\n      className = _ref.className,\n      style = _ref.style,\n      title = _ref.title,\n      type = _ref.type,\n      label = _ref.label,\n      children = _ref.children,\n      custom = _ref.custom,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"inline\", \"disabled\", \"isValid\", \"isInvalid\", \"feedback\", \"className\", \"style\", \"title\", \"type\", \"label\", \"children\", \"custom\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  var innerFormContext = useMemo(function () {\n    return {\n      controlId: id || controlId,\n      custom: custom\n    };\n  }, [controlId, custom, id]);\n  var hasLabel = label != null && label !== false && !children;\n  var input = React.createElement(FormCheckInput, _extends({}, props, {\n    type: type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    isStatic: !hasLabel,\n    disabled: disabled\n  }));\n  return React.createElement(FormContext.Provider, {\n    value: innerFormContext\n  }, React.createElement(\"div\", {\n    style: style,\n    className: classNames(className, !custom && bsPrefix, custom && \"custom-control custom-\" + type, inline && (custom ? 'custom-control' : bsPrefix) + \"-inline\")\n  }, children || React.createElement(React.Fragment, null, input, hasLabel && React.createElement(FormCheckLabel, {\n    title: title\n  }, label), (isValid || isInvalid) && React.createElement(Feedback, {\n    type: isValid ? 'valid' : 'invalid'\n  }, feedback))));\n});\nFormCheck.displayName = 'FormCheck';\nFormCheck.defaultProps = defaultProps;\nFormCheck.Input = FormCheckInput;\nFormCheck.Label = FormCheckLabel;\nexport default FormCheck;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  column: false,\n  srOnly: false\n};\nvar FormLabel = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      column = _ref.column,\n      srOnly = _ref.srOnly,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"column\", \"srOnly\", \"className\", \"htmlFor\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  var classes = classNames(className, bsPrefix, srOnly && 'sr-only', column && 'col-form-label');\n  if (column) return React.createElement(Col, _extends({}, props, {\n    className: classes,\n    as: \"label\"\n  }));\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  return (// eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    React.createElement(\"label\", _extends({}, props, {\n      htmlFor: htmlFor || controlId,\n      ref: ref,\n      className: classes\n    }))\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  as: 'small'\n};\nvar FormText = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }));\n});\nFormText.displayName = 'FormText';\nFormText.defaultProps = defaultProps;\nexport default FormText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './utils/createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormGroup from './FormGroup';\nimport FormControl from './FormControl';\nimport FormCheck from './FormCheck';\nimport FormLabel from './FormLabel';\nimport FormText from './FormText';\nvar defaultProps = {\n  inline: false,\n  as: 'form'\n};\nvar Form = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      inline = _ref.inline,\n      className = _ref.className,\n      validated = _ref.validated,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"inline\", \"className\", \"validated\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, validated && 'was-validated', inline && bsPrefix + \"-inline\")\n  }));\n});\nForm.displayName = 'Form';\nForm.defaultProps = defaultProps;\nForm.Row = createWithBsPrefix('form-row');\nForm.Group = FormGroup;\nForm.Control = FormControl;\nForm.Check = FormCheck;\nForm.Label = FormLabel;\nForm.Text = FormText;\nexport default Form;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.filter(function (f) {\n    return f != null;\n  }).reduce(function (acc, f) {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport createChainedFunction from './utils/createChainedFunction';\nvar defaultProps = {\n  as: 'a'\n};\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nvar SafeAnchor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(SafeAnchor, _React$Component);\n\n  function SafeAnchor(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.handleKeyDown = _this.handleKeyDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = SafeAnchor.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var _this$props = this.props,\n        disabled = _this$props.disabled,\n        href = _this$props.href,\n        onClick = _this$props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      this.handleClick(event);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        Component = _this$props2.as,\n        disabled = _this$props2.disabled,\n        onKeyDown = _this$props2.onKeyDown,\n        innerRef = _this$props2.innerRef,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"as\", \"disabled\", \"onKeyDown\", \"innerRef\"]);\n\n    if (isTrivialHref(props.href)) {\n      props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n      // otherwise, the cursor incorrectly styled (except with role='button')\n\n      props.href = props.href || '#';\n    }\n\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n\n    if (innerRef) props.ref = innerRef;\n    return React.createElement(Component, _extends({}, props, {\n      onClick: this.handleClick,\n      onKeyDown: createChainedFunction(this.handleKeyDown, onKeyDown)\n    }));\n  };\n\n  return SafeAnchor;\n}(React.Component);\n\nSafeAnchor.defaultProps = defaultProps;\nexport default SafeAnchor;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false,\n  type: 'button'\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      innerRef: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  var Component = as || 'button';\n  if (ref) props.ref = ref;\n  return React.createElement(Component, _extends({}, props, {\n    type: type,\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}