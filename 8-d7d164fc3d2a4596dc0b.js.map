{"version":3,"sources":["webpack:///./node_modules/fabric/dist/fabric.js","webpack:///./node_modules/react-bootstrap/node_modules/warning/warning.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/core-js/modules/es6.object.is.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/dom-helpers/util/camelize.js","webpack:///./node_modules/react-bootstrap/es/Col.js","webpack:///./node_modules/react-bootstrap/es/ButtonToolbar.js","webpack:///./node_modules/react-bootstrap/es/utils/createWithBsPrefix.js","webpack:///./node_modules/react-bootstrap/es/FormContext.js","webpack:///./node_modules/react-bootstrap/es/FormGroup.js","webpack:///./node_modules/react-bootstrap/es/Feedback.js","webpack:///./node_modules/react-bootstrap/es/FormControl.js","webpack:///./node_modules/react-bootstrap/es/FormCheckInput.js","webpack:///./node_modules/react-bootstrap/es/FormCheckLabel.js","webpack:///./node_modules/react-bootstrap/es/FormCheck.js","webpack:///./node_modules/react-bootstrap/es/FormLabel.js","webpack:///./node_modules/react-bootstrap/es/FormText.js","webpack:///./node_modules/react-bootstrap/es/Form.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/react-bootstrap/es/utils/createChainedFunction.js","webpack:///./node_modules/react-bootstrap/es/SafeAnchor.js","webpack:///./node_modules/react-bootstrap/es/Button.js"],"names":["Buffer","global","sqrt","atan2","pow","abs","PiBy180","PiBy2","proto","min","max","degreesToRadians","originXOffset","originYOffset","clone","toFixed","multipleSpacesRegex","setObjectScaleOverridden","fabric","version","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","canvas","targetCanvas","ctx","getContext","translate","height","scale","sourceY","drawImage","width","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","Uint8Array","this","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","exports","document","window","HTMLDocument","implementation","createHTMLDocument","__webpack_require__","jsdom","decodeURIComponent","features","FetchExternalResources","jsdomImplForWrapper","implForWrapper","nodeCanvas","Canvas","defaultView","DOMParser","isTouchSupported","navigator","maxTouchPoints","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","initFilterBackend","isWebglSupported","console","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","indexOf","util","array","fill","observe","arguments","length","prop","on","push","stopObserving","call","fire","options","listenersForEvent","i","len","filter","value","Observable","off","trigger","Collection","_objects","add","apply","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","object","index","nonSplicing","objects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","context","getObjects","type","concat","o","item","isEmpty","size","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","set","_initGradient","filler","property","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","obj","_set","key","get","toggle","Math","PI","cos","angle","sin","sign","removeFromArray","idx","getRandomInt","floor","random","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","transformPoint","p","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","yPoints","minY","left","top","invertTransform","a","r","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","slice","resolveNamespace","getSvgAttributes","attributes","parts","split","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","src","substring","loadImageInDom","div","createElement","style","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","forEach","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","centerPoint","Group","sourcePath","populateWithProperties","destination","properties","Object","prototype","toString","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","copyCanvasElement","newCanvas","toDataURL","canvasEl","format","quality","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","target","flipX","flipY","saveObjectTransform","fn","String","match","isTransparent","tolerance","_isTransparent","imageData","getImageData","l","data","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","aspectRatioAttrs","pop","alignX","alignY","clearFabricFontCache","fontFamily","toLowerCase","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","_join","Array","join","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","s","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","result","mDelta","mT","th3","segmentToBezier","th2","costh2","sinth2","costh3","sinth3","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","c","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","drawArc","fx","fy","coords","segs","segsNorm","bezierCurveTo","getBoundsOfArc","tx","ty","bound","find","byProperty","condition","k","invoke","method","args","value1","value2","extend","deep","Element","hasOwnProperty","getWholeChar","str","code","charCodeAt","isNaN","next","prev","replace","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","_this","superClassMethod","createClass","initialize","shift","subclasses","unknown","areHostMethods","methodNames","test","getElement","setElement","uid","getUniqueId","element","__uniqueID","createWrappedHandler","e","event","addListener","removeListener","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","listeners","handlers","addEventListener","removeEventListener","listener","wrappedHandler","createListener","attachEvent","detachEvent","existingHandler","handlersForEvent","createDispatcher","pointerX","clientX","pointerY","clientY","_getPointer","pageProp","clientProp","pointer","eventTouchProp","getPointer","srcElement","scroll","getScrollLeftTop","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","zoom","setStyle","styles","elementStyle","cssText","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","toArray","arrayLike","childNodes","err","makeElement","tagName","el","className","htmlFor","setAttribute","docElement","body","scrollLeft","scrollTop","host","nodeType","arr","getComputedStyle","attr","undefined","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","getById","id","getElementById","addClass","wrapElement","wrapper","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","parseInt","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","_canvas","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","emptyFn","request","onComplete","xhr","XMLHttpRequest","parameters","param","addParamToUrl","open","setRequestHeader","send","warn","noop","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","requestAnimFrame","animate","timestamp","time","start","Date","duration","finish","onChange","abort","easing","d","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","end","pos","color","posValue","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","letter-spacing","paint-order","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","clip-path","clip-rule","vector-effect","colorAttributes","stroke","normalizeAttr","normalizeValue","parentAttributes","parsed","isArray","map","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","RegExp","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","matcher","classNames","getAttribute","elementById","node","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","clipPaths","skewMatrix","matrix","commaWsp","reTransformList","reTransform","attributeValue","matrices","m","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","viewboxTransform","firstChild","recursivelyParseGradientsXlink","gradient","referencedGradient","substr","hasAttribute","children","referenceClone","cloneNode","removeAttribute","parseSVGDocument","parsingOptions","attrs","xlink","el2","currentTrans","oldLength","el3","nodeValue","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","parseAttributes","parentFontSize","ownAttributes","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","parse","chunk","pair","trim","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","text","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","ActiveXObject","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","parser","parseFromString","regexUrl","numElements","createObjects","createObject","findTag","fromElement","createCallback","checkIfDone","resolveGradient","Image","_originalElement","_removeTransformMatrix","resolveClipPath","extractPropertyDefinition","storage","lastIndex","gradientDef","createClipPathCallback","container","_newObj","fillRule","clipRule","objTransformInv","gTransform","clipPath","calcTransformMatrix","setPositionByOrigin","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","sort","pathOffset","reverse","minRadius","percentageShift","colorStop","toLive","createLinearGradient","createRadialGradient","instance","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","NUM_FRACTION_DIGITS","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","Error","renderAndResetBound","renderAndReset","bind","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","globalCompositeOperation","zoomX","zoomY","_cacheCanvas","cacheTranslationX","cacheTranslationY","render","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","row","rowIndex","charIndex","fontList","_setSVGObject","finalWidth","finalHeight","sendToBack","objs","activeSelection","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","needsFullRender","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","original","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","normalizedPointer","targetRelativeX","targetRelativeY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","evented","selectable","centerTransform","action","altKey","_getOriginFromCorner","corner","_getActionFromCorner","alreadySelected","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","forbidScalingX","forbidScalingY","changeX","changeY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","globalPointer","isEditing","subTarget","objToCheck","pointerToUse","subTargetCheck","ignoreZoom","_absolutePointer","_pointer","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","opt","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","clearContextTop","_setCursorFromEvent","cursorOffset","mr","mb","ml","addEventOptions","passive","checkClick","which","button","cursorMap","_bindEvents","addOrRemove","functor","eventjsFunctor","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","eventsBound","_simpleEventHandler","self","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","__onOrientationChange","__onShake","__onLongPress","preventDefault","_fireEnterLeaveEvents","stopPropagation","_cacheTransformEventData","_handleEvent","_resetTransformEventData","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","shouldRender","isClick","_target","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","_maybeGroupObjects","isMoving","__corner","eventType","subTargets","absolutePointer","_scaling","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","_previousPointer","shouldGroup","_shouldGroup","_handleGrouping","saveState","touches","_transformObject","_fireOverOutEvents","fireSynteticInOutEvents","targetName","canvasEvtOut","evtOut","canvasEvtIn","evtIn","config","inOpt","outOpt","inFires","oldTarget","targetChanged","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","n","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","multiplier","toCanvasElement","cropping","scaledWidth","scaledHeight","originalWidth","originalHeight","newZoom","vp","originalInteractive","originalContext","newVp","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","strokeDashOffset","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","strokeUniform","dirty","paintFirst","stateProperties","cacheProperties","inverted","absolutePositioned","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","setTransform","calcOwnMatrix","_removeDefaultValues","getObjectScaling","scaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","drawCacheOnCanvas","_removeCacheCanvas","drawObject","propertySet","isCacheDirty","needsItsOwnCache","ownCaching","willDrawShadow","drawClipPathOnCache","originalFill","originalStroke","_setClippingProperties","_setStrokeStyles","_setFillStyles","_drawClipPath","skipCanvas","_removeShadow","decl","lineDashOffset","dashArray","alternative","getLineDash","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","utils","origParams","originalShadow","withoutTransform","withoutShadow","boundingRect","getBoundingRect","shadowOffset","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","enlivedProps","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","w","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","skipAbsolute","_setCornerCoords","transformMatrixKey","prefix","cache","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","dimX","dimY","noSkew","_finalizeDiemensions","bbox","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","deltaY","overline","underline","linethrough","getSvgCommons","getSvgTransform","full","additionalTransform","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","_toSVG","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","clipPathMarkup","noStyle","withShadow","styleInfo","shadowInfo","vectorEffect","absoluteClipPath","addPaintOrder","saveProps","props","tmpObj","dashedPropertySet","keys","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","svgString","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","calcDim","_calcDimensions","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","_getOffsetTransform","digits","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","_includeDefaultValues","objsToObject","originalDefaults","_obj","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","enlivedClipPath","toGroup","newGroup","childrenOverride","srcFromAttribute","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","removeTexture","_initConfig","applyFilters","resizeFilter","applyResizeFilters","backend","filterBackend","evictCachesForKey","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","strokeSvg","imageMarkup","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","elementToDraw","sW","sH","sX","sY","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","resources","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","startTime","drawImageTime","testContext","now","copyGLTo2D","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","uniqueId","gpuInfo","renderer","vendor","ext","getExtension","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","temp","main","mainParameter","_class","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","distance","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","some","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","char","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPostion","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLenght","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","currentActive","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","internalMarkup","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","Textbox","minWidth","dynamicMinWidth","__cachedLines","_wordJoiners","splitByGrapheme","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","getMinWidth","tw","warning","module","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","isEncoding","actual","write","fromString","isBuffer","checked","val","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","$export","S","is","dP","f","FProto","nameRE","__esModule","default","rHyphen","_","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_ThemeProvider__WEBPACK_IMPORTED_MODULE_4__","DEVICE_SIZES","Col","forwardRef","_ref","ref","bsPrefix","Component","as","spans","classes","brkPoint","span","order","_propValue$span","displayName","defaultProps","__webpack_exports__","ButtonToolbar","role","createWithBsPrefix_pascalCase","camelize_default","es_FormContext","react_default","createContext","controlId","FormGroup","objectWithoutPropertiesLoose","ThemeProvider","react","Provider","esm_extends","classnames_default","es_FormGroup","propTypes","prop_types_default","isRequired","elementType","Feedback","es_Feedback","FormControl","_classes","isValid","isInvalid","plaintext","readOnly","_classes2","_classes3","es_FormControl","FormCheckInput","isStatic","_useContext","custom","es_FormCheckInput","FormCheckLabel","es_FormCheckLabel","FormCheck","inline","disabled","feedback","title","label","innerFormContext","hasLabel","input","Fragment","Input","Label","es_FormCheck","FormLabel","column","srOnly","es_FormLabel","FormText","_temp","_ref$displayName","_ref$Component","BsComponent","es_FormText","Form","validated","Row","_ref2","_ref2$as","Tag","resolvedPrefix","Control","Check","_assertThisInitialized","ReferenceError","utils_createChainedFunction","_len","funcs","acc","_len2","_key2","isTrivialHref","href","SafeAnchor_SafeAnchor","_React$Component","SafeAnchor","handleClick","handleKeyDown","inheritsLoose","_proto","_this$props","_this$props2","innerRef","tabIndex","es_SafeAnchor","Button","variant","block"],"mappings":"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","file":"8-d7d164fc3d2a4596dc0b.js","sourcesContent":["/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '2.7.0' };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n  define([], function() { return fabric; });\n}\n/* _AMD_END_ */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  if (document instanceof HTMLDocument)\n    fabric.document = document;\n  else\n    fabric.document = document.implementation.createHTMLDocument(\"\");\n  fabric.window = window;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require('jsdom')\n    .jsdom(\n      decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n      { features: {\n        FetchExternalResources: ['img']\n      }\n      });\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = fabric.document.defaultView;\n  DOMParser = require('xmldom').DOMParser;\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document ||\n  (fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0);\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  'fill', 'fill-opacity', 'fill-rule',\n  'opacity',\n  'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset',\n  'stroke-linejoin', 'stroke-miterlimit',\n  'stroke-opacity', 'stroke-width',\n  'id', 'paint-order', 'vector-effect',\n  'instantiated_by_use', 'clip-path'\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.canvasModule = 'canvas';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\n/**\n * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.arcToSegmentsCache = { };\n\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\nfabric.boundsOfCurveCache = { };\n\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\nfabric.cachesBoundsOfCurve = true;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this._objects;\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this._objects,\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this._objects.indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function(angle) {\n      if (angle === 0) { return 1; }\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n      var angleSlice = angle / PiBy2;\n      switch (angleSlice) {\n        case 1: case 3: return 0;\n        case 2: return -1;\n      }\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function(angle) {\n      if (angle === 0) { return 0; }\n      var angleSlice = angle / PiBy2, sign = 1;\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n      switch (angleSlice) {\n        case 1: return sign;\n        case 2: return 0;\n        case 3: return -sign;\n      }\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements && elements.length === 1) {\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @param {CanvasElement} canvas to copy size and content of\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function(canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * since 2.6.0 moved from canvas instance to utility.\n     * @param {CanvasElement} canvasEl to copy size and content of\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n     * @param {Number} quality <= 1 and > 0\n     * @static\n     * @memberOf fabric.util\n     * @return {String} data url\n     */\n    toDataURL: function(canvasEl, format, quality) {\n      return canvasEl.toDataURL('image/' + format, quality);\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function (target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (fabric.arcToSegmentsCache[argsString]) {\n      return fabric.arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    fabric.arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    return [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas property in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas') {\n            destination[property] = extend({ }, source[property]);\n          }\n          else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n        return event.clientX;\n      },\n\n      pointerY = function(event) {\n        return event.clientY;\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n    var pointer, eventTouchProp = event[touchProp];\n\n    if (eventTouchProp && eventTouchProp[0]) {\n      pointer = eventTouchProp[0][clientProp];\n    }\n\n    if (typeof pointer === 'undefined') {\n      pointer = event[clientProp];\n    }\n\n    return pointer;\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  };\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n    var impl = fabric.jsdomImplForWrapper(element);\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null;\n      // unsure if necessary\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'letter-spacing':     'charSpacing',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-dashoffset':  'strokeDashOffset',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity',\n        'clip-path':          'clipPath',\n        'clip-rule':          'clipRule',\n        'vector-effect':      'strokeUniform'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n  fabric.clipPaths = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'vector-effect') {\n      value = value === 'non-scaling-stroke';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else if (attr === 'href' || attr === 'xlink:href') {\n      return value;\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = fabric.iMatrix,\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, len;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' ||\n          attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n        // calculate additional translation to move the viewbox\n      }\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\n        // calculate additional translation to move the viewbox\n      }\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX + widthDiff) + ' ' +\n                  (minY * scaleY + heightDiff) + ') ';\n    parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n    var clipPaths = { };\n    descendants.filter(function(el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function(el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function(el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths;\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).substr(1),\n        referencedGradient = elementById(doc, xLink);\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n    gradientsAttrs.forEach(function(attr) {\n      if (!gradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, gradientDefs = { };\n      j = elList.length;\n      while (j--) {\n        el = elList[j];\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize, parentFontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      if (ownAttributes['font-size']) {\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n        ownAttributes['font-size'] = fontSize = parseUnit(ownAttributes['font-size'], parentFontSize);\n      }\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n};\n\n(function(proto) {\n  proto.parse = function() {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function() {\n    var _this = this;\n    this.elements.forEach(function(element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function(el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function(el, index) {\n    var klass = this.findTag(el);\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      }\n      catch (err) {\n        fabric.log(err);\n      }\n    }\n    else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function(index, el) {\n    var _this = this;\n    return function(obj) {\n      var _options;\n      _this.resolveGradient(obj, 'fill');\n      _this.resolveGradient(obj, 'stroke');\n      if (obj instanceof fabric.Image && obj._originalElement) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n      obj._removeTransformMatrix(_options);\n      _this.resolveClipPath(obj);\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function(obj, property, storage) {\n    var value = obj[property];\n    if (!(/^url\\(/).test(value)) {\n      return;\n    }\n    var id = this.regexUrl.exec(value)[1];\n    this.regexUrl.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function(obj, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n    if (gradientDef) {\n      obj.set(property, fabric.Gradient.fromElement(gradientDef, obj));\n    }\n  };\n\n  proto.createClipPathCallback = function(obj, container) {\n    return function(_newObj) {\n      _newObj._removeTransformMatrix();\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function(obj) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element, klass, objTransformInv, container, gTransform, options;\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(\n          element,\n          this.createClipPathCallback(obj, container),\n          this.options\n        );\n      }\n      if (container.length === 1) {\n        clipPath = container[0];\n      }\n      else {\n        clipPath = new fabric.Group(container);\n      }\n      gTransform = fabric.util.multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix()\n      );\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({ x: options.translateX, y: options.translateY }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n  };\n\n  proto.checkIfDone = function() {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function(el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = clone(this.coords, true), i, len,\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\n          offsetX = object.width / 2 - this.offsetX, offsetY = object.height / 2 - this.offsetY;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n\n      transform[4] -= offsetX;\n      transform[5] -= offsetY;\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      commonAttributes += ' gradientTransform=\"matrix(' + transform.join(' ') + ')\" ';\n\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix, i;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20, color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * if set to false, takes precedence over the object value.\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument.\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     * @deprecated since 2.3.0\n     * Use before:transform event\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    // TODO: fix stretched examples\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    cancelRequestedRender: function() {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform, path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render', { ctx: ctx, });\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      if (path) {\n        path.canvas = this;\n        // needed to setup a couple of variables\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({ forClipping: true });\n        this.drawClipPathOnCanvas(ctx);\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render', { ctx: ctx, });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function(ctx) {\n      var v = this.viewportTransform, path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'], v;\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          v = this.viewportTransform;\n          ctx.save();\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var clipPath = this.clipPath, data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude),\n      };\n      if (clipPath) {\n        data.clipPath = this._toObjectMethod(clipPath, methodName, propertiesToInclude);\n      }\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this._objects.filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n      this._setSVGObjects(markup, reviver);\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        this.createSVGClipPathMarkup(options),\n        '</defs>\\n'\n      );\n    },\n\n    createSVGClipPathMarkup: function(options) {\n      var clipPath = this.clipPath;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return  '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(options.reviver) +\n          '</clipPath>\\n';\n      }\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this._objects;\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property], vpt = this.viewportTransform, finalWidth = this.width / vpt[0],\n          finalHeight = this.height / vpt[3];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\n          ' x=\"', filler.offsetX - finalWidth / 2, '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : finalWidth ),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : finalHeight),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n          'fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.forEachObject(function(object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n      this.backgroundImage = null;\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray || []);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function (ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n          this._render();\n        }\n        else {\n          var points = this._points, length = points.length, ctx = this.canvas.contextTop;\n          // draw the curve update\n          this._saveAndTransform(ctx);\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this.oldEnd = undefined;\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n      this._points.push(point);\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n      this._setBrushStyles();\n      var color = new fabric.Color(this.color);\n      this.needsFullRender = (color.getAlpha() < 1);\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\n      path.top = position.y;\n      path.left = position.x;\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.renderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function() {\n    var ctx  = this.canvas.contextTop, i, len,\n        points = this.points, point;\n    this._saveAndTransform(ctx);\n    for (i = 0, len = points.length; i < len; i++) {\n      point = points[i];\n      ctx.fillStyle = point.fill;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n      ctx.closePath();\n      ctx.fill();\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function(sprayChunk) {\n    var ctx = this.canvas.contextTop, i, len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function() {\n    var ctx = this.canvas.contextTop, i, ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified\n   * @fires object:rotated\n   * @fires object:scaled\n   * @fires object:moved\n   * @fires object:skewed\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:skewing\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:transform\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before\n   * @fires mouse:move:before\n   * @fires mouse:up:before\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    renderTopLayer: function(ctx) {\n      ctx.save();\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      }\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n        this.contextTopDirty = true;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.originX !== 'center') {\n          if (t.originX === 'right') {\n            t.mouseXSign = -1;\n          }\n          else {\n            t.mouseXSign = 1;\n          }\n        }\n        if (t.originY !== 'center') {\n          if (t.originY === 'bottom') {\n            t.mouseYSign = -1;\n          }\n          else {\n            t.mouseYSign = 1;\n          }\n        }\n\n        t.originX = 'center';\n        t.originY = 'center';\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      // in case the target is the activeObject, we cannot execute this optimization\n      // because we need to draw controls too.\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\n        var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\n            targetRelativeX = Math.max(target.cacheTranslationX + (normalizedPointer.x * target.zoomX), 0),\n            targetRelativeY = Math.max(target.cacheTranslationY + (normalizedPointer.y * target.zoomY), 0);\n\n        var isTransparent = fabric.util.isTransparent(\n          target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\n\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false,\n      });\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     * @param {Boolean} alreadySelected true if target is already selected\n     * @param {String} corner a string representing the corner ml, mr, tl ...\n     * @param {Event} e Event object\n     * @param {fabric.Object} [target] inserted back to help overriding. Unused\n     */\n    _getActionFromCorner: function(alreadySelected, corner, e /* target */) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(alreadySelected, corner, e, target),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        // used by transation\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        // unsure they are usefull anymore.\n        // left: target.left,\n        // top: target.top,\n        theta: degreesToRadians(target.angle),\n        // end of unsure\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey],\n        original: fabric.util.saveObjectTransform(target),\n      };\n\n      this._currentTransform.original.originX = origin.x;\n      this._currentTransform.original.originY = origin.y;\n\n      this._resetCurrentTransform();\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.lockScalingX,\n          lockScalingY = target.lockScalingY,\n          lockScalingFlip = target.lockScalingFlip;\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          scaleX = localMouse.x * target.scaleX / _dim.x,\n          scaleY = localMouse.y * target.scaleY / _dim.y,\n          changeX = target.scaleX !== scaleX,\n          changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1, newScaleX, newScaleY;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = newScaleX !== target.scaleX || newScaleY !== target.scaleY;\n      target.set('scaleX', newScaleX);\n      target.set('scaleY', newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform,\n          target = t.target, constraintPosition,\n          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n      if (target.lockRotation) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\n          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (target.snapAngle > 0) {\n        var snapAngle  = target.snapAngle,\n            snapThreshold  = target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (target.angle === angle) {\n        hasRotated = false;\n      }\n      else {\n        // rotation only happen here\n        target.angle = angle;\n        // Make sure the constraints apply\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function(pointer, obj, globalPointer) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ?\n          this._normalizePointer(objToCheck.group, pointer) : pointer;\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [], opt = { e: e };\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed;\n        // added for backward compatibility\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      }\n      else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n        opt.selected = added;\n        // added for backward compatibility\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      }\n      else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: currentActives[0], e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this._activeObject.realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n\n    setViewportTransform: function (vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\n      addEventOptions = { passive: false };\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n      this.addOrRemove(addListener, 'add');\n    },\n\n    addOrRemove: function(functor, eventjsFunctor) {\n      functor(fabric.window, 'resize', this._onResize);\n      functor(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      functor(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      functor(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      functor(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      functor(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      functor(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n      functor(this.upperCanvasEl, 'dblclick', this._onDoubleClick);\n      functor(this.upperCanvasEl, 'touchstart', this._onMouseDown, addEventOptions);\n      functor(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n      functor(this.upperCanvasEl, 'dragover', this._onDragOver);\n      functor(this.upperCanvasEl, 'dragenter', this._onDragEnter);\n      functor(this.upperCanvasEl, 'dragleave', this._onDragLeave);\n      functor(this.upperCanvasEl, 'drop', this._onDrop);\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'shake', this._onShake);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      this.addOrRemove(removeListener, 'remove');\n      // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function(e) {\n      e.preventDefault();\n      var target = this._simpleEventHandler('dragover', e);\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'dblclick');\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      addListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function(target) {\n      var activeObject = this._activeObject;\n\n      if (\n        !!activeObject !== !!target ||\n        (activeObject && target && (activeObject !== target))\n      ) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      }\n      else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, transform = this._currentTransform,\n          groupSelector = this._groupSelector, shouldRender = false,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      this._cacheTransformEventData(e);\n      target = this._target;\n      this._handleEvent(e, 'up:before');\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n        this._resetTransformEventData();\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n        shouldRender = transform.actionPerformed;\n      }\n\n      if (!isClick) {\n        this._maybeGroupObjects(e);\n        shouldRender || (shouldRender = this._shouldRender(target));\n      }\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n      this._groupSelector = null;\n      this._currentTransform = null;\n      // reset the target information about which corner is selected\n      target && (target.__corner = 0);\n      if (shouldRender) {\n        this.requestRenderAll();\n      }\n      else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function(eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n          };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n      if (!targets) {\n        return target;\n      }\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false,\n            pointer: this._pointer,\n            absolutePointer: this._absolutePointer,\n            transform: this._currentTransform\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target,\n          eventName,\n          options = {\n            e: e,\n            target: target,\n            transform: transform,\n          };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        if (transform.actionPerformed) {\n          eventName = this._addEventOptions(options, transform);\n          this._fire(eventName, options);\n        }\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * Mutate option object in order to add by property and give back the event name.\n     * @private\n     * @param {Object} options to mutate\n     * @param {Object} transform to inspect action from\n     */\n    _addEventOptions: function(options, transform) {\n      // we can probably add more details at low cost\n      // scale change, rotation changes, translation changes\n      var eventName, by;\n      switch (transform.action) {\n        case 'scaleX':\n          eventName = 'scaled';\n          by = 'x';\n          break;\n        case 'scaleY':\n          eventName = 'scaled';\n          by = 'y';\n          break;\n        case 'skewX':\n          eventName = 'skewed';\n          by = 'x';\n          break;\n        case 'skewY':\n          eventName = 'skewed';\n          by = 'y';\n          break;\n        case 'scale':\n          eventName = 'scaled';\n          by = 'equally';\n          break;\n        case 'rotate':\n          eventName = 'rotated';\n          break;\n        case 'drag':\n          eventName = 'moved';\n          break;\n      }\n      options.by = by;\n      return eventName;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'down:before');\n      var target = this._target;\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer;\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n        }\n      }\n      this._handleEvent(e, 'down');\n      // we must renderAll so that we update the visuals\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function() {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function(e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t,\n      });\n      // determine if it's a drag or rotate case\n      if (t.corner) {\n        this.onBeforeScaleRotate(t.target);\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n      this._handleEvent(e, 'move:before');\n      this._cacheTransformEventData(e);\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this._pointer;\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      this.fireSynteticInOutEvents(target, e, {\n        targetName: '_hoveredTarget',\n        canvasEvtOut: 'mouse:out',\n        evtOut: 'mouseout',\n        canvasEvtIn: 'mouse:over',\n        evtIn: 'mouseover',\n      });\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function(target, e) {\n      this.fireSynteticInOutEvents(target, e, {\n        targetName: '_draggedoverTarget',\n        evtOut: 'dragleave',\n        evtIn: 'dragenter',\n      });\n    },\n\n    /**\n     * Manage the syntetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSynteticInOutEvents: function(target, e, config) {\n      var inOpt, outOpt, oldTarget = this[config.targetName], outFires, inFires,\n          targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\n      if (targetChanged) {\n        inOpt = { e: e, target: target, previousTarget: oldTarget };\n        outOpt = { e: e, target: oldTarget, nextTarget: target };\n        this[config.targetName] = target;\n      }\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'wheel');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          options = {\n            target: transform.target,\n            e: e,\n            transform: transform,\n            pointer: pointer\n          };\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', options);\n          this.setCursor(options.target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, options) {\n      this.fire('object:' + eventName, options);\n      options.target.fire(eventName, options);\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      }\n      else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      }\n      else {\n        return this.defaultCursor;\n      }\n    },\n\n    actionIsDisabled: function(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      }\n      else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      }\n      else if (corner === 'mtr') {\n        return target.lockRotation;\n      }\n      else {\n        return this._isUniscalePossible(e, target) ?\n          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.angle % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({ e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      // avoid multi select when shift click on a corner\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(e),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function(e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible || currentObject.onSelect({ e: e })) {\n          continue;\n        }\n\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2))\n        ) {\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n    }\n  });\n\n})();\n\n\n(function () {\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\n          canvasEl = this.toCanvasElement(multiplier, options);\n      return fabric.util.toDataURL(canvasEl, format, quality);\n    },\n\n    /**\n     * Create a new HTMLCanvas element painted with the current canvas content.\n     * No need to resize the actual one or repaint it.\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\n     * This is an intermediary step used to get to a dataUrl but also it is usefull to\n     * create quick image copies of a canvas without passing for the dataUrl string\n     * @param {Number} [multiplier] a zoom factor.\n     * @param {Object} [cropping] Cropping informations\n     * @param {Number} [cropping.left] Cropping left offset.\n     * @param {Number} [cropping.top] Cropping top offset.\n     * @param {Number} [cropping.width] Cropping width.\n     * @param {Number} [cropping.height] Cropping height.\n     */\n    toCanvasElement: function(multiplier, cropping) {\n      multiplier = multiplier || 1;\n      cropping = cropping || { };\n      var scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          originalWidth = this.width,\n          originalHeight = this.height,\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\n          originalInteractive = this.interactive,\n          originalContext = this.contextContainer,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          canvasEl = fabric.util.createCanvasElement();\n      canvasEl.width = scaledWidth;\n      canvasEl.height = scaledHeight;\n      this.interactive = false;\n      this.viewportTransform = newVp;\n      this.width = scaledWidth;\n      this.height = scaledHeight;\n      this.calcViewportBoundaries();\n      this.contextContainer = canvasEl.getContext('2d');\n      // will be renderAllExport();\n      this.renderAll();\n      this.viewportTransform = vp;\n      this.width = originalWidth;\n      this.height = originalHeight;\n      this.calcViewportBoundaries();\n      this.contextContainer = originalContext;\n      this.interactive = originalInteractive;\n      return canvasEl;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        enlivenedObjects.forEach(function(obj, index) {\n          // we splice the array just in case some custom classes restored from JSON\n          // will add more object to canvas at canvas init.\n          _this.insertAt(obj, index);\n        });\n        _this.renderOnAddRemove = renderOnAddRemove;\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        _this.renderAll();\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.util.createCanvasElement();\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument).\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When `false`, the stoke width will scale with the object.\n     * When `true`, the stroke will always match the exact pixel size entered for stroke width.\n     * default to false\n     * @since 2.6.0\n     * @type Boolean\n     * @default false\n     * @type Boolean\n     * @default false\n     */\n    strokeUniform:              false,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst clipPath strokeUniform'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' +\n      ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath'\n    ).split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n      // if canvas gets created, is empty, so dirty.\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var objectScale = this.getTotalObjectScaling(),\n          dim = this._getNonTransformedDimensions(),\n          zoomX = objectScale.scaleX,\n          zoomY = objectScale.scaleY,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly crating problem\n        // in situation in wich the cache canvas gets an upper limit\n        width: width + ALIASING_LIMIT,\n        height: height + ALIASING_LIMIT,\n        zoomX: zoomX,\n        zoomY: zoomY,\n        x: dim.x,\n        y: dim.y\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      var targetCanvas = this.canvas;\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x * zoomX / 2;\n        drawingHeight = dims.y * zoomY / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var m;\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      }\n      else {\n        m = this.calcOwnMatrix();\n      }\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeDashOffset:         this.strokeDashOffset,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS),\n          };\n\n      if (this.clipPath) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function() {\n      var scale = this.getObjectScaling(), scaleX = scale.scaleX, scaleY = scale.scaleY;\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 ||\n        (this.width === 0 && this.height === 0 && this.strokeWidth === 0) ||\n        !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    renderCache: function(options) {\n      options = options || {};\n      if (!this._cacheCanvas) {\n        this._createCacheCanvas();\n      }\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns false\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' && typeof this.shadow === 'object') {\n        return true;\n      }\n      if (this.clipPath) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching &&\n      (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCache: function(ctx) {\n      var path = this.clipPath;\n      ctx.save();\n      // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n      if (path.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      }\n      else {\n        ctx.globalCompositeOperation = 'destination-in';\n      }\n      //ctx.scale(1 / 2, 1 / 2);\n      if (path.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx, forClipping) {\n      var originalFill = this.fill, originalStroke = this.stroke;\n      if (forClipping) {\n        this.fill = 'black';\n        this.stroke = '';\n        this._setClippingProperties(ctx);\n      }\n      else {\n        this._renderBackground(ctx);\n        this._setStrokeStyles(ctx, this);\n        this._setFillStyles(ctx, this);\n      }\n      this._render(ctx);\n      this._drawClipPath(ctx);\n      this.fill = originalFill;\n      this.stroke = originalStroke;\n    },\n\n    _drawClipPath: function(ctx) {\n      var path = this.clipPath;\n      if (!path) { return; }\n      // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n      path.canvas = this.canvas;\n      path.shouldCache();\n      path._transformDone = true;\n      path.renderCache({ forClipping: true });\n      this.drawClipPathOnCache(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty ||\n          (this.clipPath && this.clipPath.absolutePositioned) ||\n          (this.statefullCache && this.hasStateChanged('cacheProperties'))\n        ) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive\n          ? decl.stroke.toLive(ctx, this)\n          : decl.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive\n          ? decl.fill.toLive(ctx, this)\n          : decl.fill;\n      }\n    },\n\n    _setClippingProperties: function(ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n      if (this.strokeUniform) {\n        ctx.setLineDash(ctx.getLineDash().map(function(value) { return value * ctx.lineWidth; }));\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var shadow = this.shadow, canvas = this.canvas,\n          multX = (canvas && canvas.viewportTransform[0]) || 1,\n          multY = (canvas && canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (canvas && canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = shadow.color;\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      if (this.strokeUniform) {\n        ctx.scale(1 / this.scaleX, 1 / this.scaleY);\n      }\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * could make use of both toDataUrl or toCanvasElement.\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var canvasEl = this.toCanvasElement(options);\n      if (callback) {\n        callback(new fabric.Image(canvasEl));\n      }\n      return this;\n    },\n\n    /**\n     * Converts an object into a HTMLCanvas element\n     * @param {Object} options Options object\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toCanvasElement: function(options) {\n      options || (options = { });\n\n      var utils = fabric.util, origParams = utils.saveObjectTransform(this),\n          originalShadow = this.shadow, abs = Math.abs,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\n\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n          boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow, scaling,\n          shadowOffset = { x: 0, y: 0 }, shadowBlur;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n        scaling = this.getObjectScaling();\n        shadowOffset.x = 2 * Math.round((abs(shadow.offsetX) + shadowBlur) * abs(scaling.scaleX));\n        shadowOffset.y = 2 * Math.round((abs(shadow.offsetY) + shadowBlur) * abs(scaling.scaleY));\n      }\n      el.width = boundingRect.width + shadowOffset.x;\n      el.height = boundingRect.height + shadowOffset.y;\n      el.width += el.width % 2 ? 2 - el.width % 2 : 0;\n      el.height += el.height % 2 ? 2 - el.height % 2 : 0;\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: false,\n        renderOnAddRemove: false,\n        skipOffscreen: false,\n      });\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n      this.shadow = originalShadow;\n      this.canvas = originalCanvas;\n      this.set(origParams).setCoords();\n      // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n\n      return canvasEl;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transformMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @param {Function} [callback] Callback to invoke when image set as a pattern\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * object.setPatternFill({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat'\n     * },canvas.renderAll.bind(canvas));\n     */\n    setPatternFill: function(options, callback) {\n      return this.set('fill', new fabric.Pattern(options, callback));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n        object.clipPath = enlivedProps[0];\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices,\n      transformPoint = fabric.util.transformPoint;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are usefull to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n          ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the objects containe the point\n     */\n    _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          vpt = this.getViewportTransform(),\n          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2, h = dim.y / 2,\n          tl = transformPoint({ x: -w, y: -h }, finalMatrix),\n          tr = transformPoint({ x: w, y: -h }, finalMatrix),\n          bl = transformPoint({ x: -w, y: h }, finalMatrix),\n          br = transformPoint({ x: w, y: h }, finalMatrix);\n      if (!absolute) {\n        var padding = this.padding, angle = degreesToRadians(this.angle),\n            cos = fabric.util.cos(angle), sin = fabric.util.sin(angle),\n            cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\n            cosPMinusSinP = cosP - sinP;\n        if (padding) {\n          tl.x -= cosPMinusSinP;\n          tl.y -= cosPSinP;\n          tr.x += cosPSinP;\n          tr.y -= cosPMinusSinP;\n          bl.x -= cosPSinP;\n          bl.y += cosPMinusSinP;\n          br.x += cosPMinusSinP;\n          br.y += cosPSinP;\n        }\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n      }\n\n      // if (!absolute) {\n      //   var canvas = this.canvas;\n      //   setTimeout(function() {\n      //     canvas.contextTop.clearRect(0, 0, 700, 700);\n      //     canvas.contextTop.fillStyle = 'green';\n      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n      //   }, 50);\n      // }\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height.\n     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = fabric.util.cos(theta), sin = fabric.util.sin(theta);\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function() {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this.calcOwnMatrix();\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this._calcTranslateMatrix(),\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(), dimX, dimY,\n          noSkew = skewX === 0 && skewY === 0;\n\n      if (this.strokeUniform) {\n        dimX = this.width;\n        dimY = this.height;\n      }\n      else {\n        dimX = dimensions.x;\n        dimY = dimensions.y;\n      }\n      if (noSkew) {\n        return this._finalizeDiemensions(dimX * this.scaleX, dimY * this.scaleY);\n      }\n      else {\n        dimX /= 2;\n        dimY /= 2;\n      }\n      var points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return this._finalizeDiemensions(bbox.width, bbox.height);\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @param Number width width of the bbox\n     * @param Number height height of the bbox\n     * @private\n     * @return {Object} .x finalized width dimension\n     * @return {Object} .y finalized height dimension\n     */\n    _finalizeDiemensions: function(width, height) {\n      return this.strokeUniform ?\n        { x: width + this.strokeWidth, y: height + this.strokeWidth }\n        :\n        { x: width, y: height };\n    },\n    /*\n     * Calculate object dimensions for controls. include padding and canvas zoom\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-dashoffset: ', strokeDashOffset, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ?\n        'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\n          '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        deltaY,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function(style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') +\n          (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function() {\n      return [\n        this.id ? 'id=\"' + this.id + '\" ' : '',\n        this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : '',\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function(full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = transform.map(function(value) {\n            return toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n          }).join(' ');\n      return 'transform=\"matrix(' + svgTransform + ')' +\n        (additionalTransform || '') + this.getSvgTransformMatrix() + '\" ';\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ')' : '';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(), { reviver: reviver });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [\n            this.getSvgTransform(true, additionalTransform),\n            this.getSvgCommons(),\n          ].join(''),\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function(objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle, withShadow = options.withShadow,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\n          absoluteClipPath = this.clipPath && this.clipPath.absolutePositioned,\n          commonPieces, markup = [], clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n          index = objectMarkup.indexOf('COMMON_PARTS'),\n          additionalTransform = options.additionalTransform;\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' +\n          this.clipPath.toClipPathSVG(reviver) +\n          '</clipPath>\\n';\n      }\n      if (absoluteClipPath) {\n        markup.push(\n          '<g ', shadowInfo, this.getSvgCommons(), ' >\\n'\n        );\n      }\n      markup.push(\n        '<g ',\n        this.getSvgTransform(false),\n        !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n        ' >\\n'\n      );\n      commonPieces = [\n        styleInfo,\n        vectorEffect,\n        noStyle ? '' : this.addPaintOrder(), ' ',\n        additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : '',\n      ].join('');\n      objectMarkup[index] = commonPieces;\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!currentValue ||\n          typeof currentValue !== 'object' ||\n          (!firstPass && keys.length !== Object.keys(currentValue).length)\n      ) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n        if (key === 'canvas') {\n          continue;\n        }\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\n            styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n            styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top, styleOverride);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top, styleOverride);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height, styleOverride);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top, styleOverride);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height, styleOverride);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2, styleOverride);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2, styleOverride);\n      }\n\n      // middle-top-rotate\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var p = this.calcLinePoints();\n      return [\n        '<line ', 'COMMON_PARTS',\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString, x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        svgString = [\n          '<circle ', 'COMMON_PARTS',\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" />\\n'\n        ];\n      }\n      else {\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\n            startY = fabric.util.sin(this.startAngle) * this.radius,\n            endX = fabric.util.cos(this.endAngle) * this.radius,\n            endY = fabric.util.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n        svgString = [\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" ', 'COMMON_PARTS', ' />\\n'\n        ];\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        this.startAngle,\n        this.endAngle, false);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ].join(',');\n      return [\n        '<polygon ', 'COMMON_PARTS',\n        'points=\"', points,\n        '\" />'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      return [\n        '<ellipse ', 'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback) {\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var x = -this.width / 2, y = -this.height / 2;\n      return [\n        '<rect ', 'COMMON_PARTS',\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.rx, '\" ry=\"', this.ry,\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      var calcDim = this._calcDimensions();\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      return [\n        '<' + this.type + ' ', 'COMMON_PARTS',\n        'points=\"', points.join(''),\n        '\" />\\n'\n      ];\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polygon(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      toFixed = fabric.util.toFixed,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n        top: this.top,\n        left: this.left,\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var path = this.path.map(function(path) {\n        return path.join(' ');\n      }).join(' ');\n      return [\n        '<path ', 'COMMON_PARTS',\n        'd=\"', path,\n        '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      ];\n    },\n\n    _getOffsetTransform: function() {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' +\n          toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return '\\t' + this._createBaseClipPathSVGMarkup(\n        this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform }\n      );\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n      return this._createBaseSVGMarkup(this._toSVG(), { reviver: reviver, additionalTransform: additionalTransform  });\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        }\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n      var objsToObject = this._objects.map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      this.ownCaching = ownCache;\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return fabric.Object.prototype.willDrawShadow.call(this);\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n      this._drawClipPath(ctx);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0, left = minXY.x || 0,\n          width = (maxXY.x - minXY.x) || 0,\n          height = (maxXY.y - minXY.y) || 0;\n      this.width = width;\n      this.height = height;\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({ x: left, y: top }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      return this._createBaseSVGMarkup(\n        svgString,\n        { reviver: reviver, noStyle: true, withShadow: true });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, { reviver: reviver });\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      fabric.util.enlivenObjects([object.clipPath], function(enlivedClipPath) {\n        var options = fabric.util.object.clone(object, true);\n        options.clipPath = enlivedClipPath[0];\n        delete options.objects;\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects.concat();\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function(object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\n     * This allows for relative urls as image src.\n     * @since 2.7.0\n     * @type Boolean\n     * @default\n     */\n    srcFromAttribute: false,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * @since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal fiters\n      // and is triggered by user interactions rather than dev code\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function(key) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function() {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach((function(element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }).bind(this));\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\n     * @return {Boolean}\n     */\n    hasCrop: function() {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function() {\n      var svgString = [], imageMarkup = [], strokeSvg,\n          x = -this.width / 2, y = -this.height / 2, clipPath = '';\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push(\n          '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n          '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\n          '</clipPath>\\n'\n        );\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', this._element.width || this._element.naturalWidth,\n        '\" height=\"', this._element.height || this._element.height,\n        '\"', clipPath,\n        '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = [\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        ];\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      }\n      else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n      return svgString;\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n\n        if (this.srcFromAttribute) {\n          return element.getAttribute('src');\n        }\n        else {\n          return element.src;\n        }\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        this.setElement(img, options);\n        this._setWidthHeight();\n        callback && callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (this.group) {\n        this.set('dirty', true);\n      }\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? (this.cacheKey + '_filtered') : this.cacheKey,\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter && !filter.isNeutralState(); });\n      this.set('dirty', true);\n\n      // needs to clear out or WEBGL will not resize correctly\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n        // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching && this.needsItsOwnCache();\n      return this.ownCaching;\n    },\n\n    _renderFill: function(ctx) {\n      var elementToDraw = this._element,\n          w = this.width, h = this.height,\n          sW = Math.min(elementToDraw.naturalWidth || elementToDraw.width, w * this._filterScalingX),\n          sH = Math.min(elementToDraw.naturalHeight || elementToDraw.height, h * this._filterScalingY),\n          x = -w / 2, y = -h / 2,\n          sX = Math.max(0, this.cropX * this._filterScalingX),\n          sY = Math.max(0, this.cropY * this._filterScalingY);\n\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, w, h);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      var scale = this.getTotalObjectScaling();\n      return (scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjects([object.clipPath], function(enlivedProps) {\n            object.clipPath = enlivedProps[0];\n            var image = new fabric.Image(img, object);\n            callback(image);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined';\n      var canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n            alpha: true,\n            premultipliedAlpha: false,\n            depth: false,\n            stencil: false,\n            antialias: false\n          },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl, gpuInfo = { renderer: '', vendor: '' };\n      if (!gl) {\n        return gpuInfo;\n      }\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image = fabric.Image || { };\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n        return true;\n      }\n      else {\n        return _class[main] === this[main];\n      }\n    }\n    else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function() {\n      return false;\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function() {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' +\n          'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n        '}\\n' +\n        'if (uColor.g < 0.5) {\\n' +\n          'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n        '}\\n' +\n        'if (uColor.b < 0.5) {\\n' +\n          'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n        '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n        'gl_FragColor.rgb += uColor.rgb;\\n',\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function(mode) {\n      return 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor = color;\\n' +\n          'if (color.a > 0.0) {\\n' +\n            this.fragmentSource[mode] +\n          '}\\n' +\n        '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode, shaderSource;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aPosition;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      else {\n        context.clearRect(0, 0, width, height);\n      }\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function() {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n\n    isNeutralState: function() {\n      return !this.subFilters.some(function(filter) { return !filter.isNeutralState(); });\n    }\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function(options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size:      0.60, // fontSize factor\n      baseline: -0.35  // baseline-shift factor (upwards)\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size:      0.60, // fontSize factor\n      baseline:  0.11  // baseline-shift factor (downwards)\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - charater numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, stlyes only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'deltaY',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + boxStart,\n            topOffset + lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n\n      this._setFillStyles(ctx, styleDeclaration);\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line number\n     * @param {Number} char the character number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function(line, char) {\n      return this.getValueOfPropertyAt(line, char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width, charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n          // emptylines\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset - offsets.offsetX,\n          top + lineHeights + maxHeight - offsets.offsetY,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n        ctx.restore();\n        return;\n      }\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function(start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function(start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function(start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.deltaY !== thisStyle.deltaY;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\n        prevStyle.overline !== thisStyle.overline ||\n        prevStyle.underline !== thisStyle.underline ||\n        prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width, line = this._textLines[lineIndex], lineInfo;\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the charater number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine, size, _size,\n          lineLeftOffset, dy, _dy,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(), top,\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill,\n          charSpacing = this._getWidthOfCharSpacing();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) &&\n              boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              top + this.offsets[type] * size + dy,\n              boxWidth,\n              this.fontSize / 15\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          leftOffset + lineLeftOffset + boxStart,\n          top + this.offsets[type] * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this, family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined ||\n      family.indexOf('\\'') > -1 ||\n      family.indexOf('\"') > -1 || fontIsGeneric\n        ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        fontFamily\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'underline',\n        'overline',\n        'linethrough',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing',\n      ].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\n          allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            }\n            else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          }\n          else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n      var len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n        ctx.save();\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        skipRestore || ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(), ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        this.clearContextTop(true);\n      }\n      else {\n        ctx = this.canvas.contextContainer;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top + dy,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            var charSpacing = this._getWidthOfCharSpacing();\n            boxEnd = this.__charBounds[endLine][endChar - 1].left\n              + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset + lineHeight,\n            boxEnd - boxStart,\n            1);\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset,\n            boxEnd - boxStart,\n            lineHeight);\n        }\n\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    parseDecoration(object);\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPostion),\n          cursorLocation = this.get2DCursorLocation(desiredPostion),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width,\n          upperCanvasHeight = upperCanvas.height,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          delete this.styles[lineIndex][index];\n        }\n      }\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      }\n      else {\n        delete this.styles[lineIndex + qty];\n      }\n      // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 1) {\n        qty--;\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objecs\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLenght = 0;\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLenght++;\n          addedLines[linesLenght] = 0;\n        }\n        else {\n          addedLines[linesLenght]++;\n        }\n      }\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLenght && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);\n      for (var i = 1; i < linesLenght; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        }\n        else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function(options) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n    if (this === this.canvas._activeObject) {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard hander for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function(options) {\n    this.__isMousedown = false;\n    if (!this.editable || this.group ||\n      (options.transform && options.transform.actionPerformed) ||\n      (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      }\n      else {\n        this.renderCursorOrSelection();\n      }\n    }\n    else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + 1;\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      }\n      else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      }\n      else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      }\n      else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft),\n          internalMarkup = this._wrapSVGTextAndBg(textAndBg);\n      return this._createBaseSVGMarkup(\n        internalMarkup, { reviver: reviver, noStyle: true, withShadow: true });\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\n        textAndBg.textSpans.join(''),\n        '</text>\\n'\n      ];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY, dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n      return [\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Use this regular expression to split strings in breakable lines\n     * @private\n     */\n    _wordJoiners: /[ \\t\\r]/,\n\n    /**\n     * Use this boolean property in order to split strings that have no white space concept.\n     * this is a cheap way to help with chinese/japaense\n     * @type Boolean\n     * @since 2.6.0\n     */\n    splitByGrapheme: false,\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (!this.graphemeSplit && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false;\n      var map = this._styleMap[lineIndex];\n      var mapNextLine = this._styleMap[lineIndex + 1];\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n      obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n    * probably broken need a fix\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * probably broken need a fix\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * probably broken need a fix\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth = 0,\n          splitByGrapheme = this.splitByGrapheme,\n          graphemeLines = [],\n          line = [],\n          // spaces in different languges?\n          words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\n          word = '',\n          offset = 0,\n          infix = splitByGrapheme ? '' : ' ',\n          wordWidth = 0,\n          infixWidth = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = splitByGrapheme ? 0 : this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0;\n\n      desiredWidth -= reservedSpace;\n      for (var i = 0; i < words.length; i++) {\n        // i would avoid resplitting the graphemes\n        word = fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted && !splitByGrapheme) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n    lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target, scaled,\n        scaleX = localMouse.x * t.scaleX / _dim.x,\n        scaleY = localMouse.y * t.scaleY / _dim.y;\n    if (by === 'x' && t instanceof fabric.Textbox) {\n      var tw = t._getTransformedDimensions().x;\n      var w = t.width * (localMouse.x / tw);\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      if (w >= t.getMinWidth()) {\n        scaled = w !== t.width;\n        t.set('width', w);\n        return scaled;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n  });\n})();\n\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// 19.1.3.10 Object.is(value1, value2)\nvar $export = require('./_export');\n$export($export.S, 'Object', { is: require('./_same-value') });\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = camelize;\nvar rHyphen = /-(.)/g;\n\nfunction camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}\n\nmodule.exports = exports[\"default\"];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  as: 'div'\n};\nvar Col = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  role: 'toolbar'\n};\nvar ButtonToolbar = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-toolbar');\n  return React.createElement(\"div\", _extends({}, props, {\n    ref: ref,\n    className: classNames(className, prefix)\n  }));\n});\nButtonToolbar.displayName = 'ButtonToolbar';\nButtonToolbar.defaultProps = defaultProps;\nexport default ButtonToolbar;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport camelize from 'dom-helpers/util/camelize';\nimport { useBootstrapPrefix } from '../ThemeProvider';\n\nvar pascalCase = function pascalCase(str) {\n  return str[0].toUpperCase() + camelize(str).slice(1);\n};\n\nexport default function createWithBsPrefix(prefix, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$displayName = _ref.displayName,\n      displayName = _ref$displayName === void 0 ? pascalCase(prefix) : _ref$displayName,\n      _ref$Component = _ref.Component,\n      Component = _ref$Component === void 0 ? 'div' : _ref$Component,\n      defaultProps = _ref.defaultProps;\n\n  var BsComponent = React.forwardRef( // eslint-disable-next-line react/prop-types\n  function (_ref2, ref) {\n    var className = _ref2.className,\n        bsPrefix = _ref2.bsPrefix,\n        _ref2$as = _ref2.as,\n        Tag = _ref2$as === void 0 ? Component : _ref2$as,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"className\", \"bsPrefix\", \"as\"]);\n\n    var resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return React.createElement(Tag, _extends({\n      ref: ref,\n      className: classNames(className, resolvedPrefix)\n    }, props));\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import React from 'react';\nvar FormContext = React.createContext({\n  controlId: undefined\n});\nexport default FormContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  as: 'div'\n};\nvar FormGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      controlId = _ref.controlId,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"controlId\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-group');\n  var context = useMemo(function () {\n    return {\n      controlId: controlId\n    };\n  }, [controlId]);\n  return React.createElement(FormContext.Provider, {\n    value: context\n  }, React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }), children));\n});\nFormGroup.displayName = 'FormGroup';\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string.isRequired,\n  as: PropTypes.elementType\n};\nvar defaultProps = {\n  type: 'valid',\n  as: 'div'\n};\nvar Feedback = React.forwardRef(function (_ref, ref) {\n  var Component = _ref.as,\n      className = _ref.className,\n      type = _ref.type,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"type\"]);\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, type && type + \"-feedback\")\n  }));\n});\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nFeedback.defaultProps = defaultProps;\nexport default Feedback;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  as: 'input'\n};\nvar FormControl = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      type = _ref.type,\n      size = _ref.size,\n      id = _ref.id,\n      className = _ref.className,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      plaintext = _ref.plaintext,\n      readOnly = _ref.readOnly,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"type\", \"size\", \"id\", \"className\", \"isValid\", \"isInvalid\", \"plaintext\", \"readOnly\", \"as\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  var classes;\n\n  if (plaintext) {\n    var _classes;\n\n    classes = (_classes = {}, _classes[bsPrefix + \"-plaintext\"] = true, _classes);\n  } else if (type === 'file') {\n    var _classes2;\n\n    classes = (_classes2 = {}, _classes2[bsPrefix + \"-file\"] = true, _classes2);\n  } else {\n    var _classes3;\n\n    classes = (_classes3 = {}, _classes3[bsPrefix] = true, _classes3[bsPrefix + \"-\" + size] = size, _classes3);\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return React.createElement(Component, _extends({}, props, {\n    type: type,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && \"is-valid\", isInvalid && \"is-invalid\")\n  }));\n});\nFormControl.displayName = 'FormControl';\nFormControl.defaultProps = defaultProps;\nFormControl.Feedback = Feedback;\nexport default FormControl;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nvar defaultProps = {\n  type: 'checkbox'\n};\nvar FormCheckInput = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      isStatic = _ref.isStatic,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"className\", \"isValid\", \"isInvalid\", \"isStatic\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  return React.createElement(\"input\", _extends({}, props, {\n    ref: ref,\n    id: id || controlId,\n    className: classNames(className, !custom && bsPrefix, custom && 'custom-control-input', isValid && 'is-valid', isInvalid && 'is-invalid', isStatic && 'position-static')\n  }));\n});\nFormCheckInput.displayName = 'FormCheckInput';\nFormCheckInput.defaultProps = defaultProps;\nexport default FormCheckInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nvar defaultProps = {\n  type: 'checkbox'\n};\nvar FormCheckLabel = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"htmlFor\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId,\n      custom = _useContext.custom;\n\n  return React.createElement(\"label\", _extends({}, props, {\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, !custom && bsPrefix, custom && 'custom-control-label')\n  }));\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nFormCheckLabel.defaultProps = defaultProps;\nexport default FormCheckLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext, useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nvar defaultProps = {\n  type: 'checkbox',\n  inline: false,\n  disabled: false,\n  isValid: false,\n  isInvalid: false,\n  title: ''\n};\nvar FormCheck = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      inline = _ref.inline,\n      disabled = _ref.disabled,\n      isValid = _ref.isValid,\n      isInvalid = _ref.isInvalid,\n      feedback = _ref.feedback,\n      className = _ref.className,\n      style = _ref.style,\n      title = _ref.title,\n      type = _ref.type,\n      label = _ref.label,\n      children = _ref.children,\n      custom = _ref.custom,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"inline\", \"disabled\", \"isValid\", \"isInvalid\", \"feedback\", \"className\", \"style\", \"title\", \"type\", \"label\", \"children\", \"custom\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  var innerFormContext = useMemo(function () {\n    return {\n      controlId: id || controlId,\n      custom: custom\n    };\n  }, [controlId, custom, id]);\n  var hasLabel = label != null && label !== false && !children;\n  var input = React.createElement(FormCheckInput, _extends({}, props, {\n    type: type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    isStatic: !hasLabel,\n    disabled: disabled\n  }));\n  return React.createElement(FormContext.Provider, {\n    value: innerFormContext\n  }, React.createElement(\"div\", {\n    style: style,\n    className: classNames(className, !custom && bsPrefix, custom && \"custom-control custom-\" + type, inline && (custom ? 'custom-control' : bsPrefix) + \"-inline\")\n  }, children || React.createElement(React.Fragment, null, input, hasLabel && React.createElement(FormCheckLabel, {\n    title: title\n  }, label), (isValid || isInvalid) && React.createElement(Feedback, {\n    type: isValid ? 'valid' : 'invalid'\n  }, feedback))));\n});\nFormCheck.displayName = 'FormCheck';\nFormCheck.defaultProps = defaultProps;\nFormCheck.Input = FormCheckInput;\nFormCheck.Label = FormCheckLabel;\nexport default FormCheck;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  column: false,\n  srOnly: false\n};\nvar FormLabel = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      column = _ref.column,\n      srOnly = _ref.srOnly,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"column\", \"srOnly\", \"className\", \"htmlFor\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  var classes = classNames(className, bsPrefix, srOnly && 'sr-only', column && 'col-form-label');\n  if (column) return React.createElement(Col, _extends({}, props, {\n    className: classes,\n    as: \"label\"\n  }));\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  return (// eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    React.createElement(\"label\", _extends({}, props, {\n      htmlFor: htmlFor || controlId,\n      ref: ref,\n      className: classes\n    }))\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  as: 'small'\n};\nvar FormText = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }));\n});\nFormText.displayName = 'FormText';\nFormText.defaultProps = defaultProps;\nexport default FormText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './utils/createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormGroup from './FormGroup';\nimport FormControl from './FormControl';\nimport FormCheck from './FormCheck';\nimport FormLabel from './FormLabel';\nimport FormText from './FormText';\nvar defaultProps = {\n  inline: false,\n  as: 'form'\n};\nvar Form = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      inline = _ref.inline,\n      className = _ref.className,\n      validated = _ref.validated,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"inline\", \"className\", \"validated\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form');\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, validated && 'was-validated', inline && bsPrefix + \"-inline\")\n  }));\n});\nForm.displayName = 'Form';\nForm.defaultProps = defaultProps;\nForm.Row = createWithBsPrefix('form-row');\nForm.Group = FormGroup;\nForm.Control = FormControl;\nForm.Check = FormCheck;\nForm.Label = FormLabel;\nForm.Text = FormText;\nexport default Form;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.filter(function (f) {\n    return f != null;\n  }).reduce(function (acc, f) {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport createChainedFunction from './utils/createChainedFunction';\nvar defaultProps = {\n  as: 'a'\n};\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nvar SafeAnchor =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(SafeAnchor, _React$Component);\n\n  function SafeAnchor(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    _this.handleKeyDown = _this.handleKeyDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = SafeAnchor.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var _this$props = this.props,\n        disabled = _this$props.disabled,\n        href = _this$props.href,\n        onClick = _this$props.onClick;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      this.handleClick(event);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        Component = _this$props2.as,\n        disabled = _this$props2.disabled,\n        onKeyDown = _this$props2.onKeyDown,\n        innerRef = _this$props2.innerRef,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"as\", \"disabled\", \"onKeyDown\", \"innerRef\"]);\n\n    if (isTrivialHref(props.href)) {\n      props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n      // otherwise, the cursor incorrectly styled (except with role='button')\n\n      props.href = props.href || '#';\n    }\n\n    if (disabled) {\n      props.tabIndex = -1;\n      props['aria-disabled'] = true;\n    }\n\n    if (innerRef) props.ref = innerRef;\n    return React.createElement(Component, _extends({}, props, {\n      onClick: this.handleClick,\n      onKeyDown: createChainedFunction(this.handleKeyDown, onKeyDown)\n    }));\n  };\n\n  return SafeAnchor;\n}(React.Component);\n\nSafeAnchor.defaultProps = defaultProps;\nexport default SafeAnchor;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false,\n  type: 'button'\n};\nvar Button = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      innerRef: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  var Component = as || 'button';\n  if (ref) props.ref = ref;\n  return React.createElement(Component, _extends({}, props, {\n    type: type,\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}